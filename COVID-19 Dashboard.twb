<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20224.22.1117.1841                               -->
<workbook original-version='18.1' source-build='2022.4.0 (20224.22.1117.1841)' source-platform='mac' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='Book1_v2022_3' path='/workbooks' revision='1.2' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='excel (Countries with count of cases (infection rate) )' inline='true' name='federated.0gm5j261befyul1cwg0zt16ekm3d' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Countries with the highest count of cases (infection rate)' name='excel-direct.0k2kghl14r7zf114iwqtt0m4s3yx'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/jenn/Desktop/Projects/covid/tableau tables/Countries with the highest count of cases (infection rate) .xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0k2kghl14r7zf114iwqtt0m4s3yx' name='excel' table='[excel$]' type='table'>
          <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='2'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='integer' name='Infection Count' ordinal='2' />
            <column datatype='real' name='Infection Rate' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0k2kghl14r7zf114iwqtt0m4s3yx' name='excel' table='[excel$]' type='table'>
          <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='2'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='integer' name='Infection Count' ordinal='2' />
            <column datatype='real' name='Infection Rate' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[excel]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D220:no:A1:D220:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[excel]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[excel_239F6FD3ECBE40B3B048CA0AD039A8BF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[excel]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[excel_239F6FD3ECBE40B3B048CA0AD039A8BF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Infection Count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Infection Count]</local-name>
            <parent-name>[excel]</parent-name>
            <remote-alias>Infection Count</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[excel_239F6FD3ECBE40B3B048CA0AD039A8BF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Infection Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Infection Rate]</local-name>
            <parent-name>[excel]</parent-name>
            <remote-alias>Infection Rate</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[excel_239F6FD3ECBE40B3B048CA0AD039A8BF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total Cases' datatype='integer' name='[Infection Count]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='excel' datatype='table' name='[__tableau_internal_object_id__].[excel_239F6FD3ECBE40B3B048CA0AD039A8BF]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/jenn/Documents/My Tableau Repository/Datasources/excel (Countries with count of cases (infection rate) ).hyper' default-settings='yes' schema='Extract' sslmode='' update-time='04/01/2023 05:49:43 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='excel (Countries with count of cases (infection rate) )' increment-value='%null%' refresh-type='create' rows-inserted='219' timestamp-start='2023-04-01 17:49:43.653' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>excel</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>219</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>1</ordinal>
              <family>excel</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>218</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Infection Count</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Infection Count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Infection Count</remote-alias>
              <ordinal>2</ordinal>
              <family>excel</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>200</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Infection Rate</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Infection Rate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Infection Rate</remote-alias>
              <ordinal>3</ordinal>
              <family>excel</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>197</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;European Union&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;International&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;World&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='excel' id='excel_239F6FD3ECBE40B3B048CA0AD039A8BF'>
            <properties context=''>
              <relation connection='excel-direct.0k2kghl14r7zf114iwqtt0m4s3yx' name='excel' table='[excel$]' type='table'>
                <columns gridOrigin='A1:D220:no:A1:D220:0' header='yes' outcome='2'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='population' ordinal='1' />
                  <column datatype='integer' name='Infection Count' ordinal='2' />
                  <column datatype='real' name='Infection Rate' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='excel (death rate and mort rate per continent)' inline='true' name='federated.0lysh151d7hi6n14twags0t8f9qs' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='death rate and mort rate per continent' name='excel-direct.0z1jhq81uob3q91cb71jd0zvqhdx'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/jenn/Desktop/Projects/covid/tableau tables/death rate and mort rate per continent.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0z1jhq81uob3q91cb71jd0zvqhdx' name='excel' table='[excel$]' type='table'>
          <columns gridOrigin='A1:E7:no:A1:E7:0' header='yes' outcome='6'>
            <column datatype='string' name='continent' ordinal='0' />
            <column datatype='integer' name='SUM(total_deaths)' ordinal='1' />
            <column datatype='integer' name='SUM(total_cases)' ordinal='2' />
            <column datatype='real' name='Mortality Rate' ordinal='3' />
            <column datatype='real' name='Death Rate' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0z1jhq81uob3q91cb71jd0zvqhdx' name='excel' table='[excel$]' type='table'>
          <columns gridOrigin='A1:E7:no:A1:E7:0' header='yes' outcome='6'>
            <column datatype='string' name='continent' ordinal='0' />
            <column datatype='integer' name='SUM(total_deaths)' ordinal='1' />
            <column datatype='integer' name='SUM(total_cases)' ordinal='2' />
            <column datatype='real' name='Mortality Rate' ordinal='3' />
            <column datatype='real' name='Death Rate' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[excel]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E7:no:A1:E7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[excel]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[excel_06209F26D28940CC8981944A4AB08E26]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SUM(total_deaths)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SUM(total_deaths)]</local-name>
            <parent-name>[excel]</parent-name>
            <remote-alias>SUM(total_deaths)</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[excel_06209F26D28940CC8981944A4AB08E26]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SUM(total_cases)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SUM(total_cases)]</local-name>
            <parent-name>[excel]</parent-name>
            <remote-alias>SUM(total_cases)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[excel_06209F26D28940CC8981944A4AB08E26]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Mortality Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Mortality Rate]</local-name>
            <parent-name>[excel]</parent-name>
            <remote-alias>Mortality Rate</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[excel_06209F26D28940CC8981944A4AB08E26]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Death Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Death Rate]</local-name>
            <parent-name>[excel]</parent-name>
            <remote-alias>Death Rate</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[excel_06209F26D28940CC8981944A4AB08E26]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[Death Rate]' role='measure' type='quantitative' />
      <column datatype='real' name='[Mortality Rate]' role='measure' type='quantitative' />
      <column caption='SUM(total cases)' datatype='integer' name='[SUM(total_cases)]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[SUM(total_deaths)]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='excel' datatype='table' name='[__tableau_internal_object_id__].[excel_06209F26D28940CC8981944A4AB08E26]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column-instance column='[Death Rate]' derivation='Sum' name='[sum:Death Rate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Mortality Rate]' derivation='Sum' name='[sum:Mortality Rate:qk]' pivot='key' type='quantitative' />
      <column-instance column='[SUM(total_deaths)]' derivation='Sum' name='[sum:SUM(total_deaths):qk]' pivot='key' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/jenn/Documents/My Tableau Repository/Datasources/excel (death rate and mort rate per continent).hyper' default-settings='yes' schema='Extract' sslmode='' update-time='04/01/2023 05:49:45 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='excel (death rate and mort rate per continent)' increment-value='%null%' refresh-type='create' rows-inserted='6' timestamp-start='2023-04-01 17:49:45.865' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>continent</remote-name>
              <remote-type>129</remote-type>
              <local-name>[continent]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>continent</remote-alias>
              <ordinal>0</ordinal>
              <family>excel</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SUM(total_deaths)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[SUM(total_deaths)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SUM(total_deaths)</remote-alias>
              <ordinal>1</ordinal>
              <family>excel</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SUM(total_cases)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[SUM(total_cases)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SUM(total_cases)</remote-alias>
              <ordinal>2</ordinal>
              <family>excel</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Mortality Rate</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Mortality Rate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Mortality Rate</remote-alias>
              <ordinal>3</ordinal>
              <family>excel</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Death Rate</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Death Rate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Death Rate</remote-alias>
              <ordinal>4</ordinal>
              <family>excel</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0lysh151d7hi6n14twags0t8f9qs].[sum:Death Rate:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0lysh151d7hi6n14twags0t8f9qs].[sum:Mortality Rate:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0lysh151d7hi6n14twags0t8f9qs].[sum:SUM(total_deaths):qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='excel' id='excel_06209F26D28940CC8981944A4AB08E26'>
            <properties context=''>
              <relation connection='excel-direct.0z1jhq81uob3q91cb71jd0zvqhdx' name='excel' table='[excel$]' type='table'>
                <columns gridOrigin='A1:E7:no:A1:E7:0' header='yes' outcome='6'>
                  <column datatype='string' name='continent' ordinal='0' />
                  <column datatype='integer' name='SUM(total_deaths)' ordinal='1' />
                  <column datatype='integer' name='SUM(total_cases)' ordinal='2' />
                  <column datatype='real' name='Mortality Rate' ordinal='3' />
                  <column datatype='real' name='Death Rate' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='excel (new cases new vacc over time)' inline='true' name='federated.0uk1psd0qhfbsz1asfdkz1v0dfpr' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='new cases new vacc over time' name='excel-direct.1e44j6u06hgjf41fd17211x872w7'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/jenn/Desktop/Projects/covid/tableau tables/new cases new vacc over time.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1e44j6u06hgjf41fd17211x872w7' name='excel' table='[excel$]' type='table'>
          <columns gridOrigin='A1:D138:no:A1:D138:0' header='yes' outcome='2'>
            <column datatype='date' date-parse-format='MM/dd/yyyy' name='date' ordinal='0' />
            <column datatype='integer' name='SUM(new_cases)' ordinal='1' />
            <column datatype='integer' name='SUM(total_deaths)' ordinal='2' />
            <column datatype='integer' name='SUM(new_vaccinations)' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1e44j6u06hgjf41fd17211x872w7' name='excel' table='[excel$]' type='table'>
          <columns gridOrigin='A1:D138:no:A1:D138:0' header='yes' outcome='2'>
            <column datatype='date' date-parse-format='MM/dd/yyyy' name='date' ordinal='0' />
            <column datatype='integer' name='SUM(new_cases)' ordinal='1' />
            <column datatype='integer' name='SUM(total_deaths)' ordinal='2' />
            <column datatype='integer' name='SUM(new_vaccinations)' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[excel]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D138:no:A1:D138:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[excel]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[excel_4787CD68D99B49F5B4500247ECF0D142]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SUM(new_cases)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SUM(new_cases)]</local-name>
            <parent-name>[excel]</parent-name>
            <remote-alias>SUM(new_cases)</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[excel_4787CD68D99B49F5B4500247ECF0D142]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SUM(total_deaths)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SUM(total_deaths)]</local-name>
            <parent-name>[excel]</parent-name>
            <remote-alias>SUM(total_deaths)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[excel_4787CD68D99B49F5B4500247ECF0D142]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SUM(new_vaccinations)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SUM(new_vaccinations)]</local-name>
            <parent-name>[excel]</parent-name>
            <remote-alias>SUM(new_vaccinations)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[excel_4787CD68D99B49F5B4500247ECF0D142]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='SUM(new cases)' datatype='integer' name='[SUM(new_cases)]' role='measure' type='quantitative' />
      <column caption='SUM(new vaccinations)' datatype='integer' name='[SUM(new_vaccinations)]' role='measure' type='quantitative' />
      <column caption='SUM(total deaths)' datatype='integer' name='[SUM(total_deaths)]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='excel' datatype='table' name='[__tableau_internal_object_id__].[excel_4787CD68D99B49F5B4500247ECF0D142]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/jenn/Documents/My Tableau Repository/Datasources/excel (new cases new vacc over time).hyper' default-settings='yes' schema='Extract' sslmode='' update-time='04/01/2023 05:49:48 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='excel (new cases new vacc over time)' increment-value='%null%' refresh-type='create' rows-inserted='137' timestamp-start='2023-04-01 17:49:48.214' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>0</ordinal>
              <family>excel</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>137</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[excel_4787CD68D99B49F5B4500247ECF0D142]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SUM(new_cases)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[SUM(new_cases)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SUM(new_cases)</remote-alias>
              <ordinal>1</ordinal>
              <family>excel</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>137</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[excel_4787CD68D99B49F5B4500247ECF0D142]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SUM(total_deaths)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[SUM(total_deaths)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SUM(total_deaths)</remote-alias>
              <ordinal>2</ordinal>
              <family>excel</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>137</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[excel_4787CD68D99B49F5B4500247ECF0D142]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SUM(new_vaccinations)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[SUM(new_vaccinations)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SUM(new_vaccinations)</remote-alias>
              <ordinal>3</ordinal>
              <family>excel</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>137</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[excel_4787CD68D99B49F5B4500247ECF0D142]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='excel' id='excel_4787CD68D99B49F5B4500247ECF0D142'>
            <properties context=''>
              <relation connection='excel-direct.1e44j6u06hgjf41fd17211x872w7' name='excel' table='[excel$]' type='table'>
                <columns gridOrigin='A1:D138:no:A1:D138:0' header='yes' outcome='2'>
                  <column datatype='date' date-parse-format='MM/dd/yyyy' name='date' ordinal='0' />
                  <column datatype='integer' name='SUM(new_cases)' ordinal='1' />
                  <column datatype='integer' name='SUM(total_deaths)' ordinal='2' />
                  <column datatype='integer' name='SUM(new_vaccinations)' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='excel (Global numbers)' inline='true' name='federated.10vltuc17drhff13dgeaw0h9riro' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Global numbers' name='excel-direct.1hlccgf05rmkpk18xyga010e1krm'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/jenn/Desktop/Projects/covid/tableau tables/Global numbers.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1hlccgf05rmkpk18xyga010e1krm' name='excel' table='[excel$]' type='table'>
          <columns gridOrigin='A1:E2:no:A1:E2:0' header='yes' outcome='6'>
            <column datatype='integer' name='SUM(total_deaths)' ordinal='0' />
            <column datatype='integer' name='SUM(total_cases)' ordinal='1' />
            <column datatype='integer' name='SUM(total_vaccinations)' ordinal='2' />
            <column datatype='real' name='case-fatality rate' ordinal='3' />
            <column datatype='real' name='Death Rate' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1hlccgf05rmkpk18xyga010e1krm' name='excel' table='[excel$]' type='table'>
          <columns gridOrigin='A1:E2:no:A1:E2:0' header='yes' outcome='6'>
            <column datatype='integer' name='SUM(total_deaths)' ordinal='0' />
            <column datatype='integer' name='SUM(total_cases)' ordinal='1' />
            <column datatype='integer' name='SUM(total_vaccinations)' ordinal='2' />
            <column datatype='real' name='case-fatality rate' ordinal='3' />
            <column datatype='real' name='Death Rate' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[excel]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E2:no:A1:E2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SUM(total_deaths)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SUM(total_deaths)]</local-name>
            <parent-name>[excel]</parent-name>
            <remote-alias>SUM(total_deaths)</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[excel_F0FECBEE4D7443D3BE633051339034F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SUM(total_cases)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SUM(total_cases)]</local-name>
            <parent-name>[excel]</parent-name>
            <remote-alias>SUM(total_cases)</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[excel_F0FECBEE4D7443D3BE633051339034F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SUM(total_vaccinations)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SUM(total_vaccinations)]</local-name>
            <parent-name>[excel]</parent-name>
            <remote-alias>SUM(total_vaccinations)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[excel_F0FECBEE4D7443D3BE633051339034F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>case-fatality rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[case-fatality rate]</local-name>
            <parent-name>[excel]</parent-name>
            <remote-alias>case-fatality rate</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[excel_F0FECBEE4D7443D3BE633051339034F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Death Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Death Rate]</local-name>
            <parent-name>[excel]</parent-name>
            <remote-alias>Death Rate</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[excel_F0FECBEE4D7443D3BE633051339034F5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.10vltuc17drhff13dgeaw0h9riro].[sum:SUM(total_cases):qk]&quot;' value='Total Cases' />
          <alias key='&quot;[federated.10vltuc17drhff13dgeaw0h9riro].[sum:SUM(total_deaths):qk]&quot;' value='Total Deaths' />
          <alias key='&quot;[federated.10vltuc17drhff13dgeaw0h9riro].[sum:SUM(total_vaccinations):qk]&quot;' value='Total Vaccinations' />
        </aliases>
      </column>
      <column caption='SUM(total cases)' datatype='integer' name='[SUM(total_cases)]' role='measure' type='quantitative' />
      <column caption='SUM(total deaths)' datatype='integer' name='[SUM(total_deaths)]' role='measure' type='quantitative' />
      <column caption='SUM(total vaccinations)' datatype='integer' name='[SUM(total_vaccinations)]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='excel' datatype='table' name='[__tableau_internal_object_id__].[excel_F0FECBEE4D7443D3BE633051339034F5]' role='measure' type='quantitative' />
      <column caption='Case-Fatality Rate' datatype='real' name='[case-fatality rate]' role='measure' type='quantitative' />
      <column-instance column='[SUM(total_cases)]' derivation='Sum' name='[sum:SUM(total_cases):qk]' pivot='key' type='quantitative' />
      <column-instance column='[SUM(total_deaths)]' derivation='Sum' name='[sum:SUM(total_deaths):qk]' pivot='key' type='quantitative' />
      <column-instance column='[SUM(total_vaccinations)]' derivation='Sum' name='[sum:SUM(total_vaccinations):qk]' pivot='key' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/jenn/Documents/My Tableau Repository/Datasources/excel (Global numbers).hyper' default-settings='yes' schema='Extract' sslmode='' update-time='04/01/2023 05:49:50 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='excel (Global numbers)' increment-value='%null%' refresh-type='create' rows-inserted='1' timestamp-start='2023-04-01 17:49:50.522' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>SUM(total_deaths)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[SUM(total_deaths)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SUM(total_deaths)</remote-alias>
              <ordinal>0</ordinal>
              <family>excel</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SUM(total_cases)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[SUM(total_cases)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SUM(total_cases)</remote-alias>
              <ordinal>1</ordinal>
              <family>excel</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SUM(total_vaccinations)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[SUM(total_vaccinations)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SUM(total_vaccinations)</remote-alias>
              <ordinal>2</ordinal>
              <family>excel</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>case-fatality rate</remote-name>
              <remote-type>5</remote-type>
              <local-name>[case-fatality rate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>case-fatality rate</remote-alias>
              <ordinal>3</ordinal>
              <family>excel</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Death Rate</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Death Rate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Death Rate</remote-alias>
              <ordinal>4</ordinal>
              <family>excel</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='excel' id='excel_F0FECBEE4D7443D3BE633051339034F5'>
            <properties context=''>
              <relation connection='excel-direct.1hlccgf05rmkpk18xyga010e1krm' name='excel' table='[excel$]' type='table'>
                <columns gridOrigin='A1:E2:no:A1:E2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='SUM(total_deaths)' ordinal='0' />
                  <column datatype='integer' name='SUM(total_cases)' ordinal='1' />
                  <column datatype='integer' name='SUM(total_vaccinations)' ordinal='2' />
                  <column datatype='real' name='case-fatality rate' ordinal='3' />
                  <column datatype='real' name='Death Rate' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='excel (new cases over time)' inline='true' name='federated.18qkq0q01j6lsc15gauta1ne2ci4' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='new cases over time' name='excel-direct.1r8b1pq1wd6ebj19z35e10e2ank0'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/jenn/Desktop/Projects/covid/tableau tables/new cases over time.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1r8b1pq1wd6ebj19z35e10e2ank0' name='excel' table='[excel$]' type='table'>
          <columns gridOrigin='A1:C465:no:A1:C465:0' header='yes' outcome='2'>
            <column datatype='date' date-parse-format='MM/dd/yyyy' name='date' ordinal='0' />
            <column datatype='integer' name='SUM(new_cases)' ordinal='1' />
            <column datatype='integer' name='SUM(total_deaths)' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1r8b1pq1wd6ebj19z35e10e2ank0' name='excel' table='[excel$]' type='table'>
          <columns gridOrigin='A1:C465:no:A1:C465:0' header='yes' outcome='2'>
            <column datatype='date' date-parse-format='MM/dd/yyyy' name='date' ordinal='0' />
            <column datatype='integer' name='SUM(new_cases)' ordinal='1' />
            <column datatype='integer' name='SUM(total_deaths)' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[excel]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C465:no:A1:C465:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[excel]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[excel_BB7FF347044D45A7B3714AA71E69499D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SUM(new_cases)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SUM(new_cases)]</local-name>
            <parent-name>[excel]</parent-name>
            <remote-alias>SUM(new_cases)</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[excel_BB7FF347044D45A7B3714AA71E69499D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SUM(total_deaths)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SUM(total_deaths)]</local-name>
            <parent-name>[excel]</parent-name>
            <remote-alias>SUM(total_deaths)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[excel_BB7FF347044D45A7B3714AA71E69499D]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Total New Cases' datatype='integer' name='[SUM(new_cases)]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[SUM(total_deaths)]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='excel' datatype='table' name='[__tableau_internal_object_id__].[excel_BB7FF347044D45A7B3714AA71E69499D]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[SUM(new_cases)]' derivation='Sum' name='[sum:SUM(new_cases):qk]' pivot='key' type='quantitative' />
      <column-instance column='[SUM(total_deaths)]' derivation='Sum' name='[sum:SUM(total_deaths):qk]' pivot='key' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/jenn/Documents/My Tableau Repository/Datasources/excel (new cases over time).hyper' default-settings='yes' schema='Extract' sslmode='' update-time='04/01/2023 05:49:52 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='excel (new cases over time)' increment-value='%null%' refresh-type='create' rows-inserted='464' timestamp-start='2023-04-01 17:49:52.647' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>0</ordinal>
              <family>excel</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>464</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SUM(new_cases)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[SUM(new_cases)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SUM(new_cases)</remote-alias>
              <ordinal>1</ordinal>
              <family>excel</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>464</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SUM(total_deaths)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[SUM(total_deaths)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SUM(total_deaths)</remote-alias>
              <ordinal>2</ordinal>
              <family>excel</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>464</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.18qkq0q01j6lsc15gauta1ne2ci4].[sum:SUM(total_deaths):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0uk1psd0qhfbsz1asfdkz1v0dfpr].[sum:SUM(new_vaccinations):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.18qkq0q01j6lsc15gauta1ne2ci4].[sum:SUM(new_cases):qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='excel' id='excel_BB7FF347044D45A7B3714AA71E69499D'>
            <properties context=''>
              <relation connection='excel-direct.1r8b1pq1wd6ebj19z35e10e2ank0' name='excel' table='[excel$]' type='table'>
                <columns gridOrigin='A1:C465:no:A1:C465:0' header='yes' outcome='2'>
                  <column datatype='date' date-parse-format='MM/dd/yyyy' name='date' ordinal='0' />
                  <column datatype='integer' name='SUM(new_cases)' ordinal='1' />
                  <column datatype='integer' name='SUM(total_deaths)' ordinal='2' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet2 (positive rate vs new tests over time )' inline='true' name='federated.19foa8u15bweob1alauoh0cyw93w' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='positive rate vs new tests over time' name='excel-direct.1jfh6gp0ywejk0146kid00gudst9'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/jenn/Desktop/Projects/covid/tableau tables/positive rate vs new tests over time .xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1jfh6gp0ywejk0146kid00gudst9' name='Sheet2' table='[Sheet2$]' type='table'>
          <columns gridOrigin='A1:C481:no:A1:C481:0' header='yes' outcome='2'>
            <column datatype='date' date-parse-format='MM/dd/yyyy' name='date' ordinal='0' />
            <column datatype='real' name='SUM(positive_rate)' ordinal='1' />
            <column datatype='integer' name='SUM(new_tests)' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1jfh6gp0ywejk0146kid00gudst9' name='Sheet2' table='[Sheet2$]' type='table'>
          <columns gridOrigin='A1:C481:no:A1:C481:0' header='yes' outcome='2'>
            <column datatype='date' date-parse-format='MM/dd/yyyy' name='date' ordinal='0' />
            <column datatype='real' name='SUM(positive_rate)' ordinal='1' />
            <column datatype='integer' name='SUM(new_tests)' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C481:no:A1:C481:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet2_1DC4606BFDD1457D87A012A2D0394E26]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SUM(positive_rate)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[SUM(positive_rate)]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>SUM(positive_rate)</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet2_1DC4606BFDD1457D87A012A2D0394E26]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SUM(new_tests)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[SUM(new_tests)]</local-name>
            <parent-name>[Sheet2]</parent-name>
            <remote-alias>SUM(new_tests)</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet2_1DC4606BFDD1457D87A012A2D0394E26]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='SUM(new tests)' datatype='integer' name='[SUM(new_tests)]' role='measure' type='quantitative' />
      <column caption='SUM(positive rate)' datatype='real' name='[SUM(positive_rate)]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet2' datatype='table' name='[__tableau_internal_object_id__].[Sheet2_1DC4606BFDD1457D87A012A2D0394E26]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column-instance column='[SUM(new_tests)]' derivation='Sum' name='[sum:SUM(new_tests):qk]' pivot='key' type='quantitative' />
      <column-instance column='[SUM(positive_rate)]' derivation='Sum' name='[sum:SUM(positive_rate):qk]' pivot='key' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/jenn/Documents/My Tableau Repository/Datasources/Sheet2 (positive rate vs new tests over time ).hyper' default-settings='yes' schema='Extract' sslmode='' update-time='04/01/2023 05:49:55 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='Sheet2 (positive rate vs new tests over time )' increment-value='%null%' refresh-type='create' rows-inserted='480' timestamp-start='2023-04-01 17:49:55.082' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet2</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>480</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SUM(positive_rate)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[SUM(positive_rate)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SUM(positive_rate)</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet2</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>462</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>SUM(new_tests)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[SUM(new_tests)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>SUM(new_tests)</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet2</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>479</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.19foa8u15bweob1alauoh0cyw93w].[sum:SUM(new_tests):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.19foa8u15bweob1alauoh0cyw93w]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.19foa8u15bweob1alauoh0cyw93w].[sum:SUM(positive_rate):qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet2' id='Sheet2_1DC4606BFDD1457D87A012A2D0394E26'>
            <properties context=''>
              <relation connection='excel-direct.1jfh6gp0ywejk0146kid00gudst9' name='Sheet2' table='[Sheet2$]' type='table'>
                <columns gridOrigin='A1:C481:no:A1:C481:0' header='yes' outcome='2'>
                  <column datatype='date' date-parse-format='MM/dd/yyyy' name='date' ordinal='0' />
                  <column datatype='real' name='SUM(positive_rate)' ordinal='1' />
                  <column datatype='integer' name='SUM(new_tests)' ordinal='2' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='excel (Cardiovascular death rate of people with Covid-19 in each country )' inline='true' name='federated.1beaqla0427nyf17i7hk31nrcnnb' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Cardiovascular death rate of people with Covid-19 in each country' name='excel-direct.1bz5joh04a3dlq1cmhau90fjq2m3'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/jenn/Desktop/Projects/covid/tableau tables/Cardiovascular death rate of people with Covid-19 in each country .xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1bz5joh04a3dlq1cmhau90fjq2m3' name='excel' table='[excel$]' type='table'>
          <columns gridOrigin='A1:B197:no:A1:B197:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='real' name='ROUND(AVG(cardiovasc_death_rate),2)' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1bz5joh04a3dlq1cmhau90fjq2m3' name='excel' table='[excel$]' type='table'>
          <columns gridOrigin='A1:B197:no:A1:B197:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='real' name='ROUND(AVG(cardiovasc_death_rate),2)' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[excel]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B197:no:A1:B197:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[excel]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[excel_4711FC040DC94AD79F56D8999A4DCC7B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ROUND(AVG(cardiovasc_death_rate),2)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ROUND(AVG(cardiovasc_death_rate),2)]</local-name>
            <parent-name>[excel]</parent-name>
            <remote-alias>ROUND(AVG(cardiovasc_death_rate),2)</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[excel_4711FC040DC94AD79F56D8999A4DCC7B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='ROUND(AVG(cardiovasc death rate),2)' datatype='real' name='[ROUND(AVG(cardiovasc_death_rate),2)]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='excel' datatype='table' name='[__tableau_internal_object_id__].[excel_4711FC040DC94AD79F56D8999A4DCC7B]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/jenn/Documents/My Tableau Repository/Datasources/excel (Cardiovascular death rate of people with Covid-19 in each country ).hyper' default-settings='yes' schema='Extract' sslmode='' update-time='04/01/2023 05:49:57 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='excel (Cardiovascular death rate of people with Covid-19 in each country )' increment-value='%null%' refresh-type='create' rows-inserted='196' timestamp-start='2023-04-01 17:49:57.531' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>excel</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>196</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[excel_4711FC040DC94AD79F56D8999A4DCC7B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>ROUND(AVG(cardiovasc_death_rate),2)</remote-name>
              <remote-type>5</remote-type>
              <local-name>[ROUND(AVG(cardiovasc_death_rate),2)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>ROUND(AVG(cardiovasc_death_rate),2)</remote-alias>
              <ordinal>1</ordinal>
              <family>excel</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>196</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[excel_4711FC040DC94AD79F56D8999A4DCC7B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='excel' id='excel_4711FC040DC94AD79F56D8999A4DCC7B'>
            <properties context=''>
              <relation connection='excel-direct.1bz5joh04a3dlq1cmhau90fjq2m3' name='excel' table='[excel$]' type='table'>
                <columns gridOrigin='A1:B197:no:A1:B197:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='real' name='ROUND(AVG(cardiovasc_death_rate),2)' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='excel (icu vs hosp)' inline='true' name='federated.1sj6frf090x24a1gf0hxj1j0ms8n' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='icu vs hosp' name='excel-direct.10wnrwb08pd98s129neus1lvhb2f'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/jenn/Desktop/Projects/covid/tableau tables/icu vs hosp.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.10wnrwb08pd98s129neus1lvhb2f' name='excel' table='[excel$]' type='table'>
          <columns gridOrigin='A1:F22:no:A1:F22:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='total_hosp_patients' ordinal='1' />
            <column datatype='integer' name='total_icu_patients' ordinal='2' />
            <column datatype='real' name='hosp_patients_percentage' ordinal='3' />
            <column datatype='real' name='icu_patients_percentage' ordinal='4' />
            <column datatype='real' name='icu_vs_hosp_percentage' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.10wnrwb08pd98s129neus1lvhb2f' name='excel' table='[excel$]' type='table'>
          <columns gridOrigin='A1:F22:no:A1:F22:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='total_hosp_patients' ordinal='1' />
            <column datatype='integer' name='total_icu_patients' ordinal='2' />
            <column datatype='real' name='hosp_patients_percentage' ordinal='3' />
            <column datatype='real' name='icu_patients_percentage' ordinal='4' />
            <column datatype='real' name='icu_vs_hosp_percentage' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[excel]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F22:no:A1:F22:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[excel]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[excel_2AC9B9086B22466D9D4D6DD47CB31BE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_hosp_patients</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_hosp_patients]</local-name>
            <parent-name>[excel]</parent-name>
            <remote-alias>total_hosp_patients</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[excel_2AC9B9086B22466D9D4D6DD47CB31BE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_icu_patients</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_icu_patients]</local-name>
            <parent-name>[excel]</parent-name>
            <remote-alias>total_icu_patients</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[excel_2AC9B9086B22466D9D4D6DD47CB31BE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hosp_patients_percentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[hosp_patients_percentage]</local-name>
            <parent-name>[excel]</parent-name>
            <remote-alias>hosp_patients_percentage</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[excel_2AC9B9086B22466D9D4D6DD47CB31BE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_patients_percentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[icu_patients_percentage]</local-name>
            <parent-name>[excel]</parent-name>
            <remote-alias>icu_patients_percentage</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[excel_2AC9B9086B22466D9D4D6DD47CB31BE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_vs_hosp_percentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[icu_vs_hosp_percentage]</local-name>
            <parent-name>[excel]</parent-name>
            <remote-alias>icu_vs_hosp_percentage</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[excel_2AC9B9086B22466D9D4D6DD47CB31BE6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.1sj6frf090x24a1gf0hxj1j0ms8n].[sum:hosp_patients_percentage:qk]&quot;' value='Hosp' />
          <alias key='&quot;[federated.1sj6frf090x24a1gf0hxj1j0ms8n].[sum:icu_patients_percentage:qk]&quot;' value='Icu' />
        </aliases>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='excel' datatype='table' name='[__tableau_internal_object_id__].[excel_2AC9B9086B22466D9D4D6DD47CB31BE6]' role='measure' type='quantitative' />
      <column caption='Hosp Patients Percentage' datatype='real' name='[hosp_patients_percentage]' role='measure' type='quantitative' />
      <column caption='Icu Patients Percentage' datatype='real' name='[icu_patients_percentage]' role='measure' type='quantitative' />
      <column caption='Icu Vs Hosp Percentage' datatype='real' name='[icu_vs_hosp_percentage]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Total Hosp Patients' datatype='integer' name='[total_hosp_patients]' role='measure' type='quantitative' />
      <column caption='Total Icu Patients' datatype='integer' name='[total_icu_patients]' role='measure' type='quantitative' />
      <column-instance column='[hosp_patients_percentage]' derivation='Sum' name='[sum:hosp_patients_percentage:qk]' pivot='key' type='quantitative' />
      <column-instance column='[icu_patients_percentage]' derivation='Sum' name='[sum:icu_patients_percentage:qk]' pivot='key' type='quantitative' />
      <column-instance column='[icu_vs_hosp_percentage]' derivation='Sum' name='[sum:icu_vs_hosp_percentage:qk]' pivot='key' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/jenn/Documents/My Tableau Repository/Datasources/excel (icu vs hosp).hyper' default-settings='yes' schema='Extract' sslmode='' update-time='04/01/2023 05:49:59 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='excel (icu vs hosp)' increment-value='%null%' refresh-type='create' rows-inserted='21' timestamp-start='2023-04-01 17:49:59.792' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>excel</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>21</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_hosp_patients</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_hosp_patients]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_hosp_patients</remote-alias>
              <ordinal>1</ordinal>
              <family>excel</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>21</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_icu_patients</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_icu_patients]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_icu_patients</remote-alias>
              <ordinal>2</ordinal>
              <family>excel</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>21</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>hosp_patients_percentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[hosp_patients_percentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>hosp_patients_percentage</remote-alias>
              <ordinal>3</ordinal>
              <family>excel</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>19</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>icu_patients_percentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[icu_patients_percentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>icu_patients_percentage</remote-alias>
              <ordinal>4</ordinal>
              <family>excel</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>icu_vs_hosp_percentage</remote-name>
              <remote-type>5</remote-type>
              <local-name>[icu_vs_hosp_percentage]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>icu_vs_hosp_percentage</remote-alias>
              <ordinal>5</ordinal>
              <family>excel</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>21</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1sj6frf090x24a1gf0hxj1j0ms8n].[sum:hosp_patients_percentage:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1sj6frf090x24a1gf0hxj1j0ms8n]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1sj6frf090x24a1gf0hxj1j0ms8n].[sum:icu_vs_hosp_percentage:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1sj6frf090x24a1gf0hxj1j0ms8n].[sum:icu_patients_percentage:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='excel' id='excel_2AC9B9086B22466D9D4D6DD47CB31BE6'>
            <properties context=''>
              <relation connection='excel-direct.10wnrwb08pd98s129neus1lvhb2f' name='excel' table='[excel$]' type='table'>
                <columns gridOrigin='A1:F22:no:A1:F22:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='total_hosp_patients' ordinal='1' />
                  <column datatype='integer' name='total_icu_patients' ordinal='2' />
                  <column datatype='real' name='hosp_patients_percentage' ordinal='3' />
                  <column datatype='real' name='icu_patients_percentage' ordinal='4' />
                  <column datatype='real' name='icu_vs_hosp_percentage' ordinal='5' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='excel (Death rate in each country)' inline='true' name='federated.1vfh6xh0g9slik1h92rvp1l6bx2n' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Death rate in each country' name='excel-direct.0plglft13le6m81fqjrm81td296t'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/jenn/Desktop/Projects/covid/tableau tables/Death rate in each country.xlsx' interpretationMode='0' password='' server='' validate='no' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0plglft13le6m81fqjrm81td296t' name='excel' table='[excel$]' type='table'>
          <columns gridOrigin='A1:B220:no:A1:B220:0' header='yes' outcome='2'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='real' name='Death Rate' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0plglft13le6m81fqjrm81td296t' name='excel' table='[excel$]' type='table'>
          <columns gridOrigin='A1:B220:no:A1:B220:0' header='yes' outcome='2'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='real' name='Death Rate' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[excel]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B220:no:A1:B220:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[excel]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[excel_53A37D0619CC477398E0382B6FC2E3D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Death Rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Death Rate]</local-name>
            <parent-name>[excel]</parent-name>
            <remote-alias>Death Rate</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[excel_53A37D0619CC477398E0382B6FC2E3D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Index' datatype='integer' name='[Calculation_3993285502664044544]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='excel' datatype='table' name='[__tableau_internal_object_id__].[excel_53A37D0619CC477398E0382B6FC2E3D6]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/jenn/Documents/My Tableau Repository/Datasources/excel (Death rate in each country).hyper' default-settings='yes' schema='Extract' sslmode='' update-time='04/01/2023 05:50:02 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='excel (Death rate in each country)' increment-value='%null%' refresh-type='create' rows-inserted='219' timestamp-start='2023-04-01 17:50:02.021' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>excel</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>219</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[excel_53A37D0619CC477398E0382B6FC2E3D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Death Rate</remote-name>
              <remote-type>5</remote-type>
              <local-name>[Death Rate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Death Rate</remote-alias>
              <ordinal>1</ordinal>
              <family>excel</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>13</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[excel_53A37D0619CC477398E0382B6FC2E3D6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='excel' id='excel_53A37D0619CC477398E0382B6FC2E3D6'>
            <properties context=''>
              <relation connection='excel-direct.0plglft13le6m81fqjrm81td296t' name='excel' table='[excel$]' type='table'>
                <columns gridOrigin='A1:B220:no:A1:B220:0' header='yes' outcome='2'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='real' name='Death Rate' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Cardiovascular Complications'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Death Rate by Cardiovascular Complications</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='excel (Cardiovascular death rate of people with Covid-19 in each country )' name='federated.1beaqla0427nyf17i7hk31nrcnnb' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1beaqla0427nyf17i7hk31nrcnnb'>
            <column caption='ROUND(AVG(cardiovasc death rate),2)' datatype='real' name='[ROUND(AVG(cardiovasc_death_rate),2)]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[ROUND(AVG(cardiovasc_death_rate),2)]' derivation='Sum' name='[sum:ROUND(AVG(cardiovasc_death_rate),2):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1beaqla0427nyf17i7hk31nrcnnb].[none:location:nk]</rows>
        <cols>[federated.1beaqla0427nyf17i7hk31nrcnnb].[sum:ROUND(AVG(cardiovasc_death_rate),2):qk]</cols>
      </table>
      <simple-id uuid='{E49B3396-E1B6-46E4-A1F4-37CB7A0AA600}' />
    </worksheet>
    <worksheet name='Death Rate'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Countries with the Highest Death Rate</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='excel (Death rate in each country)' name='federated.1vfh6xh0g9slik1h92rvp1l6bx2n' />
          </datasources>
          <datasource-dependencies datasource='federated.1vfh6xh0g9slik1h92rvp1l6bx2n'>
            <column caption='Index' datatype='integer' name='[Calculation_3993285502664044544]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='real' name='[Death Rate]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[Death Rate]' derivation='Sum' name='[sum:Death Rate:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Death Rate]' derivation='Sum' name='[sum:Death Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_3993285502664044544]' derivation='User' name='[usr:Calculation_3993285502664044544:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1vfh6xh0g9slik1h92rvp1l6bx2n].[usr:Calculation_3993285502664044544:qk]' included-values='in-range'>
            <min>1</min>
            <max>10</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1vfh6xh0g9slik1h92rvp1l6bx2n].[none:location:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1vfh6xh0g9slik1h92rvp1l6bx2n].[sum:Death Rate:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1vfh6xh0g9slik1h92rvp1l6bx2n].[usr:Calculation_3993285502664044544:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1vfh6xh0g9slik1h92rvp1l6bx2n].[sum:Death Rate:qk]' scope='rows' value='' />
            <encoding attr='space' class='0' field='[federated.1vfh6xh0g9slik1h92rvp1l6bx2n].[sum:Death Rate:qk]' field-type='quantitative' major-origin='0.0' major-show='false' major-spacing='0.10000000000000001' scope='rows' type='space' />
            <format attr='width' field='[federated.1vfh6xh0g9slik1h92rvp1l6bx2n].[sum:Death Rate:qk]' value='10' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1vfh6xh0g9slik1h92rvp1l6bx2n].[none:location:nk]' value='112' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1vfh6xh0g9slik1h92rvp1l6bx2n].[sum:Death Rate:qk]' />
              <text column='[federated.1vfh6xh0g9slik1h92rvp1l6bx2n].[sum:Death Rate:ok]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1vfh6xh0g9slik1h92rvp1l6bx2n].[sum:Death Rate:qk]</rows>
        <cols>[federated.1vfh6xh0g9slik1h92rvp1l6bx2n].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{53DDBF18-142A-454A-BC27-2B80A05CC072}' />
    </worksheet>
    <worksheet name='Global Numbers'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global Numbers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='excel (Global numbers)' name='federated.10vltuc17drhff13dgeaw0h9riro' />
          </datasources>
          <datasource-dependencies datasource='federated.10vltuc17drhff13dgeaw0h9riro'>
            <column datatype='real' name='[Death Rate]' role='measure' type='quantitative' />
            <column caption='SUM(total cases)' datatype='integer' name='[SUM(total_cases)]' role='measure' type='quantitative' />
            <column caption='SUM(total deaths)' datatype='integer' name='[SUM(total_deaths)]' role='measure' type='quantitative' />
            <column caption='SUM(total vaccinations)' datatype='integer' name='[SUM(total_vaccinations)]' role='measure' type='quantitative' />
            <column caption='Case-Fatality Rate' datatype='real' name='[case-fatality rate]' role='measure' type='quantitative' />
            <column-instance column='[Death Rate]' derivation='Sum' name='[sum:Death Rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[SUM(total_cases)]' derivation='Sum' name='[sum:SUM(total_cases):qk]' pivot='key' type='quantitative' />
            <column-instance column='[SUM(total_deaths)]' derivation='Sum' name='[sum:SUM(total_deaths):qk]' pivot='key' type='quantitative' />
            <column-instance column='[SUM(total_vaccinations)]' derivation='Sum' name='[sum:SUM(total_vaccinations):qk]' pivot='key' type='quantitative' />
            <column-instance column='[case-fatality rate]' derivation='Sum' name='[sum:case-fatality rate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.10vltuc17drhff13dgeaw0h9riro].[:Measure Names]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.10vltuc17drhff13dgeaw0h9riro].[sum:case-fatality rate:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.10vltuc17drhff13dgeaw0h9riro].[sum:Death Rate:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.10vltuc17drhff13dgeaw0h9riro].[sum:SUM(total_cases):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.10vltuc17drhff13dgeaw0h9riro].[sum:SUM(total_deaths):qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.10vltuc17drhff13dgeaw0h9riro].[sum:SUM(total_vaccinations):qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.10vltuc17drhff13dgeaw0h9riro].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.10vltuc17drhff13dgeaw0h9riro].[sum:Death Rate:qk]' value='n#,##0.00;-#,##0.00' />
            <format attr='text-format' field='[federated.10vltuc17drhff13dgeaw0h9riro].[sum:SUM(total_cases):qk]' value='' />
            <format attr='text-format' field='[federated.10vltuc17drhff13dgeaw0h9riro].[sum:case-fatality rate:qk]' value='n#,##0.00;-#,##0.00' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.10vltuc17drhff13dgeaw0h9riro].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.10vltuc17drhff13dgeaw0h9riro].[:Measure Names]</rows>
        <cols />
      </table>
      <simple-id uuid='{D7BADB8D-EB83-41DA-A6B8-D6A7B7C2D1A2}' />
    </worksheet>
    <worksheet name='Hospitalized and ICU Patients'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Percentage of Hospitalized and ICU Patients</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='excel (icu vs hosp)' name='federated.1sj6frf090x24a1gf0hxj1j0ms8n' />
          </datasources>
          <datasource-dependencies datasource='federated.1sj6frf090x24a1gf0hxj1j0ms8n'>
            <column caption='Hosp Patients Percentage' datatype='real' name='[hosp_patients_percentage]' role='measure' type='quantitative' />
            <column caption='Icu Patients Percentage' datatype='real' name='[icu_patients_percentage]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[hosp_patients_percentage]' derivation='Sum' name='[sum:hosp_patients_percentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[icu_patients_percentage]' derivation='Sum' name='[sum:icu_patients_percentage:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='tick-color' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1sj6frf090x24a1gf0hxj1j0ms8n].[sum:hosp_patients_percentage:qk]' />
              <color column='[federated.1sj6frf090x24a1gf0hxj1j0ms8n].[sum:icu_patients_percentage:qk]' />
              <text column='[federated.1sj6frf090x24a1gf0hxj1j0ms8n].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{45BBF8DB-00A0-480D-A7C4-52DBF543EE8D}' />
    </worksheet>
    <worksheet name='Infection Rate'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Infection and Death Rate per Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='excel (Countries with count of cases (infection rate) )' name='federated.0gm5j261befyul1cwg0zt16ekm3d' />
            <datasource caption='excel (Death rate in each country)' name='federated.1vfh6xh0g9slik1h92rvp1l6bx2n' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0gm5j261befyul1cwg0zt16ekm3d'>
            <column datatype='real' name='[Infection Rate]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[Infection Rate]' derivation='Sum' name='[sum:Infection Rate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1vfh6xh0g9slik1h92rvp1l6bx2n'>
            <column datatype='real' name='[Death Rate]' role='measure' type='quantitative' />
            <column-instance column='[Death Rate]' derivation='Sum' name='[sum:Death Rate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0gm5j261befyul1cwg0zt16ekm3d].[none:location:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:location:nk]' />
              <groupfilter function='member' level='[none:location:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0gm5j261befyul1cwg0zt16ekm3d].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[federated.0gm5j261befyul1cwg0zt16ekm3d].[Latitude (generated)]' field-type='quantitative' fold='true' max='8206606.947670266' min='-3806463.5921821166' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='0' field='[federated.0gm5j261befyul1cwg0zt16ekm3d].[Longitude (generated)]' field-type='quantitative' max='13749089.156481901' min='-13003094.120538412' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0gm5j261befyul1cwg0zt16ekm3d].[Latitude (generated)]' field-type='quantitative' max='8206606.947670266' min='-3806463.5921821166' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0gm5j261befyul1cwg0zt16ekm3d].[sum:Infection Rate:qk]' num-steps='7' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#dce7d8</color>
                <color>#c9dec1</color>
                <color>#b6d4ab</color>
                <color>#a5cb96</color>
                <color>#94c182</color>
                <color>#84b870</color>
                <color>#75ae5f</color>
                <color>#67a54f</color>
                <color>#5a9b40</color>
                <color>#4e9233</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.0gm5j261befyul1cwg0zt16ekm3d].[none:location:nk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0gm5j261befyul1cwg0zt16ekm3d].[Latitude (generated)]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.0gm5j261befyul1cwg0zt16ekm3d].[none:location:nk]' />
              <geometry column='[federated.0gm5j261befyul1cwg0zt16ekm3d].[Geometry (generated)]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0gm5j261befyul1cwg0zt16ekm3d].[Latitude (generated)]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0gm5j261befyul1cwg0zt16ekm3d].[sum:Infection Rate:qk]' />
              <size column='[federated.1vfh6xh0g9slik1h92rvp1l6bx2n].[sum:Death Rate:qk]' />
              <lod column='[federated.0gm5j261befyul1cwg0zt16ekm3d].[none:location:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0gm5j261befyul1cwg0zt16ekm3d].[Latitude (generated)] + [federated.0gm5j261befyul1cwg0zt16ekm3d].[Latitude (generated)])</rows>
        <cols>[federated.0gm5j261befyul1cwg0zt16ekm3d].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{567A2AEC-2430-4EF6-9074-C43344774C69}' />
    </worksheet>
    <worksheet name='Monthly Pos Rate and New Tests'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='11'>Monthly Positive Rate &amp; New Tests</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet2 (positive rate vs new tests over time )' name='federated.19foa8u15bweob1alauoh0cyw93w' />
          </datasources>
          <datasource-dependencies datasource='federated.19foa8u15bweob1alauoh0cyw93w'>
            <column caption='SUM(new tests)' datatype='integer' name='[SUM(new_tests)]' role='measure' type='quantitative' />
            <column caption='SUM(positive rate)' datatype='real' name='[SUM(positive_rate)]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[SUM(new_tests)]' derivation='Sum' name='[sum:SUM(new_tests):qk]' pivot='key' type='quantitative' />
            <column-instance column='[SUM(positive_rate)]' derivation='Sum' name='[sum:SUM(positive_rate):qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Year' name='[yr:date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='width' field='[federated.19foa8u15bweob1alauoh0cyw93w].[sum:SUM(new_tests):qk]' value='21' />
            <format attr='width' field='[federated.19foa8u15bweob1alauoh0cyw93w].[sum:SUM(positive_rate):qk]' value='21' />
            <encoding attr='space' class='0' field='[federated.19foa8u15bweob1alauoh0cyw93w].[sum:SUM(positive_rate):qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.19foa8u15bweob1alauoh0cyw93w].[sum:SUM(positive_rate):qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.19foa8u15bweob1alauoh0cyw93w].[sum:SUM(new_tests):qk]' scope='rows' value='' />
            <format attr='display' class='0' field='[federated.19foa8u15bweob1alauoh0cyw93w].[sum:SUM(new_tests):qk]' scope='rows' value='false' />
            <format attr='display' class='0' field='[federated.19foa8u15bweob1alauoh0cyw93w].[sum:SUM(positive_rate):qk]' scope='rows' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.19foa8u15bweob1alauoh0cyw93w].[yr:date:ok]' value='127' />
            <format attr='width' field='[federated.19foa8u15bweob1alauoh0cyw93w].[mn:date:ok]' value='127' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.19foa8u15bweob1alauoh0cyw93w].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.19foa8u15bweob1alauoh0cyw93w].[sum:SUM(new_tests):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.19foa8u15bweob1alauoh0cyw93w].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='highlight' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.19foa8u15bweob1alauoh0cyw93w].[sum:SUM(positive_rate):qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.19foa8u15bweob1alauoh0cyw93w].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-range-scope' value='multi-mark' />
                <format attr='mark-labels-mode' value='highlight' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.19foa8u15bweob1alauoh0cyw93w].[sum:SUM(new_tests):qk] + [federated.19foa8u15bweob1alauoh0cyw93w].[sum:SUM(positive_rate):qk])</rows>
        <cols>[federated.19foa8u15bweob1alauoh0cyw93w].[mn:date:ok]</cols>
      </table>
      <simple-id uuid='{FC3BEDAA-5C2B-449C-A32C-EA179F6E048F}' />
    </worksheet>
    <worksheet name='New Cases'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='11'>Monthly New Cases</run>
            <run>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='excel (new cases over time)' name='federated.18qkq0q01j6lsc15gauta1ne2ci4' />
          </datasources>
          <datasource-dependencies datasource='federated.18qkq0q01j6lsc15gauta1ne2ci4'>
            <column caption='Total New Cases' datatype='integer' name='[SUM(new_cases)]' role='measure' type='quantitative' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[SUM(new_cases)]' derivation='Sum' name='[sum:SUM(new_cases):qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.18qkq0q01j6lsc15gauta1ne2ci4].[sum:SUM(new_cases):qk]' scope='rows' value='' />
            <format attr='width' field='[federated.18qkq0q01j6lsc15gauta1ne2ci4].[sum:SUM(new_cases):qk]' value='10' />
            <encoding attr='space' class='0' field='[federated.18qkq0q01j6lsc15gauta1ne2ci4].[sum:SUM(new_cases):qk]' field-type='quantitative' major-origin='0' major-show='false' major-spacing='10000000' scope='rows' type='space' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.18qkq0q01j6lsc15gauta1ne2ci4].[sum:SUM(new_cases):qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.18qkq0q01j6lsc15gauta1ne2ci4].[sum:SUM(new_cases):qk]</rows>
        <cols>[federated.18qkq0q01j6lsc15gauta1ne2ci4].[mn:date:ok]</cols>
      </table>
      <simple-id uuid='{35B3E41A-5D41-4514-A238-736507699C90}' />
    </worksheet>
    <worksheet name='Per Continent'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontsize='12'>Mortality Rates per Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='excel (death rate and mort rate per continent)' name='federated.0lysh151d7hi6n14twags0t8f9qs' />
          </datasources>
          <datasource-dependencies datasource='federated.0lysh151d7hi6n14twags0t8f9qs'>
            <column datatype='real' name='[Mortality Rate]' role='measure' type='quantitative' />
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[Mortality Rate]' derivation='Sum' name='[sum:Mortality Rate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0lysh151d7hi6n14twags0t8f9qs].[none:continent:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0lysh151d7hi6n14twags0t8f9qs].[sum:Mortality Rate:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0lysh151d7hi6n14twags0t8f9qs].[sum:Mortality Rate:qk]' scope='rows' value='' />
            <encoding attr='space' class='0' field='[federated.0lysh151d7hi6n14twags0t8f9qs].[sum:Mortality Rate:qk]' field-type='quantitative' major-origin='0.0' major-show='false' major-spacing='1.0' scope='rows' type='space' />
            <format attr='width' field='[federated.0lysh151d7hi6n14twags0t8f9qs].[sum:Mortality Rate:qk]' value='12' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0lysh151d7hi6n14twags0t8f9qs].[none:continent:nk]' value='63' />
          </style-rule>
          <style-rule element='dropline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0lysh151d7hi6n14twags0t8f9qs].[sum:Mortality Rate:qk]</rows>
        <cols>[federated.0lysh151d7hi6n14twags0t8f9qs].[none:continent:nk]</cols>
      </table>
      <simple-id uuid='{70ABBC2D-EC7E-421D-8934-5F3E8CDF9DB7}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='COVID-19 Dashboard'>
      <style />
      <size maxheight='927' maxwidth='1269' minheight='827' minwidth='1169' sizing-mode='range' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98070' id='33' param='horz' type-v2='layout-flow' w='98740' x='630' y='965'>
            <zone h='98070' id='31' type-v2='layout-basic' w='98740' x='630' y='965'>
              <zone h='98070' id='7' param='horz' type-v2='layout-flow' w='58550' x='40820' y='965'>
                <zone h='98070' id='5' type-v2='layout-basic' w='58550' x='40820' y='965'>
                  <zone h='34982' id='12' name='Infection Rate' w='58546' x='40824' y='965'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='34425' id='19' name='Hospitalized and ICU Patients' w='58550' x='40820' y='35947'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                  <zone h='28663' id='30' name='Monthly Pos Rate and New Tests' w='58550' x='40820' y='70372'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='margin' value='4' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
              <zone h='17893' id='3' name='Global Numbers' w='40190' x='630' y='965'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='34258' id='9' name='Per Continent' w='40190' x='630' y='64777'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='45919' id='18' name='New Cases' w='40190' x='630' y='18858'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1600' minheight='1600' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='43' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98070' id='42' param='vert' type-v2='layout-flow' w='98740' x='630' y='965'>
                <zone fixed-size='158' h='17893' id='3' is-fixed='true' name='Global Numbers' w='40190' x='630' y='965'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='34982' id='12' is-fixed='true' name='Infection Rate' w='58546' x='40824' y='965'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='45919' id='18' is-fixed='true' name='New Cases' w='40190' x='630' y='18858'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='34425' id='19' is-fixed='true' name='Hospitalized and ICU Patients' w='58550' x='40820' y='35947'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='34258' id='9' is-fixed='true' name='Per Continent' w='40190' x='630' y='64777'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='258' h='28663' id='30' is-fixed='true' name='Monthly Pos Rate and New Tests' w='58550' x='40820' y='70372'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{5BE3D3E2-1748-4511-B23B-3DA363B3C3C4}' />
    </dashboard>
  </dashboards>
  <windows source-height='197'>
    <window class='worksheet' name='Global Numbers'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.10vltuc17drhff13dgeaw0h9riro].[:Measure Names]' show-morefewerbutton='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{8F6E5B80-F907-4EB6-8C03-0D764F299C04}' />
    </window>
    <window class='worksheet' name='Per Continent'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0lysh151d7hi6n14twags0t8f9qs].[:Measure Names]</field>
            <field>[federated.0lysh151d7hi6n14twags0t8f9qs].[none:continent:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{059D8E31-0EBD-4318-9C7C-550A2A6D1A19}' />
    </window>
    <window class='worksheet' name='Death Rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='4' param='[federated.1vfh6xh0g9slik1h92rvp1l6bx2n].[sum:Death Rate:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
        <highlight>
          <color-one-way>
            <field>[federated.0gm5j261befyul1cwg0zt16ekm3d].[none:location:nk]</field>
            <field>[federated.1vfh6xh0g9slik1h92rvp1l6bx2n].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8E42F154-0DE9-431C-AC3A-8A5B81899521}' />
    </window>
    <window class='worksheet' name='Infection Rate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1vfh6xh0g9slik1h92rvp1l6bx2n].[sum:Death Rate:qk]' type='size' />
            <card pane-specification-id='2' param='[federated.0gm5j261befyul1cwg0zt16ekm3d].[sum:Infection Rate:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0gm5j261befyul1cwg0zt16ekm3d].[none:location:nk]</field>
            <field>[federated.1beaqla0427nyf17i7hk31nrcnnb].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C5189F6D-9A1F-4489-BD88-AC3D6C0F13FF}' />
    </window>
    <window class='worksheet' name='Cardiovascular Complications'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1beaqla0427nyf17i7hk31nrcnnb].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B102FB3C-D711-4E4E-BFF9-BC2C453EE831}' />
    </window>
    <window class='worksheet' name='Monthly Pos Rate and New Tests'>
      <cards>
        <edge name='left'>
          <strip size='300'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.19foa8u15bweob1alauoh0cyw93w].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.19foa8u15bweob1alauoh0cyw93w].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B00B8E76-AF09-4240-A677-B87003FFA120}' />
    </window>
    <window class='worksheet' name='Hospitalized and ICU Patients'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1sj6frf090x24a1gf0hxj1j0ms8n].[sum:icu_patients_percentage:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sj6frf090x24a1gf0hxj1j0ms8n].[:Measure Names]</field>
            <field>[federated.1sj6frf090x24a1gf0hxj1j0ms8n].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{197C68F0-4862-4CEB-8286-5D6DDB2DA559}' />
    </window>
    <window class='worksheet' name='New Cases'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0uk1psd0qhfbsz1asfdkz1v0dfpr].[yr:date:ok]</field>
            <field>[federated.18qkq0q01j6lsc15gauta1ne2ci4].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{214C70AF-B904-4F0D-B681-445C60A90BE9}' />
    </window>
    <window class='dashboard' maximized='true' name='COVID-19 Dashboard'>
      <viewpoints>
        <viewpoint name='Global Numbers'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields />
                    <y-fields>
                      <field>[federated.10vltuc17drhff13dgeaw0h9riro].[:Measure Names]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.10vltuc17drhff13dgeaw0h9riro].[:Measure Names]</field>
                    <field>[federated.10vltuc17drhff13dgeaw0h9riro].[Multiple Values]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;[federated.10vltuc17drhff13dgeaw0h9riro].[sum:Death Rate:qk]&quot;</value>
                  <value>0.02</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Hospitalized and ICU Patients'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Infection Rate'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Monthly Pos Rate and New Tests'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='New Cases'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Per Continent'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{C4BB80CE-0425-4DA3-8453-0513535F270F}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='COVID-19 Dashboard' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOydd3hU15n/P9OrpkhCBYGQhIRBooMLNmCa4xKSOCF2YO3Y3oR4k3V2N+35
      OZs8mzhlk03sbGxv7M3a8Tou2NjEBQxeXMAYm2ZANImijgpqI81oer3n94dybzQggWim3c/z
      8KAZ3XvuuXc05z3nPe/7fTVCCIGKioqKyhWH9kJ3QEVFRUXlwqAaABUVFZUrFNUAqKioqFyh
      qAZARUVF5QpFNQAqKioqVyiqAVBRUVG5QlENgIqKisoVimoAVFRUVK5QVAOgoqKicoWiGgAV
      FRWVKxTVAKioqKQhhGAohRghBIFAAI/Hc07bPVfEYjFSqdQJ1zzb64bD4UHfP1ftnytOty8n
      NQBCCHp6evjggw/Ytm0bgUAAIQSpVIpXX331pA3v2rWLurq6YXfk9ddfJx6Pp7135MgRent7
      ldfhcJj29vZht3myayUSibNuR0XlcmTVqlVEo9FBf9fY2MgjjzzCwYMHT9lOMpnkwIEDae36
      /f5z1s/BeP/99zly5Ijy+pVXXuHhhx/mP/7jP3j//feHPThKksT+/fuV108++eSgx/l8Pn74
      wx/y+9//nocffpiurq5BjwsGg9TW1p7GnZweQgjeeOMNfvGLX/Dv//7vwx4nhzQAQgg2btzI
      97//fTweDzU1NTz44INIkoQQgu3bt5+04aamJjo6OoZ9A5988skJg/IvfvELfvOb3ygfWlNT
      E6+//vqw2zzZtZLJ5Fm3o6JyOdLZ2UkqlaK3txePx8PHH39MW1sb0WiUDz74gMmTJ1NYWIgk
      SezevZs9e/YgSRIAgUCATz75hK6uLmpra3nttdeoqqoiFAoxb9487HY7Qgiqq6vZunWr8p1v
      b2+nrq6OLVu2pI0DshHZsWMHsVhMOba2tpYtW7Yo3+NgMMj27dtpaWlJu5eOjg6+/e1v8+CD
      D3LkyBF27tyJEAKPx8OmTZvo6elR+r1jxw4OHjyIEIKGhgZWrlyp9B2gtbWVzZs3K68BEokE
      ZWVlfO973+Puu+9mxYoVCCE4duwYW7Zsob29HUmSqKysZO3atVRXV5NIJAiFQmzevJmWlpY0
      o9Te3s7+/fvZvXu3spLp6elh06ZNdHd3K/eUSCQ4ePCg8tz37duHx+Ph3/7t3/jRj35ETk4O
      yWSSHTt2sG/fPiRJIh6PK/fb19dHOBwe2gBEIhGeeeYZnnzySe644w7uvfdennjiCXQ6Xdpx
      Qgjq6upYtWoVe/bsSbsZr9fLW2+9xZYtW5SOBoNBPvroI9avX39KK+VyucjOzmbnzp0n/K61
      tVVZlsXjcRoaGgCor6+nubmZN998k/379+P1elm7dm1aHwBqamp48803qa+vV/ocCARYvXo1
      GzduVP4IW1paiEQitLa2cuDAAYQQNDU18X//939pH5KKyuXGxo0beeaZZwB44oknSCQS+P1+
      /H4/fX19rFixgo6ODhoaGli9ejV9fX38x3/8B7FYjD179uDz+QiFQnR3d5NMJnn99dcJhUK8
      9dZbVFZWEovF+P3vf48Qgl/+8pfs37+ftrY23nrrLaUP9fX1ynf90UcfRQjBz372M6qrq2lu
      bubtt98mGAzyy1/+klQqRV9f36D3otVq+frXv87mzZsJBoM89thjuN1ufv/73xONRtmxYwfJ
      ZJJt27bx3nvv4fP5iEajdHd3k0gk8Pl8fPjhh8RiMeWZyAghkCSJcDiMyWQilUqxZcsW9Ho9
      TzzxBB6PB5/PRzAYxOPxEI/H+d3vfofVauWll15KM1r/+Z//ybFjx2hsbOSFF17A7/fzX//1
      XzidTp544gkCgQDPP/88v/nNb5QxD/o9LosXL0aj0aDVatFqtTz55JP4fD4OHz7Mq6++Sk9P
      D+vXrwdgx44d1NTUDG0Aqqurufbaa7FarUiSRDKZJJVKnbCE2rNnD48//jg5OTm8/fbbvPLK
      K8rv1q9fj91uZ8eOHfzhD38AYN26dXR0dKDRaPjxj39MZ2fnSf8I7733Xl588cUTZuxr1qyh
      tbUVAL/fzwsvvADAY489xgsvvIDT6VSWZWazmTfffJN9+/Ypx2/evBmn08lvf/tb9u/fTzQa
      5Uc/+hFWq5XOzk4eeeQRhBC8+eabvPTSS/zqV7+it7eXo0eP8pvf/AaDwUBlZWXaMlFF5XLj
      K1/5CrNnzyYvLw+TyUR5eTnTp09nypQpVFVVYbVacbvd7N27l8rKShYvXsycOXO4+eabmTJl
      CmPGjGH+/Pk4nU6lzcOHD/N3f/d3zJ8/H7PZTCQSobi4mC996UvMmzePYDCoHDty5Eh6e3up
      qalRxorS0lJuv/125s2bRyAQYNeuXXzhC1/ghhtuYOLEiUPei8FgIJVKsWfPHvLz8+nt7cXp
      dFJTU0NxcTGHDh0iFArR2NjI1KlTGT16NPPnz8flcuFyubjrrruYN2/eCWPgtm3b+Jd/+RdW
      rlzJV7/6VXQ6Hbm5uezdu1cxIlOnTqWsrIwbb7wRn89HMpkkEAgwcuRIdu/erbSVm5vLLbfc
      wpIlS+jq6qK6uprMzEx8Ph8Oh4OamhoSiQT33HMPixcvRqvtH8KTySR6vV5pJ5FIkEgkuPnm
      m7nzzjtpamoa9JnoB32X/tlwZmYmAFu3bmX16tWKJTEYDMpxr7/+Ov/6r/9Kfn4+119/Pf/0
      T//EV77yFQCWLVvG7NmzmTt3Lg888ACpVIo777yT7u5uuru7qaiooK6ujtzc3CE/tJycHCZN
      msTGjRsZNWrUkMfJ2O12vvvd72K1WqmsrGTJkiUUFRURDoeV/QSHw8Hy5cuxWCyMHDmS1atX
      EwwGmTlzJgsWLADgwQcfVJZ6DQ0NPPbYYxgMBqqqqnA6nUydOpWFCxei0WhO2ScVlcsRg8FA
      fn4+Wq2W5cuX09raqgzeQgg0Gk3aqnsgyWQSrVZLLBZTBrHBePHFF7nlllsoKiriP//zPwc9
      Rp6BnwwhBO+99x5TpkzBZDJhtVopKCigoKCAkSNH8vDDD/PDH/6QZDLJihUrAE7Zpsz111/P
      4sWLeeyxx4jH4zQ1NVFdXc0//MM/KDNurVareAsMBgMmk0m5fnZ29gltxuNxhBAYjUYsFkta
      Xz/66CNGjhyZdvxVV13F9u3bWbx4sXK9WCym7NnK9yIbL/n/IQ3AiBEj2LZtGwCzZ89m9uzZ
      /OAHPzjhOL/fT05OTn9jej0mk+mEB6fVarFarSQSCZ588kkikQilpaX09PQMy4WydOlS/t//
      +3/cf//9pzx2KIYaqJ1OJ7FYjN7eXrZs2cLRo0eB/gckrzruu+8+xehVVFSwaNEiHnnkEcLh
      MN/5zncoKSk5436pqFxs6HQ6NBqN8k9+D/q/y/J7CxYs4LXXXsPlcjFixAhuv/12HnnkEerq
      6sjIyOCuu+7C6/Xy1FNP8bnPfU5pd9GiRfz2t7/F5XKRn5+PyWRS2pddGDJ5eXmsXbuWZDLJ
      sWPH0voiH3vNNdcobqH9+/fzwAMPpN3L448/TiKRIDc3l+XLl5NKpVi3bh2xWAyfz8fdd9+N
      wWDg5ZdfprOzk+zsbLRaLaFQiKeffprbbrstzfU98Ge5D3l5efzLv/wLDz/8MMuXL+fo0aP8
      6U9/oqqqim9+85tkZ2ezf/9+YrEYd955JxkZGbzzzjvE43EWLlyoTLa7urp4+umnaW1tZcmS
      JYwfP563336bDRs2EAgEWLZsWdpnIDN79mwef/xxHnnkEZLJJF/96lcZP348jz76KJFIhLlz
      5+JwONi7dy+BQICDBw+yfPlyEEOQSCTEsmXLRH19vRBCCEmSxPe//30RDodFIpEQ3/3ud4UQ
      Qvz2t78Ve/bsEUII0dvbKx544AEhhBCrVq0SH330kRBCiPb2dvHtb39bRCIR8Z3vfEdIkiQk
      SRLPPPOM+PDDD4UQQjz44IMiGAym9UFuSwghXn31VfHTn/5U/OEPfxBCCPHkk0+KqqoqIUmS
      aGlpET/96U+FEEL867/+qwiFQkIIIR555BHR2NgohBBizZo14v3331euFQ6HhSRJ4vXXXxcv
      vfSS2Lt3r3j44YeFJElCCCH6+vpEMpkUjz/+uKitrVX6EQqFRDKZFEIIsXfvXvHoo48O9QhV
      VC574vG4iEQiymtJkkQwGBSpVEoIIUQqlRJ9fX3K90omEokM+v5geL1eEYvFTnpMMpkUPT09
      w2pP7mcgEFD6mUwmhcfjSTs/lUoJn8837DYHIt/fQBKJhPD7/crrUCgkEolE2jEPP/ywCAQC
      yhgj93XgMz0ZwWBQxONx5bXf7xfhcDitXz6fT3k95ApAr9fzk5/8hF/84hfk5eURj8dJJBKK
      n0m2gl/96lf56U9/SklJCXV1dXzrW99Sfv/KK6/wwQcf0NLSwne/+12MRiMOh4N///d/JxwO
      09PTw7hx45TrHc9AV9PnP/953njjDfLy8gCYNm0ajz76KGPGjKGrq0tZRh1vqWVLOdBqSpLE
      r371KxKJBBqNhp/85CeYTCbeffddfvCDH2C1WonFYvz85z9PawP6N4+feeYZCgsLaWpq4utf
      //pQj1BF5bLHYDCkfU81Gg02m015rdVqcTgcJ5xnNpsxm83DuobL5TrlMTqdTplFDweNRoPd
      bk87PysrK+0YrVabtndxOgx2f3q9noyMDOW11Wo94bxp06al9Uvu68BnejKOP27g9Qbrl0aI
      kwfGCiHw+XwYDIYTOiaTSqXo6OjA7XYrNyVJEpIkEQgEcLlcaYNvd3c3DocDi8UyrJsair6+
      PpLJJJmZmafli5ckiWg0iiRJJ9xTJBJBkiSsVuuQbSaTSTweDy6Xa9h/xCoqKioXG6c0ACoq
      KioqlyeqFISKiorKFYpqAFRUVFSuUIbcBFZRUbnyUD3CVxaqAVBRUVGora1l9+7d6HQ6hBBK
      FIkQgry8PAoLC884Mgb+pqcTjUax2WwYjUZ0Ot2gETFni0ajwZ3vICMrPTKm7XAnycSZS7ho
      NBocDgeTJ0/GZDKdcTsffvjhKUUpw+EwPp+PSZMmMW3aNDo7O9m6dasSWaXVapk3b94ZJ6Sq
      BkBFRUUhOzub6dOnK0JvsgKwRqPB5XLx9ttv88UvfnHQ0M7hUFxcTF9fH++++y6BQIBUKoVO
      pyM/Pz8tnPRcIQwpzJl6ZYCMhuL4vH1ntdKRIyMdDgeTJk064zbKysrYtm3bSTOhJUnCZrNx
      5MgRuru7iUQiCCHw+/1IkkRXVxcTJkygsLDwjPoxqAEQQpwT2eVLBa1WO+w4WxWVywW9Xn9C
      KLbNZiMzM5OdO3ei1+tJpVKYTCYmTZrE6tWrGTNmzFnN1jUaDdOmTePAgQM0NDRgNpsJhUJ4
      vV5FUeBcEuwN09XYiyPbRjKeorvFe9ZuLjlDuq2t7YwMgHz9oqIigsEg+/fvP0FkU0Y2DiaT
      ie7u7rTwdJ1Oh8lkYsOGDdx+++243e7T7sugBkCj0ZygNaGionJlEIlEaG5uJpVKkZWVxbRp
      01i9ejUGgwGdTjfkYHU6LFiwQBEoy8vLw+/3K6uBc4kQAm+HH19nQHl9ruju7iaVShGLxTAa
      jYMmsw5GPB4nGo2i1WopLS3lk08+GdYE9HjDK4TA7XbT0tJCe3v7uTMAgyH+Kio03JsceJ6s
      DTSYhsVgyLKqQogTMnEHa/t43RIVFZUzIx6Ps2HDBqLRKHa7XfEvB4NBJk6cyPz588/J9ywn
      J4fi4mJFcFGr1eL1esnKyjov3+PzsbmdSqVYtWoVkUgEo9FIcXExM2bMOOW+QCwWIxqN4nQ6
      MZlMSo2EMyU3N5eamhomTJhw2s9uWGGg3d3d/PjHP+ZnP/sZTU1NaWXHBv482OsDBw7w/e9/
      n1//+te0t7en/f7dd99V9LsHvv/cc8/R0dHB888/TyKRYPXq1YP2Kx6P873vfY+f/OQnPPXU
      UyeUZxtYROH4fqmoXC6Ew2G6urro7u4+4bvY1dWlbDRGo1GlIMhQtLS04PV6cTqdzJkzB7PZ
      jBCCOXPmcNNNN50zP73RaOS2227DYrHQ3t5OMBgkEAjQ29s7bBXOC43FYkGj0WC1WtHr9bS0
      tLBu3bohy0fKGAwGXnvtNaXWyNkaPK/XS3Nz8xmdO6zp/MqVK7n77ruZMGECqVSK3/72twSD
      Qe677z62bNnCsWPHFJ3sDz74gDFjxnDXXXcB/X90s2fPZsmSJcRiMeXcpUuX8sILL7Bt2zbu
      u+8+Vq5cSTAY5Bvf+IZyXfHXymMrVqwgEAgQCoW45557WL16Nbfccgtmsxmn08nPfvYzfvzj
      H9PX18ezzz6L1+vli1/8Ii+99BJ5eXnce++9vPXWWwSDQe69915Gjx59Rg9LReViRK/XM2LE
      CHw+H4lEAqPRCPQXX0qlUoprpa+v75SDTSqVwmKxcPPNNyua9Wazmauvvvqc9zsrK4vZs2cT
      DAYJBoOKPEtXV5ei+XWpEY/Hee+995g2bRqjRo0adIO3p6dHea7JZJJwOHxWkjJZWVm0t7dz
      8OBBKioqTutc3UMPPfTQqQ5av349t9xyi+KW6evrw+PxEA6Hqauro6SkhGuuuYYnn3yS2bNn
      s379eqxWK5s2bSInJ4eXX36ZqqoqysvLicfjdHZ2otPpcDqd3HPPPeTm5uL1epUSksFgkKuu
      uor33nuPZcuW0dDQwLe//W1aW1tpa2tj37593HzzzaRSKZ577jk2bdrEuHHjmDVrFn19ffT0
      9BAKhRg5ciRLliwhEomwZcsWxo4dS11dHdOnTz+jB62icjGi1Wrx+/0kk0nsdjsajYZUKkUg
      EMBisaDT6QgEAjgcDuLx+El1rjIyMpg6dSo6nU4RejuZG/ZsyczMpKenh66uLlKpFJFIBIvF
      gs1muyRduhqNhmQySWNjI52dnWRkZBAIBNKeo8PhYPr06WRlZbFhwwZSqdRZ3assuFdfX09x
      cTEmk2nY7Q1rBTBt2jReffVV5s+fT1dXFzU1NVxzzTV0dXVx55130tHRwXPPPYfdbsdqtXLn
      nXcya9Ysrr32Wg4ePMhtt93Gl7/8Zfbt20dzczMzZ84kGo2i0+loaWmhubmZY8eOKeFnA9Fo
      NPh8PrxeLwsXLuRb3/oWd9xxh3KDJSUl3HTTTXz88cfU19ezf/9+Zs2aRUNDAwaDgaNHj5Kf
      n48kSUyZMuW09zBUVC525ELrsiKuEEIp6i4PPtA/sQqFQjgcjiH91OFwOC0y6GQhiueKuXPn
      cuDAAQoKCohEIoTD4Uty8B+IwWCgt7eX9evXo9FoSCQSXHvttVRUVCCE4ODBg3R0dBAIBM7J
      M9ZoNMTjcV544QUKCwuZMmUKxcXFp3yOw1oBlJWV0dPTw759+7juuutobm7GZDJRUVFBW1sb
      tbW13H777Vx//fXs2LEDo9FIRUUFJpMJrVaL2+0mKysLp9PJ4cOHsdlslJeXM3nyZD788ENm
      zpxJY2Mjdrud8vJycnJyyM/Px263U1JSgsFg4PDhw0ycOJHKykruuusuZclkNpuZPXs2BoMB
      m82G1+tFp9NRUVHB9OnT2bJlC5MmTcLtdlNdXc348ePPaLdcReViJRAIKDVpjUYjgUAAu92O
      3W5Hr9djtVpxOBzKzP9kESc6ne5TnyQZDAYmTpxIeXk5brcbj8dzWajsajQa9Hq9Ejk1atQo
      srOzkSSJjz76iEQicU4NrNVqxW63E4/HqaurY9y4cYo7cMg+XkpqoJs2bSISiXDrrbde6K6o
      qFyWxGKxs8puPRMkSeLZZ59Fp9Nx4403smrVKnJzcxFCnLVk/MWCEEJxlQMcOnSI3bt3n5fk
      t2QySSQSYfLkyUydOvWkRmDIRLCLkRtvvBE4TyFdF+ctq6icN7Qa0F4ErhatVkt2djbRaJRR
      o0aRlZVFdXU1o0ePPmcGQKPRnNG4Ic/QzzYySQ6lDYVCyl7N+Rpn5QS/ffv2UVdXx9KlS4dc
      aQy51otEIuelcxcj4ZRgr//SCD1TUTlXTHCZKLCd3EXwaTFnzhxWrFhBKpXinnvu4fnnn6et
      rU0pJnWmM+Wz3UsQQij5S2c7YDc0NNDS0sLnP/95LBbLeZ1o6/V6HA4HgUDgpMepctAqKioX
      nMzMTBYvXkx9fT0Gg4EvfvGLABw5ckTZ0D4fnCqBVM4fOheb0larlRtuuAGn03laJTHPhkQi
      QTKZHPL3wzIAu3fv5umnn+bll18+ZZLDoUOHCIVChEIhNm7cmPa7lpYWnnrqKf70pz/R2to6
      6HVUVFROj3g0wq73/4+2+hrlPSEERw9Xs3vjOyTicUJ9PnZvfIeayk8uWhdvcXGxkqOTmZnJ
      ggULcLlcZ+0GGpgEOtSAf7IB/lwlpul0Onbu3El3dzcHDx48r4ZNkiSSySRlZWUn/byHjAIa
      aDU2btzIzJkzMZvNvP3224wbN44XX3wRr9fLmDFjeOWVV9ixYwcFBQX8/ve/p7m5mdzcXF59
      9VXq6+txOp1kZWVRU1NDMpnkmmuu4dVXX6WsrIxXXnmFxsZGjEYjv/vd74jH44wePZoVK1Zw
      7NgxysrKzntIWEJAR+zi/FKoqJyK7f+3hvFXX0f1ts2MLClFbzAQ9vdxaNd2SidP59DOrUhS
      isLxFTQdPIAzKxuz1cYIsx6HMV1750zkXs4lAzegR4wYwdatW7HZbGmumNNhqMH+dKVjztUq
      AFC0e86VrtLxRKNRJk2aRDQapbGxkfHjxw9pRIftAjIajVx33XV0d3ezcuVKJk+ezMcff0xf
      Xx/FxcUkk0m2bt3KuHHjWLRoEW63G7vdzty5c9mwYYPSzp49e1i9ejUTJkzAaDQyfvx4tm/f
      roRJ3XzzzaxevZri4mKqqqquKFVSFZUzQZIkXNk5jCwpo8/TL33S03GMMVeVkz1yFLFIhJKJ
      U4kE/IT8fdidrgvc4+Fx8OBBjEYj1dXVNDQ00NHRcU5WL0O18WnkHmg0GiRJwmw2n9G+xkC5
      m+Olb6A/E3nhwoUUFRXR29tLUVHR6UcBDUYymeTgwYO43W4ikQiHDx9m2rRpSoGH8vJyIpEI
      ZrMZo9GIVqslMzOTnJyctA6OGTOGxsZGKioq2LhxI1qtlpycHLRarSLLHIlEqK2tZfz48Z96
      SJqKyqWGJKUQQhCLRtD/9ctuNFvweboQkgQIWmoO0XSoigV33I3uEkmGLC0t5eDBg2RmZhIM
      Bunq6lJyGoY7WMsz9/NpOD4thBBYrVZycnKQJIm2tjby8/OV+gA2m41JkyaRlZXFzp07SaVS
      ikrpUCuYYbmAenp62LBhAx6Ph3vuuYfi4mJ27txJNBpl2rRpVFZWkkgkKC0tpbS0lFWrVlFa
      WkoqlaKkpAS/309ZWRnhcBin08kXvvAF1qxZQ1lZGXv27MFgMDB9+nQSiQQbN27k9ttvZ/fu
      3YRCIaZMmXLeY4FVF5DKpUwiHqNq62b8Pd1UXHsDVVs3M6p0HPs/2khL7WGKyiex/+NN2DIc
      tDXUkj1yFAaj6aJ0AQ3EbDZTUVHBoUOHMJlMmM1mUqkUoVDonNbvOJ2ZfzweV9xRnyZCCCKR
      CDfddBN5eXnk5OTQ09NDY2MjI0eO5MYbb6S4uBir1UoikWDLli3EYjHa29vp6OigqqqKMWPG
      nLAaGDQRTL7YlYIaBqpyqROPRTEY0zVgJEkilUhgGGIVPVgY6IVIBDsVyWSSzZs3U1dXh1ar
      TZOQPh8MXDHIz1N+nUgkFPG94/sghKC3txej0YjRaDxnzzGVSuFwOMjMzKSjowO/34/JZOLa
      a6/FbrfT1NRERUWFsleyb98+KisrldexWIxkMsmsWbNOkIy+OEy9iorKWWE0nRhSqNVq0V5k
      g/mZoNfrmT9/PvF4nAMHDpCRkYFOpzvjspSnYjADAH8zApFIBK/XiyRJirvbYrHQ29vLqFGj
      +MxnPkNTUxN79uxBr9ef1d6CEAKj0agIzMltySu1nJyctEpqsViMnTt3Yrfblf6bzWa8Xi+V
      lZWUlZWl7T0MaQAuBy2O4WIUgmsu/e+JisppYdZdOmlAGo2GoqIienp6FDXh82UATuXrt1gs
      SiJXIpEgHo9jNpuZN28ehYWFBAIB8vLyKCwspKmp6axWAuFwWFFl1ev1hMNhxf2Vm5sL9K/0
      IpEINpuNlpYWNBoNkUgErVZLMBjEaDTS19dHOBympaWFkpISpf0hS0Je6mp8p4MWcJz7aCwV
      FZVzyOjRo/n4449JpVI4nc4L3R2gf5U1efJkSktLaW9vZ926dXzhC19Qyj36fL4zdqcnEgmC
      waBSGdFms2G1WkmlUmRmZiruukAggEajwev1UlZWRllZGdC/X7Fnzx7q6uooKiqirq7uRLXl
      8yUGN7BUo4rK5c7Av/eTuQ8GQz7n+M3F498b2O7ADNWBfuqB7w08f7DjB+Ni3AMYyIoVK85r
      fYLBOH4fQEbeK43FYmRnZxOLxUgkEmRnZ2Oz2ejq6qK9vR2n03lCPd/hIEkSfX19OBwOpWRm
      ZmYm8Le9h9LSUsxmMyaTid27d7NkyZK0vyE5cTeVSnHo0CGmTZs2PBfQwE788Y9/pLu7G6PR
      yFe+8pW0JURVVRVFRUWKz0nmT3/6E3fddRc2m43e3l7+/Oc/E4/H+ed//uczehgqKhcrciWu
      RCJBXl4ePT09CCHSfLM+n08p/JGZmUl7eztGoxGbzYZWq8Xn86HT6ZSauJIk0dnZiUajweVy
      kUql6OnpoaCgAOiPzJM1clwuF0IIpdyjRqPB6XTi8XiUAiSyQiT0J1hdqhMzg8FANBq9IEbq
      +HBSuRykPCvX6/Xo9Xp8Ph8ej4fMzEzsdjsmk0kpdHM6IalyHQGdTndCvH84HFaqqOXn59PS
      0kJnZydNTU1p4/PAsVZWIh3IKQ2ARqNh+fLl/PKXv+Sb3/wmdrudF198kWAwyJ133sl//dd/
      MW7cOJYtW8Z7771HKBRi2bJlyiYJwB//+Ee+8IUvMGbMGDQaDX/+85+JRCIsW6oHFV0AACAA
      SURBVLaMvXv3Ul1dzWc+8xm0Wi3r1q3juuuuY+TIkaxZs4aioiJuu+22YT0wFZULgeyO6Orq
      QgiB2+3G6/WmHZNIJHC5XOj1emWwcLlc6HQ6uru7cTqdaTPbcDiMw+FQNhddLpeiIKnX65UZ
      50BpFiEEI0aMoLu7WznfbDYrBkkuG5lMJs+LDPGngcPhuKDx+KcawIUQpFIpFi1axLFjx/B4
      PFgsFqZOnUpfXx9Hjx5Fp9Od4IqRz5N/hv5avwM3cxOJhFLrQS76Y7PZaGtrIxQKce+99552
      Kc1T7gJpNBplp9toNLJjxw70ej3Tpk1j7dq1lJeXc+utt5Kdnc3YsWOVWP6BN+b1eqmoqMBu
      t2MwGCgtLSUSibBp0ybeeOMNZsyYgdvt5umnn+amm27i5ZdfZuPGjVitVq666qrTuiEVlU8b
      IQSdnZ3Y7fYh0/szMjIIh8N0dHSg0WgwmUz4fD76+vpIpVLE43F6e3uJxWJA/8pbNgjyoD+Q
      cDiM1+tNi+uWjYk82wwEAvT09JBMJhXXj1arvWSKrg9GMBi80F04qRstFouRSqVIJpPs3bsX
      m81GKBTCZDJRWlo66N+GJEl4PB5FLjoSiRCNRsnKylJWF6FQiLy8PKZPn86oUaPQ6/XYbDZs
      NhtTpkzh/vvvJz8//7RXdqcdBhqNRnG73bjdbmKxGBaLBb1eT3NzMx9++CEVFRVpIkfycrS2
      tpaCggIaGxuV+rzJZJJ//ud/ZtOmTRw5coRgMEh1dTU33ngjs2fPZu/evTzxxBP87ne/u2SX
      rCqXP93d3bhcLgwGQ1p6viRJaRmYck3eZDKpLM19Pl9azHgqlSKRSGAymZR4d71er7QlhCCZ
      TGI2m7FYLMoMU6vVKiuR7u5uZZUQj8eJRqMkk0kSiQSxWOwEd+2lghCCQCBwUbuQzWYzI0eO
      pKmpSfk8hBC0t7cTCASIx+PKKjAWiykROk6nc1DJBvnvpbCwkLlz55JKpXjllVcwGo189rOf
      paCg4KzyIYZtACZMmIBer2f27Nn84Q9/YNeuXXzjG9+gu7ubF198kaVLl5JIJGhpaWHatGlK
      CjLA/fffz7PPPoskSdx1111EIhGOHTvGjBkz2LhxI93d3dxyyy1UVFTw/vvvk5WVxaFDh6is
      rGTy5Mnq4K9yUWM2mxVXjN1uJxQKodPplNlcZmamshK2Wq3o9Xr6+voQQpCZmanUvdZqtRgM
      Bnw+X5qLx+VyKcZAdgHI0SFut5ve3l6ysrIIh8PEYjHlenKb8h6Cz+fDZrOdFwGyTwOfz3dB
      xoKhZBQGcwfJg/WxY8fSzq+rq1Mkb4QQhEIhCgsL0Wq1mEymQSWbU6kU+fn5zJ07N804XH31
      1YwYMSJtj+lMuaRKQqqoXErIs/XT8bcnk0lFF+t8XeNkXMxRQLW1tezatetTk2EYjrE5fviM
      xWJ85jOfoaOjg8OHDytthEIhJXEsmUwqP5/sWUciEW677bZzMtAPhZoJrKJynjiTSlanq8Nz
      NtWyLjXy8vKUpKvzigZ69C0EtL3ENRFMwkqGlEVWctSJhx4X9ms0GmlqalIisKB/Jh+JRCgr
      K8PtdtPc3Ew4HD6pSqecZHbw4MHzGrU1ZE3g81msQEVF5cIjZ5deKsghs+cTjUZDt76JdkOd
      8l6MEH5tv8x2VnLUSaOAtFotDQ0NaW42nU5HRkYGXq+Xrq4uDAbDoIO/7BqSN5ErKipOaiTO
      BUN++qpnSEVF5WLC7/d/KhFM3frmE9/UQLfu6KCrgOMZzKjKrp6TrdbkjeEpU6Ywfvx4srKy
      ht/pM+SU5l/ewZY3KUaMGJEmz5xMJgfNzKuurmbcuHEYDAZ6enqUsKZTLd/k9iKRCK2trYwb
      N+5M7ktF5aJCjsbRaDTY7XbC4TDJZBK73a5otgghyMjISMs8DYVCWK1WtFqtUt/VbDYTDAaR
      JAmbzaYMOJIkEQwGlboax18jEolgMpku2U1gh8OB0+lUQmXPB5ImRVITH/R3CU0MNAJOMjc+
      PlFsOMRiMSWTfO7cuUycOPG0+nw2DGs99cknn/Dzn/+cDRs24PV6CYVC+Hw+hBC89NJLNDQ0
      KLGqcnTDu+++q7iRnn76adauXctDDz1EfX29Ipsai8WU0K5AIIAkSTz33HO0tLTg8/n44IMP
      6O3tVZZEcsalisqlhiziJcd1y4O03+9XBLuO17iPRqPK5qH8PYlGowghMJvN2O12/H6/cnxf
      Xx9WqxWLxUIymSSZTCrXiEQihMPhSzoHQC4edT69E1qhwygGrz9iElYQJy8gf/zr4zN4B8Pr
      9dLb24vFYvnUJ7zDygS+/fbbOXToEF/5ylfw+Xz8+te/xmKxsHDhQnbu3Elvby933HEHb731
      Fl1dXdxyyy1pbeh0OpYtW4bf7+f1119n3Lhx1NXV0dvby/3338/q1atpbGzk3nvvZffu3YTD
      YRYtWsTevXvxeDyUl5fT2NhIRkYG5eXl3HDDDeftgaionC/8fj96vV6Zkff19WGxWAgGg6RS
      qf7Sji6XIgURiUSUmPdgMKhUy9NqtUSjUYLBoKKIKYQgHo8riVIOh4NYLEY8HlcMz6U8+MuU
      l5fT3NysGNHzsTmamyyhRV8NA5sWGnKTJefc+MiT35ycHG644Ybz7vM/ntPeUTlw4ACf+9zn
      WL58Ofv27WPatGnccccduFwuJcGluXkQHxp/2zHftWsXBoOBWCyGx+MhHo9jMBgIBoNMnjyZ
      pUuX4na7mT59Ovfeey9er5exY8fi8Xgu2hA1FZWT4XQ6le+IrOtjt9sxm83odDqcTicWi0VZ
      NYdCIYQQhMNhJZ9A/pdIJLBYLLjdbiX/YKAukFarVVYcWVlZ59Vl8mnjcrmYOHEiTU1NinTC
      uUQIgTuZT2FiImbJjk7osUgZFCUm40yd+3BMi8VCVlYWNpuN7Ozsc97+qTjtEIDS0lJWrlxJ
      ZmYm5eXleDwe1q5dy7Rp0/D5fIpa3UBSqRR/+ctfqK+v57777mPPnj2Ew2FmzJhBQ0ODoncN
      /Snzb731FnPmzElrQ6vVUl5ezrZt25g5c+YZ3q6KyoVBdnHK7kzZv280GrFYLHi9XoQQOJ1O
      /H6/MrMPBoOYzWacTmdaQpKcFKXX65VjjEajosHlcDjo6+tTKliFw2EikQjxeByHw3FJRf8c
      T3l5OQcOHDhvoZFCCFypPFypPPod/n9VVj2Z8/8M0Wg0hEIhFi1adGEE7oZbErK7u1tRKmxt
      bSUajVJaWkoymaSmpoaSkhKOHj2K2+3GbDaTSCRwu93odDq6uroIh8OMGDECm82GJEk0NDRg
      MpnIy8ujpqaG7OxspdKPrF8di8XIyMhQlsjt7e2Ulpae9xrBKirnmlPJMctfQ9kVdCpXwMD2
      otEoZrNZcR0NJgc9GAOz9WUu5kSwgRw+fJg9e/Z86rV5zwe9vb1MnDjxhEnvp4FaE1hF5Qrl
      UjYAyWSS9evXEwwGL2mpGEmSaG1tZezYsXzpS1/61K8/5DrwSskuVFG5UrmUZ896vZ6FCxfy
      8ssvnxA9dSkhy4RPmzbtglx/yJKQqgFQUVG5mLFYLJSVldHa2koymfzUI2jOlmQySWlpKZMm
      TSIjI+OC9OGUYnCy2JR8mF6vH9bMwev14nQ60Wg0SgEMWSJ3OIko0WhUqUNwKuSNtUth6apy
      +ZFKpZS/V71eTzweRwiByWRSfPHye9D/HZITK3U6HXq9nmg0qihDysjfvYFtwt+ySgcTgZP3
      EPR6vZI4Ju+ZRaNRdDrdSQfKS8UFJBOJREilUjQ3N1NbW0skErkkXEKJRIKJEydSUVFx2pNt
      uXiMRqM566S+U46uQgieeuop/uEf/oHf/OY3NDY2KgM5wPr16/F4PMqx8h/pU089RSgUIplM
      8utf/xohBAcOHGDNmjUAaTHJA8+Tf5aTwORjj/89wMqVK0mlUrS1tbFt27YTjh3sOioq5xo5
      FLOrq4toNEogECASiaQVL5F1/ru6upAkiUQiQSQSwefzEQgESCQSeL1e4vH+LFS5JKRcWUzW
      85fP7+7uVr53MnJZSK/XSzKZVJIoe3p68Pv9ynuDSQ9fqlgsFsxmMwUFBVx77bX09vbS09ND
      e3v7eQkTPVskSSKZTDJ9+nSmTp16Rp6WRCJBKBRSdIPOhlPGgmm1Wh544AEeeughvve97yFJ
      Eg899BCpVIp77rmHl19+mW3btvG1r32NlStX4vf7ue+++5TzZeGjzs5OPv74Y26++WZee+01
      Dh8+TElJCXPmzOHpp59m1KhRzJo1i1WrVlFRUYFWqyWVSvHQQw8pGYA33ngjq1evJhaLsWzZ
      Ml577TU6Ojq49dZbCYVCfPLJJ6xduxaHw8Edd9zBf//3fyNJErfffjvd3d1UV1czZcoUPvvZ
      z57VQ1NRGYjNZiMQCKDT6ZQYfbkUoyztYLVaSSaTykrBYDAodWPlEoHhcFhZ8Wo0GnJzc5Xa
      vzabTUnq0mq1jBgx4gQDEAqFMJvNxONxRXc+FothMBhwOp1Ktv6lMEM+HfR6PU6nE6fTqSiG
      JpNJJbTWYrFgs9nSJDb6+vqA/s/u03R3azQabr755rOK+ZcntafjURmK094F2rJlC/Pnz+cb
      3/gGGzZs4Prrr2f58uUUFBQwduxYzGYzlZWVaedcf/31bNu2jba2NoqLiyksLCQ3N5dt27ax
      bt067rnnHpYvX86aNWv47ne/yx133EFXVxfxeBxJkvjRj37EsWPHyMzMJD8/n9bWVux2O5Mm
      TeKBBx5Ao9HQ09PDO++8w4MPPojL5aK2tpbS0lK+8Y1vUFNTQ1dXFw6HgwkTJpzxw1JRGQo5
      msZmsxGLxRSpFBm5IIzb7QZQZm6y0ejo6CArK0tp5/hBWi7wImcKH/97SZLo7e1VMohlQ2Oz
      2Ugmk8Tjcbq6usjKyrpktYCGQ3l5uRIKO2fOHHJyctDpdPT29tLd3a3802g0WCwWQqHQp5Yo
      J4RgzJgxZ53wZTKZMBqNmM3ms87nOG0DkJWVRV1dHUeOHCErKwuDwUBtbS379++nubmZyZMn
      n+BqmT59Ou+99x4FBQUIIVi5ciU33HADJpOJ7OxsqqqqaGxsxO12U11dnZZJPHBG9MYbb1Bc
      XExeXp5i/erq6hSLaLPZqKur49ixY0q6vfxFue6667j22mv505/+dMYPS0VlMAKBQJr2u+xj
      z8jIIBqNkkgkFNek/IUdaAw8Hg82m41oNEoqlVLyXuTBSS7pqNVqldVCMBgkHo8r2cGSJDFy
      5EhsNpuyd5ZKpZQ9AY/Hg9VqJRqNXhaSEEMxbtw4NBoNsViMcePGMW7cOMxmM1lZWYwYMUKp
      pOV0OjGZTDidTiW7+kwRQqR9HnJtX1m3SX7espDf2SIbL3mP6WzQPfTQQw8N50CbzUZBQQEF
      BQV0dXURCAS4/fbbKS4uprKykilTptDT04PL5WLChAmMGjWKkSNHotPplEzf2bNn43Q6sdls
      NDc3M3PmTBYsWEBDQwOBQIDFixezd+9eNBoNZWVl5Ofn43a7KSgoICMjgxkzZrB3714mTpxI
      WVkZJSUl7N69m4qKCrKyspgzZw4fffQRV199NRUVFbhcLnJzc3G5XCQSCUXG4tOQWVW5cpA3
      dTMyMjAYDKRSKcxmM2azmb6+PsX9INfuhf5ZnGwMzGazMrgPDGgQQihKoDqdDqvVmubGsFqt
      6HQ6pUykTqdDq9ViNpsxmUxKjWKn06lITsj/hho45ICNSxV5ddTd3Y0kSRQWFlJTUzPkqkcu
      4iKLsXk8HqVYy2DnyP53+TOTN517enqYOXMmt956K1OnTmXKlCnKJm1mZqayv5NKpS4qhWO1
      JKSKynliYKWo83XOmVzjZFxqUUAyPp8Ph8OhGNiqqioqKyvJzc1V5DFO5vpKJBJKG0ajEY/H
      Q3Z2dprBjcViOJ1O5s6dq9RdliSJqqoq7HY7er2eMWPGnNC2EILNmzdz7NgxotEoS5YsUaQ+
      LjRDVgS7nCIFToUkSUrRbRWVKwWj0Yjdbr/Q3TgnuFwu5WdZLjszM5P29nY+97nPsX//ftra
      2obc8DUYDIwYMUJ57Xa78Xq9ykDf19fH5MmTufrqq9P2aXQ6HVOmTDlp3+QaEEIIjEYjNTU1
      F42e2ZBrPTn87EpA1mZXUbmSuFw3g2WRvN7eXkwmE5WVldx4441s3ryZrq6uYd23Xq/HYDAQ
      jUYxGAxkZmYya9asM+5TdnY21dXVmEwmurv7y0vK+0IX8nMYMhP4fFaiV1FRUTmfFBUVYbPZ
      qKyspL29nV27drFgwQI2bNiAx+MZVoKp3W6ns7OT7OxsZcP+TBk9erRSDMjn8xGLxdi8eTN+
      v5/bbrvtgglcXrpiICoqKionYcSIEdx8882UlpZSW1tLPB5n/PjxQ0b8yBvCFotF2SjPzs7G
      7/cryX5nilarZcGCBcrmva/PS8mkQnKK3fQFfBfM5X7pbverqKioDINYLIZer6eqqooZM2Yw
      b9483n///TS3r16vZ8KECeTl5aHT6QgGgxw6dIje3l7cbjdjx449635kZmYyffr0/sptUh/B
      RB+OEXYOHj1AuTSZvLy8s77G6aKuAFRUVC5rZsyYQV5eHvv376empobCwkJmz56tzLo1Gg3j
      xo1j1KhR6PV6NBoNGRkZTJs2TcmsHj169Dnpy7hx4yguLiYl/ibhkJXtpq2tjUAg8KnL1agG
      QEVF5bLG4XCwcOFCpk+fzuHDh4H+gXjWrFmKqFpBQcEJ5xkMBnJyckgmk2cVJCJJEj6fj87O
      Turq6mhtbSVD70Kn0aPT6Miy5iKEoKur66wS0s4E1QWkoqKicDmnBU2ZMiUtTr+kpIRIJEJV
      VdWQm8J6vf6sonT8fj/r16/vd/sEgxiNRqVy24gR2Vx73XU4HU6ynTn4/X4qKyuVqody8uD5
      1G5SVwAqKioKskppc3PzZWcMNBpNWjRPJBKhpKQEjUajKA8PRFZXNZlMHDly5KRtS5KE1+vl
      wIEDyoYzQFNTE+PHj8ftdnP99dczc+ZMSktLcTgc9PT0smvnLkUKPDs7m6uvvppUKkVnZyfh
      cJhYLHZePwc1E1hFRUVB3jD1eDzs3buXCRMmUFhYeKG7dV6QM3lfffVVHA4HM2bMwGq1Av0D
      en19PfX19QghyMrKYtGiRYO2I0kSa9euxev1YjQaicfjzJkzh5KSEuWYZDKZJsHR1dXF9u3b
      CQQCOBwODAYDU6ZMwWAw0NPTQ15eHrFEDKFJYdJbsFnPj2qp6gJSUVFJQ6fTkZuby/z589mz
      Zw8mk4nc3NwL3a1zjlysSnbPbN26lezsbAwGg1KnQZ4fd3R0KPIQx+P3+xUtIdlYHJ9HJetF
      RaNRoF9Uc968eWzduhWHw0F9fT2bN29m4cKFHDt2DKGTSJjDSCKFQWtiJGNwZDjOeRnPIVtr
      a2tj5cqVyutoNMpTTz01bOnUgUuqNWvWpBWZj0ajvPnmm0Oe293dzV/+8hfl4cvFXk6XVCrF
      O++8w//8z/+ccRsqKlcqRqORZDJJTU3Nhe7KecNoNHLDDTcohqC9vZ3m5mb8fn+a60Wv1/Px
      xx+njX9CCBKJBHv27MFisWAw6THbTNhstkFVP2Vl2Egkorh2Zs6cybhx41iyZAlf/vKXMZlM
      uN1uwokA0l8jhRJSjFAscELxF1nCJhgMKoqwp8uQBqCjo4NNmzbR3t4O9A/ClZWVSsePr1YU
      jUbp6OhQ/FbPPPOMkvHW09NDOBymvb2dZDKpyNPG43Fl1zuRSCg/ezwe3n//fQ4cOADAjh07
      lBtub28nGAwihFCMivxggTRD8+abb6LRaLj77rsZPXq0oukhKwVCfxGNrq4uJSQsEAjQ3t6u
      /L6vrw+Px3NZS+iqqAzFddddx+zZsy90N84rpaWlfPGLX8RisRCLxQb9rms0GqLRKKtWrWLb
      tm1s2bKFt956i5dffpm2tjbc+U6KpxZQNGUkOWPdBEPBE9oxGAxotVqsVqtiXGTVUUmS8Pv9
      vP766+zfv5/D1TUI6a9VECWoOVRLX18f77zzDtu2bSORSBCLxUgkEorxCoVCp71fMKQcdHt7
      O263m/r6eiZOnMiaNWsYPXo0kyZNYu3atRw6dIgdO3ZgMBjo7u7mj3/8I5FIhDVr1lBUVMS6
      deuQJImMjAzq6urYs2cPra2tVFdXU15ezoEDB3C73bz33ntMmjSJVatW4XK5cLlcSqWkHTt2
      MGvWLHbs2MG1117LihUraG9v55133qGsrIz//d//5brrruOJJ56gp6eHUaNGsWLFCmbMmAHA
      2rVrufvuuzGZTDgcDrq7u1mzZg1NTU3s2bOHwsJCHn30UQKBAH6/H0mSWLFiBb29vRw5cgSD
      wcDzzz9Pd3c3Wq32slwGq6gM5Hg56IE1NS5nDAYDV111FcXFxcTjcXp6ek64d1n8TXYPyX59
      T083468ei07f7+OXNCl0Gh0WgzXtWcr1mI1GI5IkKTP6WCyGxWIhIyODsrIyZsyYQX7OSEJ9
      YRx2J1mWERQXlmA2m7FareTn52O1WpXykrIEtlxv4nTcRCc9Mi8vj66uLsLhMDabDZ1OhxCC
      lpYW7r33Xr71rW+xdetWJEnis5/9LEuXLiUzM5OxY8cyYcIE7rzzTkpKSjAYDHzta19j2bJl
      aSnVJSUlHD16lGg0Smtra9pmk9lsZvr06WzduhXoXyHU1tZSWFhISUkJu3btwul00tnZid1u
      p62tjYMHDzJ+/Pi0D2zgw3C5XIwcORK9Xk99fb3y4ebn5zNjxgw+/PBDKioqKCkp4cCBA8pD
      LS0tTWtXRUXl8kOj0eB0Opk1axY33XQTI0eOJJlMpsk0HD/D1uv1jC4cjU6fHioqu2cGHi+P
      RxqNRqnXICedyS4jueRndnY248eWk+8chTsjC6vVitlsprCwkKysLKVGxEC56uPHu+Fw0qM1
      Gg1FRUW8/PLLacvAVCqlSEYPdcGBxdsHtjfQomq1WmbNmsWKFSu46qqrTphpzJs3jy1btpBI
      JJRzbTYb5eXlXHPNNcyYMYM33niD0tJSrFYrO3bsSJNmNRgMdHV1Af0fyDvvvIPD4WDx4sVk
      ZmbidDr5wQ9+gNls5umnn1aK19jtdv7u7/6O4uJi/vEf/xG/388rr7wyzEeqoqJyKSPXY547
      dy533HEHM2bMUOSci4qKmDBhgjIAz5w5kwXzFmIzZCjnazU6bMYMqqqqePfdd/s3dQcZC+VZ
      /2Cx/rIukdlsVgzF8ej1emWFIYQ4ow3iIaOADAYDkiQxb948/u3f/o2vf/3r7N27F51Ox/Tp
      03n88ceV4gYDZ/WyvnhRURH//d//zYIFC9IKMss/y5l1s2bN4s9//jOPPfZY2rXlepcLFizg
      pZdewmAwMHPmTDZu3IhGo2HRokVcddVVPPXUUyxduhSn08natWvJyPjbB7F06VKeeeYZHA4H
      ubm5lJSUsGnTJvbu3UssFqOzs5NVq1ZhNBopKChgzpw5PPPMM2RnZytFvDdt2kQqlTql5reK
      isrlh9FoZPz48Sd4AEpKSti5cyeZmZkAjLDko5eM6Aw6rAY7Bq0Rt9tNbW0tVVVVfPnLXz6h
      WMzZutbklYTsBpLLiNrt9mG3fcZ5ANFoVJkxD4ZcQUeuTzrUMbW1tWzcuJFvfvObw7puIpFQ
      rO9wEEIQj8eVDDy5WLbcp2QySSKRwGw2Ky6fRCKhWF15k+Vc1PJUUbnYuVQrgn3ayJu2x3s1
      ZIQQfPzxx3g8HjQaDddffz2lpaXnvB9yzejjS4UON2fgjPMATjUgajSaUx6TSqVoaGjgrrvu
      GvZ1TzcZQraSMsf3aeAySj5eLuotX+98JGCoqKhcusguHLnwu/yeJElUV1cTjUaJx+Pk5ubS
      0dFBcXGx4jYf7ngiSZIS3qnT6QZ1FckT2YHzeLmIzXC4oFIQer2eW265Jc1to6KionKxI08U
      bTab4l2QN2LlyEij0UhGRkZayLoc8nkyx4sQgiNHjnDw4EESiQSSJBGLxUgmk8reqvxPVi/1
      +/3K+QMnsKdCzQRWUVFROQPk0pN6vR6j0UgikUCn03H11VdjMpk4eKSauNNP1kQbnlAn8aSb
      SCKEQWfEbu6P/BnoHg+HwzQ3N9PW1kZVVRW33norW7duRQjB2LFjcTqdJBIJxXgkEgkl+1gu
      Mq/Vak/LAKhaQCoqKgrqHsC5IRwO8/7edZDRn6Cq1ejoCXYSjPeh1xoYm1nOzFFzcWY40Wg0
      1NXVsXXrVnQ6HX6/X1lVmEwmRUZi3LhxxONxXC4X+fn5vPbaa+Tn51NYWEhRURHQv3qw2Wxp
      bu2Toa4AVFRUVM4xQghcWU58cQ8ASSlBOBFQfj7i2YdBY2TW2AXo9XoOHz6MyWRSBOqysrIw
      Go0EAv3n6PV6GhoaADh69CiVlZVYLBaCwSBHjx4lJydHWVGcTjjosFcAAzc6VFRULk/UFcC5
      IZFI0Olr56CnkkgihD/aiz/qSztGk9AzJ2cxHo+H9vZ2ZX+gs7MTt9t90ijLwZATWk+neM1p
      GQB5N1pFReXyRDUA5wY5/DwSDbOzdTM1PftPPCihIbbPitvtVmSoAeLxOOFwGJfLNWT7A8M+
      AUVfLScnh8985jNpdQ9OhloQRkVFReUcI/vvbVY7BY6iQY8pcBWTk5OTNvjLUUTxeByPx4PX
      6x00i7ioqEhJQgPStIXWrVs37PrC6gpARUVFQV0BnFuEEARDQXa2fMjh7r0I+ofbTEsO80s+
      x55P9vUnlGk16BwCrUUgkpDyaZES/XkDshHQaDSMGDEC+JtSgzzo9/b24nQ6GTNmDA6Hg9bW
      VkaNGoXZbMZsNpORkYHT6TzBha9uAquoqKicJzQaDTarjWsK51HsHk9vuAuLwUa+o5AMW8bf
      cgfyU+gcAv46PuucEvGjevToGTFiBEKItBorxxePNxqN+P1+ysrKlM3gYb+2WgAAIABJREFU
      HTt2cPXVV9PT00N7ezvz58/HbrenK5QOJQc9GGcqOHQlIYTggw8+YN26dZhMJvLy8ggEAvzl
      L39h0qRJSrbgq6++yrZt2ygvLyeRSPC///u/eDwexo4dy/vvv8/bb7+N3W5XKgu1t7fz4osv
      cvToUcaPH8/q1avZvn070WiUgoICtm/fzpo1a3A6nYNWLVJRGQ7Hy0GrnD2yWyfD4iQnI5+s
      jBysFis6nY7GxkbiRNHnSgycnGt0gAQi8rdM32g0qriLIpGI4uIJh8NEIhElJ8HpdHL48GEK
      CwspLS0lOztbyQ8Ih8N0dnbicrn61UM/7YdxOeLpC7NmyxGOeQJIkoTBYODv//7vWbNmDQDP
      Pvsshw8fVo6XS88tWrSIF154geeff57bbruN+vp6WltbMZvNfO1rX+ONN95Qznnuuee4++67
      CQQCNDY2UldXx5IlS5g6dSq9vb1s376d+++/n9GjR3/q96+ionJy5KQxo9Go6IzJMfsYBIMF
      V2qMf/POa7XatAxinU5HR0cHvb29aLVasrKyyMjIYP/+/WzevJmGhga6u7sJh8N4vV7q6+uR
      JImuri42b97M0aNH+9tRVwBnz69e/Ij1n9Szr66TW64tY/SoUbzwwguUlZXh8/kwmUyEw2Gu
      u+46NBoNfX197NixA4vFwr59+9Dr9dx0003o9Xo6OzuZNWsWzz77LJMmTWLs2LFA/8zsiSee
      oKGhgaVLl7J69WqOHDlCRkYGra2t7Ny5k/37/z975x0eVZn2/8+ZkplJnZn03hMCIhJ67wgi
      sFLWtoquZV3dfdV91911/anru6u7ruVFsKHvuiKrKBaQ3ktoQmihppDe+0zKZOo5vz9iRiIE
      CCQk4PlcFxeTmXOe85wp9/2U+/7ex9FoNLITkLli5BnAtUGSJPLy8jhz5gyCoECpbz8DQPp+
      H6Dlh+MbGhrcaspKpRKLxYLBYHALWbYJW7bJSFdUVFBcXExWVhYqlQqDwcCJEyfcezxRUVHy
      DKArEL/3ymqVAkGAf/7znwwZMoQZM2awceNGioqK2LdvH0eOHAGgf//+3HbbbXh6toaAtW2w
      V1dXo9frefnllxk7dixTpkxxX2P//v289tprzJ8/n6NHj/L666/z9NNPs27dOnx9fZk6dSrP
      PPMMe/bs6ZH3QEZG5vJwOp2YzWb3gE1ygKtagfR9BUlJAleTgMusaM0nqKykoqICh8OBydSa
      SyCKonsW0YZKpcJut2O326mvr8dms9HY2Iifnx8tLS1899137uNzcnIoLCyUN4Gvlhabg7Ka
      1my9+DADluZmsrKy8PX1JTs7m+eff94dEjZw4EDeffddFixYwKZNm6irq+OBBx7AbDbz97//
      HafTyZNPPkleXh47duwgKyuLW2+9lRUrVpCcnMz7779PdXU1CxYs4B//+AdarZZ+/frRv39/
      1qxZQ1ZWFv369evhd0RG5qdFW2nIy0mSdTqd7s3c8ePHI4oi+fn55OfnIzYpEHQSkgPEFgFJ
      bI0Cam5uJjY21h3rX1lZiVKpJCAg4DwlY39/f5qamjAYDO1Wa84NNYXWJaWysjI5DPRq2XTw
      LO+uOoTRV4fBR8sbj0/t8ItQXFxMdXU1qamp2Gw2VCqV+/202+0XrOeZnp5OeHg4YWFh7Y5p
      q1vQJvzUVn9BrlsgczXIYaCdo7a2loKCAvr27YtOp7vosZIk0dzcjMvlamcj2gJH6uvrzzPU
      9fX16HQ6NBpNuxH/1SoyZGVl4enpKS8BXQ0ul8ja/TkkRhgZNyCa0upGbA5Xh8dHRkaSmpoK
      gEajaedMOyqcM2TIEMLCws475sd1Cy6n/oKMjEzXIggCBQUF7sHdpWhqarpgGyEhIbS0tLi1
      f9rw8/OjubnZbfA7KkDTGSRJIiQkhIiICNkBXA1Hz1ZQVGlm1qhk4sMMWO1OymsbL32ijIzM
      DYHRaOSOO+4gKirqsuQXGhoasNvt5z2v0WgICAhAkiQaGxtxuVzumYIoil3aZ0EQ3ElhsgO4
      QiRJYs3eLIL0XgzvG0FMqB5BgPxy06VPlpGRuWFQKBTuGuaXwtfXl6qqqnbPOZ1OKisrkSQJ
      Hx8f7HY7JpMJs9nsXu/vLmQHcIXkldVzPK+KacMS8FArCTF646lRk1tW39Ndk5GR6YUIguAO
      xczJycFkMlFbW8uRI0fcFb3aNnL9/f3x8/PDarV2656MHAV0hazdn43WQ8WUwXEAqFVKIoN8
      yS//QbdDRkZG5lz27t1LaWkpTU1N2O1297LPuUiShMlkwuFwoFAoZAfQ26gxWdh7opjJg+Lw
      9frhw4kLM7LnRBFOl4haJUdLycjItEelUhEeHo7NZnOXc/wxtbW1+Pn5daoWwJUiLwFdARsP
      nsUlSswYkdju+dhQPQ3NNmrNLT3UMxkZmd5MaGgoLperwz0Dl8uFQqG4JsYfZAfQaSxWB1sP
      5TGkTxhhAT7tXosLbY0CyCuX9wFkZGTOJzExkQkTJuB0Oi/4el1dnbvA+7VAdgCdJO14IaYm
      KzNHJZ+3zh8W4INGrSRP3giWkZHpgLCwMIYOHXpBJ3AtdZjkMNBO4nSJrNuXQ1KkP32i/M97
      3VOrJtTfRw4FlZGRuSjx8fEXTNw0GAyYTD8MILs6BwBaDb/SGzyiXLID6AzHciooqjJz+8gk
      lB2oosaG6imsNOF0df0HJyMjc2OgUChITExsZ+CVnuARJRI8xAePWBdWdSMm8w+DSafT6S7u
      YrPZrvzaXhLqCBcKL0l2AJeLJEl8uzeLYENr4ldHxIcZqDFZaLRc+QckIyNz45OcnOze7FV6
      gjrKhdJbwkOnRqkDfYIOv0gdtbW11NXV0dDQgMFgQK/Xu0tBdhZBEFAFiAjfW37ZAVwmuaX1
      nDwn8asjYkMNSEBBhbwMJCMj0zFt8g+CIKD0/8EotyEIAp5halBIeHt7YzQa3RFCVqv1soq+
      n4fwo0IzV3kPPxnW7s9Gp1ExaVDsRY+LDPJFrVTIG8EyMjKX5JZbbmnV/NFc2JgLSgH/ICMW
      i8X9nEqlQqvVUl1djclk6tw+gQSS84fglU47gLbalG2Pq6urzytQDK11KkVRpKWlhaamJpqa
      mtwCR5WVle3OcTqd7mPaZI3r61sNqMPhcL92NeteV0O1qZl9J4uZmBqLn9fFFTf9vLUY/XTk
      lsoOQEZG5uL4+fkRGxsLjg6UAySwWmztlH+hVd8/KCgIb29v6urqqK2tpaXl0vlHkiThqlfQ
      NnnoVElIURR59913Wb16NVOmTGHZsmXk5OSwatUqxo0b5w6LrKur4/7772fChAmkp6dz4MAB
      lixZwsCBA/nwww+pra3FbrcTHh4OwOrVq9m5cydFRUXExsby97//naysLBwOB06nk02bNrFz
      506ysrIYNGjQ5Xa3y1iZlsnpwhqenDcMH89Lp2Wfyq+mqKqB6cMSZEkImQ5xOp18++236PV6
      vLy8+Oqrr9i1axdJSUnuCJEdO3awfv16qquriY+PZ/Xq1WzatAmDwUBAQADl5eVs3LjRXQhI
      kiSWL1/OwYMHAfD39+frr78mNDQUnU5Hc3Ozu8BQR4lIcknIa4cgCNjtdooLS1D6cV5tYNEs
      YKl2uJd+lCol3gZPdD5aJJeEJLY6A51OR319fWuN4Usg2QQEEQRtJzeBBUHgwQcfJDQ0FICy
      sjLuv/9+br75ZvLy8loblyQ+/vhjZsyYgSiKTJ06lXvuuYe4uDi3ql1ISAh9+/Z1t5ubm8uQ
      IUOYPn06+fn5jB49mt/+9rccOnSIpKQkHnjgAbRaLXPmzOlMd7sEi9XBlkN5DE0JI9Tf+7LO
      iQszUF7bSIv9/JmRjEwbR44coaCggMrKSk6cOIGHhwdz585l6dKl7mNSUlJ49NFHOXToEE1N
      TURFRfHLX/6SlStXIooiy5Yt4+zZs+7jbTYbNTU13H333fTv35+DBw+Sl5fnnlGnpaWRk5PT
      Y7NpmfOJjY0lKiAOW2lrNTBJAskFrnoFzkolVqsVnU6Hh1ZNVP9QwpODCE0IIPrmMLyNrQa/
      TTb6cvYFJEnCWafAnqvq/BKQt/cPRnD06NG8+eabbNu2zb2ks2vXLlQqFSaTiaKiIgDWr1/P
      9OnTMZvNOJ1OfH19Wbx4sbud+fPn43K5+Oc//0lJSQne3t7tJFBramoACAgI6Gx3r5q0jELM
      TVZmjjw/8asjYkP1uESJwgpzN/dO5npm6NChDBw40K3PfvLkSU6ePElZWZn7GEmSeP7559Fo
      NPj5+dGnTx+WLFnCuHHj2LBhA+PHj28XT+5wOCgvL+ftt98mMzOT0aNHtysTOn36dKKjo6/p
      fcpcHEEQGDp0KDfHDsKer8aaI2DPVeGoUCC6JHc1xoBIPRrdDxIRSpWCoBgDSmWrGddoNNTX
      12M2my+5LyBJEqKrkzMAURSpqKigsbGRmpoakpKSWLBgASEhIcTGxpKTk0NsbCypqam0tLTQ
      0tKCw+Hg+PHjDBw4kOjoaFwuFxERESiVSpxOJ3l5eZSUlBAfH09AQADR0dHs3buXjIwMd4GF
      L7/8kvnz53f2fe0SDmeVkRzlT/IFEr86IjpYj1IhkC9LQshcJtHR0SxYsAB/f38CAwPdz4eE
      hPCXv/wFpVJJVVUVf/vb35g3bx5Dhw5l3759HDlyhH379pGZmQmAl5cXr7zyCk899RTr1q3r
      qduR6SQKhYI+ffpwx+w76JfcH9EpuUfzbVUANd7nLz+rNSqU30cl+vn54e3tjd1u71Bq4sd0
      ag/AZrORlpaG0WikqakJpVLJzp07mTlzJhaLhe3btzNx4kSioqKIiYkhOTkZh8NBfHw8RqMR
      Dw8PAgMD2bt3L3PnzuXo0aNUV1cTExPDnj17SE1NZcCAAWi1WnJzc5k3b557xzs+Pv5yu9ll
      1JotfLThGL+YejMxIZeu9tOGTqtmw4Gz6DQqhl0kZ0Dmp82ePXvYsmULubm5hIWFsXbtWk6e
      PMncuXPZtm0ber2eTz/9lGPHjtHQ0EBycjJbt27FbDZTV1fHY489xuDBg2lpaWHy5Ml88MEH
      GI1GPvjgAw4ePMigQYMoKChgx44dFBQUEBsby7Zt29i/fz8lJSX06dPnPKlheQ+gZ1EoFAQF
      BZGQkEB+fj5WqxWTydRq3A06PHTtReJcTpG6sgYksVWCXqlUotVq3fWFL7Vq0WVF4RsaGvD0
      9OzUl6e+vh69Xt9rN0qXbzvJzqP5LHpyOhp1534Uf/n3Thotdl5/fEqvvT+Z3oXD4XD/iNev
      X89tt93mfl6tVl/0e+R0Otm6dSvTpk1DFEVEUbwiQy4Xhe89WK1WvvjiC/cegCHAj/CUYJSq
      1hmBJElUF9RTX9Fw3tp/XV0dfn5+l6wm1mWu/lwFO5vDeVkG83JqaPYULTYHm9NzmTkyqdPG
      H1oTwtbtz8bucKHxkEdUMpfmXAngGTNmuB//OATwQqhUKqZNmwa0jiIVHUiVyFw/aLVaQkND
      qa2tpb6+Ho1GQ9HJcnwDvFAoFTTVW7CYrbhcLsxmMy6Xy+34LzZYP5cutUyiJPHyJ2lkFtUy
      LCWc/5o3rCubv6as2ZuNucnK0JTwKzq/T3QA36SdIa/cREr0td+8lvlpYnM42XWsEC+tB8P7
      hXeoWSXT+3G5XCiVSpQqJYIgIAgCNoudmuLWgJu2Ub/ZbMbT0xMPD4/WY87Jo7oUXfrtEEWJ
      wkozTS3263oDtMXmYOPBswxKDiP8R5r/l0tsSOtGsJwRLHOtkCSJTQdzeWdlOq99vpfMopqe
      7pLMFeJ0OqlvqIMAK5p4JyGDfb7X8BGQJKndko/T6USj0biXCDUazWUXlOnSGYBKqeDp+cP5
      YM0RTE02WmwOdJprU9mmK9lzoojahhaemp90xev3AXpPfDw15JXVdXHvZGTaI0kSJ/Or+HrX
      GY7nVgKgEAS0Htffb0+m9fNstjRzsvoQzQozggKUagWSRsQpOajJbHAbfJvN1m6px0Orxi/Y
      B61eTWONBafDiU6n6/BaXb443S82iMdmD+LZJdtYtz+HeeP7XvqkXoTTJbJ2Xw4J4Ub6xQRe
      +oQOUAgCcaF6CirMcpH4Xo7D4eCzzz6jX79+JCQk8OmnnyJJEnV1dTz//PMIgsDmzZs5fvw4
      FouFP//5z6xevZqioiL69++Pw+Hg7NmzFBUV8dBDD5GcnIwkSXz11VeUlpZyyy23kJKSwqJF
      i7j//vtJTk5m3bp1nD17Fp1Ox6OPPnpF/W4z/F/uOM3xvEr0XlrundKf+DAjPp4exIXqu/id
      krkWuFwu6ltqaLC1Xz0QBND4K/APMtLcYMFisRAQEEBNTY177T8sKRCttwZjmC8VBdXknijE
      w8Ojw/2AbtmdTI4KYGBSCKv3ZnHr0AR8PC+9idVbyDhbQWGFiSfnD3cnWFwpMaF61u3Pwe50
      XdFGssy1wWq1MmbMGCoqKtDr9TzxxBOcOXOGjIwMt+MePHgwU6ZMYdGiRdTU1JCXl8eDDz6I
      0Wh0H/PSSy+RkJDgbrO4uJgFCxZgNBrJz89n5MiRNDc3A5CZmcnjjz9+0dFZR4iixNGcclbu
      zuRkfhUBfp48PCOViamxeGrlUf/1jiiK2F3WC7+oEFCplXh7e7uTco1GI7W1tRj9jai///wF
      QcDP3xdvb28aGhrw9fW9oBPolh0ihSBw75SbabTY2XAgpzsu0S1IksSafdkE6D0Z0e/q4/fj
      w4zYHC7Ka5q6oHcy3YWPjw9xcXHtZmnffPMNd9xxh/tvX19f3nvvPcLDw3G5XJw+fZo1a9bw
      5ptvIkkSp0+fJjk52f0jq6qqch/z1ltvERcXh4/PD/tJN998M0uXLuX555+/bG13UZQ4nFXG
      nz/cxl+XplFR28TDM1JZ/OR0bh+ZJBv/GwSlUom3hx8CF1g1cIL0oxwvlUqFv78/LS0t1Fea
      vg/ZlzBXNbmLz9fW1l7wWt0WIhAfZmBY33DW7sum0WLvrst0KfnlJo7nVjJtaALaLgjdjA7x
      QxDkIvHXG7m5uYSHh6PRaHA4HDgcDj766COGDRvG3LlzCQgIcGfBt2VcfvXVV8ydOxdoHf2f
      e8yPdXckSeLmm2/mV7/6FQEBATQ1XXyA4HKJ7D9VzLMftBp+c5ONJ+4YwuKnWg3/9bjPJtMx
      CoUCP52BcJ9YOCe8XxLBWaVEdJ2fuqVQKPD28qauuJG8YyUc23WKhurW75WXl1eHYcGdygSW
      JOmy44sFQSDU35u1+3LQalT0iw263Mv0GP/ZcoKK2iZ+O3dYlzgAL60Ha/ZmY/DRkpoU2gU9
      lOkOSkpK+Pzzz8nPz8dgMFBcXMy0adNQq9V89NFHBAQEUFxcTG5uLunp6fTt2xeXy8WaNWsY
      MWIEwcHBuFwukpKSkCSJf/7znwwfPhyr1cratWsZNWoURUVFpKenU1RURHBwMBkZGaxfv57Q
      0FBSU1MvuEfkcokcOFPCwi8PsGZfNmqVggXTBvCr2YNIigxArbp0nHdnkTOBex5BEFCpVGhE
      T85kZKNEhaXWilCvRWy++F6iJEm4HC4azY1otVoEQcBqtdLY2IhSqTwvp6TLMoE7Oucfn+3l
      ZF4l7zw9A733xbX0e5Jas4XH/3c9E1Nj+dWsrpOc/tOSrSgEgZcfmShvBF+HnDp1ir59+172
      Z9e2HHSuAFtncThd7DtZzLd7ssgtqyc62I85Y1MYcVNEt+8lyZnAvYeysjK2b9+Oh4cHFRUV
      hISEXJbaZ0NDa5SQRqNxBzN4enpis9nQ69sHBnTrt0kQBOaP78vB06Ws2ZfNfVNv7s7LXRWb
      0nNxukRuG57Qpe3GhurZfbwIp0vslhGbTPfSWUMuCMIVG3+H08XeE8V8tes0xVUNRAX78d93
      jmBEvwj5u/MTpKamBrVaTXNzMzqd7rJLQAqCQENDg3vFRqlU0tzcfEHlhW6f68WHGRhzcxQb
      vsth5sikXjkLaLG1av4PSgolItD30id0grgwI+u/O0utuYWQy6wnIPPToaKuiSPZ5SgVAmv2
      ZVNc1UBCuJE/3D2SoSnhsuH/iSJJEiUlJe6qiv7+l69G7OPj4w44MJlMKJXKDjXXut0BCILA
      vPF92XuyqNfOAtIyCqlvaGHmz6888asjYkL8AMgtq5MdgEw7RFHi5WW7KapsrRuREG7k2V+M
      ZnByGKqrDEGWub6x2+3U1dVhtVrb1WDpDM3NzXh4eKDT6S5o1ySpk/UArpTIIF9G3dQ6C6hv
      vHTdymuJ0yWybn8OCRFG+kZfeeJXR0QG+eGhUlJQYerytmWub8zNVqpNrXkB/eOCePWxyQzv
      GyEbf5nW8o9KZWvB+CsYlNpsNvfS0YXOF0WRuLi4a+MA2mYBNoeTb9LOXItLXjbHzlZQWGnm
      9hFJV534dSG0HirCArzlIvEy7XA4Xby54jtEUeLRmYN45u5RsuGXcVNTU4PT6XRLgZ9LmzBc
      278LYTab3XUBOsozGTBgwLVxANA6Cxh9czSb0/OoMVuu1WUviiRJrNmbRbDBq0sSvzoiNtRA
      UZUZl+viZdpkfhpIksTHGzM4kVfJY7MHM2NEIn5ecuSNzA+oVCqcTidKpbKdkRcEAaVBxCPO
      iSbBiTpYRKFq7wjaNn99fX3x9fXFbDZjtf6QWSyKIsOGDUOj0XT/HsC5Hb9rYj/2nShm1e5M
      Hr499VpdukPyy02cyKviF1Nv7lbN/rgwAzuOFtBgsWHw6Xzqv8yNgyRJbDmUx7p92cwancyE
      gTE93aV2OJ3Oyy4nKNN9CIJAdHQ0Vqu1XQa5QgNKwzkDSR8Q/RSITYI7SsjlcuHv7+8u0OVw
      OGhoaMDLywtBEAgODiY4OJjm5uZr5wAAQozejB8YzdZDefxsTB8C/Dyv5eXPY+3+bLQeKial
      xnbrdWK/F+UqKDfJDuAnzpnCGj5cc4SBSaHcf+uAXpcbciXaRDJdj06nY/z48d1+nWvqAARB
      YM7YFHYeLezxWUCN2cLeE8VMGhSLXzeHpkYH61EpFeSV1zNQzgj+yVJV38w/l+8lUO/J734+
      vFeu+cuVxH5aXPOc7xCjN+NuiWZTei4zRiQS6n9lBVeuls3fJ35NHRzLsmXLaG5u5rHHHmPt
      2rXk5OSg1+u577773Gnxhw4dYsOGDTz33HO89dZbAERHR6PX6zl9+jSlpaXMnz+f1NRURFHk
      zTffRKlUEhcXx+zZs9G6zHy65A3mjP0/vvnmG8rLy8nMzOSFF14gKKj3y2TIXB1Wm5NXP9uL
      3eHirw9NwMdTXvOX6XmuubsXBIG541IQgG/SMq/15QFYsy+bNXuzSU0MIchPy6hRo9ybJLm5
      uTz00EM88MADbuNvtVrZtm0bnp6e2O12rFYrjzzyCJmZmUycOJHf/OY3+Pj40Ldva+0Dm82G
      0+nkkUce4fTp0601OwuO0CxqkCSYO3cujz/+OIGBgQQEyOUib3REUeLdb9PJL6/nqfnDiQzy
      6+kuycgAPeAAoHUWMHVIPDuPFVBe23hNr21utvKfzcex2BzYHC48PT2Ji4tzv96vXz+WL1/O
      iy++iMPRWntz6dKl3HnnnQDutOo33niD8PDWesFnz54lIiICrbZ1KUmtVmM2m3njjTeIiori
      888/Z8ioiZTXNtFsbVVG3b59OxMmTJCn3Dc4kiSxcvcZdh0r5J7J/a+4xrSMTHfQI9ZHEARm
      j05GIQisvIazAFGUWLU7E6vdiVqlYEifsPOO6devH48++ij+/v40Nzdjt9vRaDRs3bqV9PR0
      0tLSiImJ4YUXXqCoqMhd+elcKeCioiKSkpJ44YUXyM3NRalUIjUUU1t6ll17DiBJEnv27GH0
      6NHX7N5leoZDWWV8uuUEYwdEM2dsSk93R0amHT2m+xrg58nkwXFsTs9l1ujkLtfg+TGiKPGf
      Lcf5Ji2TWaOS+PmEfnjrPKiqqmLVqlVYLBY2bdqE0+kkOzubqKgoysrKqKio4IEHHgAgISGB
      cePGsXz5ct566y0mTpyI0+lk0KBBeHl5AfD222/z4IMPolareeutt5gyZQojRoygytTM9tNm
      8A6hrq6O6dOny6P/G5ziKjP/u+I7YkL1PHHHEBSK3hXxIyPTrXLQl6La1MxvFm5gWN9wfvfz
      EV3W7o9pM/5f7zrDlMFxPDZ78GVFYOTm5hIZGXmehvbFOHPmDH369DkvvE+SJB74+7cM7hPG
      b+cM7fQ9yFxfNFps/PH9rVhsDl779RQC9V493SUZmfPo0SFogJ8n04YlsO9EsVsQq6uRpNZl
      n84af4D4+PhOGX+AlJSUC8Z2C4JAbKie/LL6y5Z1lbk+cbpE/vfL76g2WfjD3aNk4y/Ta+lR
      ByAIAj8bnYyHWsnXu053efttxv+TzRlM7qTx7w5iQw2UVDdgd15eDViZ6w9Jkli2+TiHs8p5
      5PZU+sZ0vcCgjExX0eOL0AYfHdOGJbC3i2cBkiSxak8mSzdlMCk1jl/3sPEHiA83YHO4KKu5
      tpFPMteOnccKWLU7kxkjEpkyJO7SJ/RCXC4XTqfzup+pZmZmkpGR4f7b5XK576ltSftKcTgc
      l3W+xWKhqqoKSZKw2ztfG728vPyKzmujsLCw3d8/7nOPOwCAmSOT8FArWbHjVJe05zb+GzOY
      lBrLr3/W88YfIDr4+yLxZbI09I1IdnEt7648xM3xQfzytoG9Tubhcnn22Wd55513eOWVV1i1
      alW3XMNms7Fr165uaRtajf/69evx9PxBbmbhwoXux2fPnmXt2rVX3P6GDRswm82YzWYOHDjQ
      4XGlpaXs3bsXSZL44osvOn2dzZs3U19/5UrCK1asaPd323vgdDpZuHBhz0UBnUvbLGDV7kzO
      ltaREG684rZajX8WSzdmMLxvRI8v+5xLmL8POg81eeX1TKJ79Ydkri11DS3849M9GH11PHPX
      9S3trNfrefLJJ5EkiZdffpnbbruN7Oxs0tPTGTp0KP369ePUqVOLYCq1AAAgAElEQVQEBweT
      np7OrbfeyunTpzl+/DiDBw8mISGB7du3U1ZWxm233YbRaOTw4cNUVFTQ0NDAnDlz2LNnD2vX
      rqW+vp6xY8dSXV1Neno6RqORqVOnolKpOHXqFEeOHMHf359JkyYhCAJr167F4XAwa9Yst26R
      KIps3ryZiooKpk+fjpeXF99++y0ajYbKykoSExOBVqfThsvlwuFwIEkShw4d4vjx44wcOZKU
      lBQqKirYunUrRqORKVOmUFRURGFhIYWFhUyYMIGYmBiSkpLQ6XSsWbOGw4cPU1lZyeTJk8nK
      yuLkyZNEREQwbtw49/UUCgW33HILkiSxfft2GhtbVwHGjh2LKIps2LCBkJAQ932ePn2aI0eO
      kJmZybRp09ztnDp1iqNHjxIUFMSkSZOoqamhpKSEM2fOEB4ezvjx4xFFkbS0NEpLSzGZ2g82
      22YTaWlpJCYm9o4ZAMCsUcl46Tz4aufV7QWs+y6HpRuPMSwlnKd/PrxXldRTKhVEBfvKG8E3
      GHaHi1c/24PF5uDZX4zG9waQdpYkCZPJhN1up7q6mk2bNjFnzhzWrFlDfX09K1eu5P333ycq
      KorMzEy2bt3KhAkTEEWRLVu2YLfbmTJlCh988AEOh4NPPvmExMREAgIC2L17N4mJiYSEhJCa
      moq3tzdWq5UpU6YgiiJbt27lzJkzbNiwgWnTpnHy5EksFguffPIJCQkJDBgwgH//+9/uvq5a
      tQpBELj11ltZvHgxarWauLg4kpKSSEpKch9nt9tZs2YNq1evJi0tDWidKRw4cIA5c+bw1Vdf
      UV1dzYcffsikSZMIDw/HarVy8OBBWlpamD59OkuWLMHhcLBr1y6sVitJSUmEh4czcOBAPDw8
      cLlcTJ8+ncLCQo4dO9buPd24cSMAN910E/369SMtLQ2lUsmSJUuYMmUKFouF3bt3k5WVxcaN
      G5k2bdp5MjF2u52pU6fS0NDAnj17OHv2LLt27WLixIkcOHCAxsZGVqxYgcVi4dZbb+0wiOX0
      6dOMHDmyd8wAAPTeWm4fkcgX20+RW1pH/BXMArYeyuOjdUcZmhLO7+4cgUbda27PTVyYkd3H
      C3GJEirl9blEIPMDkiTx/upDZBbV8qd7RxETou/pLl015eXlvPHGG+h0On75y1+SnZ2NxWLh
      22+/pbm5maKiIhQKBU888QR+fn4sW7aMefPmERoaSmhoKGvXrkWv11NTU0N1dTU2m43ExET6
      9OmDQqEgMzOTwMBAfH19iYqKAqC2tpa9e/disVgICWnNlbnzzjsJDAzEaGy1BTk5OW6DVlxc
      jCRJCIJAXl4eTz31FCqVipiYGJqamvD398fX17edAVUoFPTp0wcArVZLY2MjR48eZdasWRgM
      BiZPnszp06cZOHAgH3/8sdtQC4LAgAEDCAkJoU+fPtTW1gKtQSxBQUHo9XoiIyORJImysjLS
      09OpqqoiLCysnZRz2zmBgYF8+eWXPPbYYwiCQFlZGZs3b6alpYWKigpKSkr4+c9/3u7eofW7
      VllZyf79+2lsbEQQBEJCQhg+fDhhYWEEBQXhdDopLi7mmWeeQRCEdktg56JQKBBFsfc4AIDb
      hieydn8OX+48zZ/u7VyW7NbDeby7Kp3BfcL4715q/KFVGnr9dzlUm5p7TAhPputYsy+bbYfz
      uWvSTQzv231Fha4loaGh/P73v3f/bTKZSEpKYubMmTidTjw8PNi+fbu7Vm1QUBCFhYVEREQg
      iiIGg4ExY8YQERHB7bffjkZz/oxIqVS6pVZcLhf79+/n2WefJT8/n++++46QkBBOnDhBWFiY
      2+AaDAZuv/12tFptuwInGo0Gk8lEQEAA1dXV7qTMH6NSqUhMTEQQBERR5NSpU/j7+1NSUkJU
      VBQlJSWkpKQwdOhQpk6dyurVq9ut74uiSHFxMXq9vl2bbcsqjY2N5Obm8tRTT3HgwAEaGhou
      2I8tW7YQGxtLUlISVquV0NBQ5s2bB7RuLm/bto26ujoiIyPbVfNqbm7m1KlTPP3002RmZnLm
      zIWrK4qiiNVqRavVdlgNbODAgaxfv753OQAfT417FpBZWEOf6MsTStt2OI/3VqUzOLl3G3/4
      oTZAfrlJdgDXOUdzyvl4wzFG9ovgzgn9rttN3x8TGtpesvymm25i//79LFmyBJfLxYIFCwgK
      CnLf7/jx43n//fc5ePAgCQkJzJ49mw8//BCdToenpycLFiwgMLA1HFaj0aDX69FoNCiVShYu
      XMjdd9+Nj48PixYtwuVykZKSwtixY/nss89YtGgRFRUVAMyZM4f33nsPT09PIiMj3UZz/vz5
      vP/++2i1Wvr27YtGo8HX1/e80e+596XVatHr9YwZM4aFCxeSnp6OSqVi7ty5LFu2DJPJREND
      A+PHj6ewsJCPP/4YtVrNyJEj0Wq1BAQEoFQqMRgMVFdXs3jxYu677z6sVitvvfUWNpuNcePG
      ue8XIDg4GLvdzpYtW4iKimLx4sXMnj2boUOHsnjxYpRKJWPHjmXy5MksXLiQrVu3Ultb6y4J
      2Vbfd9GiRTidTgYOHIi3t7f7c/D390elUjFjxgxeffVVfHx8zlMbCA4OBmDYsGHk5eX1bCbw
      hWi02Hj8f9eTEG7khQVjL/mj2vb9yL9/XDDP3ju6Wyt7dQU2u5Nf/G0ls0cn84upN/d0d2Su
      kPLaRp55dwv+fp7841eT0GnUlz7pOqbt969QKC74m/zx65c6vu0cl8vltilOpxOVSoUgCBQX
      F7tH2//5z3946aWXUKvVHdohURTdz3fWEUuS1O7abf1SKBQoFAo+//xzRo4cSURExAXlW87t
      U1s/2pSEL5e28My29tv68ON2zn3PLnafbSP/S9nrXrMJ3IaPp4Y7xvThWE4FmUU1Fz22zfj3
      iQrgmbtG9nrjD6DxUBEW4EN+uVwk/nrFYnXwyrI9CAqBP/9i9A1v/OH7WrQXMTo/fv1Sx7cd
      02Z0BUFArVa7jw8KCkIURQoLC3nqqafco+C2dn+MQqFwt3Ul93butdv61WaMBw8ejNFo7FC7
      69w+tfWjs7Q5m3PbvFA7575nF0OpVF7WYL3XOQCAaUMT0Pto+XLH6Q6jZQ6cLuH9bw/RJyqA
      P/9iDF66zkk29CRxYXoKKky4riIRRebaI0kSx3MrefWzvZTWNPDMXSMJNnr3dLduSDQaDaNH
      j2b69Ok9XjApISHBvd9xo9ErHYCnVs3sUckc7WAWcOB0Ca9/sZ/ESP/rzvgDxIUaqDG30NBs
      u/TBMr2G47mVvPDRDo6drWDO2BT6x8mV3GSub3qlAwCYMiQevY+Wz7acQDxnFnDwTGmr8Y8w
      8tx1aPwB4sIMABRUyBnB1wt2h4t1+3No+yomRBhvmE1fmZ8uvdYBeH0/CziRX8WJ3Eqg1fi/
      9vk+EsOvX+MPEBnkh1IhkFsq7wNcDzQ02/ifpbs4mFnK7SMS+cPdIxmSfH4xIRmZ641evWs6
      bVgC67/LYcWOU7TYnLyxYj8RAT784Z5R163xB/D10hCo95Q3gq8DymoaeXnZbirrm/jvn49g
      9M1R8shf5oah184AALQeKm4bnsjJ/Gpe/Wwv4QE+vPDAOPTe2p7u2lUTF2ogv9yEKMqSEL2V
      M4XV/PmDbTRYbLz04Ph2xj83N9edoJSTk8MXX3xBTc0P+1WSJJGRkYHNZnNrs6xYsQKTyYTT
      6WTVqlXtEnkkSeLMmTOsWLGCuro6HA4HK1euJCsry3295cuXd5j8IyNzJfRqBwC4tfNFSeLu
      Sf0x+Oh6uEddQ2yYgfK6Jqx2Z093ReYC7DlRxIsf7USnUfGPX02iX+wPiU+HDh3ivffeIzs7
      G6fTyf79+xk6dCjvv/+++/zNmzezePFizGYzTqcTpVLJsGHDePfdd/n444+JiYlhxYoVblEw
      q9XK0aNHSU1N5YMPPuDf//43cXFxLF++nKamJmpra5kwYQLLli1zZ9DKyFwtvXoJCGB0/yiO
      ZJfj5629oaIuYkMNiKJEQYVJLhrSi5AkiW+/V5NNjvLn2XtH4/ejGeegQYNwuVzuhJ/777+f
      1atXExv7g8Lr1KlT3TMEDw8PVCoV//rXvxg3bhwZGRnccsstmM1msrOzGTRoEDqdjrvvvpuv
      v/6ahIQEioqKGDBgANXV1eTl5RETE8Onn36K0Wi8ojjzzlJrbub5JVculyzT9Rh8POmfmsiB
      vPIua7PXO4CwAB9eeXQSAtxQa68xIX4oBIH88nrZAfQSnC6R/1t7hA0HzjJ2QDRP3DEE7QWS
      C3/8PVy0aBHJycnMnDmzw2P69++PWq1m+/bt7udaWlrcYl+SJPHmm2+SmprK+PHjeeONN4DW
      mYFarcZoNDJnzhw++ugjmpqazhMZ62psdie7j+V26zVkOkew0QddRCB7z5Z1WZu93gEAKG4g
      w99GgJ8nvl4auThML0GSJBZ9fYC0Y4XMHZfCvVP6o+wg8/Pw4cNs3LgRURTR6XRuYbQNGzbg
      7+9PaGgoeXl57NmzB5PJxJgxY0hLS8NgMKBSqUhJSWHx4sUUFxfzyiuvsGHDBpKSkjhw4AAG
      gwGHw0FKSgpvv/02JSUl3HrrrXz88cf4+vpis9luqIGQTM9yTRyAKIp8/vnnFBcX88c//pG8
      vDwWLlzI7373O2JiYoBWCdp///vfOJ1Opk6dSl1dHadOnaKpqYk//vGPfPrppzQ3NzNy5EiG
      Dh0KtG6+ffnllxgMBu666y4WL16MVqtl5MiRDBo0iCVLlhAYGMi99957LW6zUwiCQEyInvzy
      eresrUzPYHe6eOebg+w9UcyvfzaYqUPiL/p59O/fn5SUFADUajWfffYZ0JrO/9lnnzF48GCC
      g4Pd31ONRkNMTAwWi4XAwEAEQSA1NRVfX18UCgVlZWVuI9/WjkajoaamBl9fX9RqNffffz81
      NTXMnj37guqaMjJXwjVzACNGjKCqqqr1oioVEydObFehR6/X84c//IHS0lK2bNnCXXfdxfTp
      03nvvfc4deoUHh4ezJo1q11a+Nq1a/nlL3+Jr68vpaWlREdHM3HiRNatW8eAAQO4/fbb3YUf
      eiNxYQbW7svG4RLx6EWFa35KNDRbeW35Pk7kV/H0/OGMHRB9SWfs4eHRrtBGm06NJEk88MAD
      KBSK83RYfHx82i3btKljSpLEgw8+iEKhOE+9su2YtmuGhcm5BzJdyzVxACqVqt0GWVRUFKdO
      ta//q9PpSEtLY/fu3Tz99NOo1Wreeust4uPjkSSJEydOIEkSLS0t/PrXvwYgPz+fbdu2kZGR
      wSOPPMKJEyc4e/YsEydOxMfHp9dX3YoLM2B3uiipanBnB8tcO8prG3ll2W4q6pov2/hfjDZR
      s+4+pycQAG9PDaIo0Ww9v0h5kMGbGlNzu6z9jlAqBJQKhTvCT+bK8VAp0aiUSJJEk63z0WE9
      HgYqSRJNTU0UFBTw3Xff8eyzz+Lp6cm//vUvJk6cyMyZM4mKiiIhIYH77ruPxsZGRFGkubmZ
      mJgYZs6cyYgRI9i8eTM/+9nPeP7559m/f39P39ZlEReqRxBkSYieILOohj8t2YapycqLD467
      auN/o+PjpeXXc8cweWgfHpo14rzXRw+Ix0N9ebNYHy8toQF+Xd3FnyRzUhMYkxTOwOgri5C8
      JjOAxsZGli9fjt1uZ9WqVfj5+ZGVlUVubi5ms5nvvvuOyZMno1KpePfdd93ro2lpaaSlpXHv
      vfcSERHBokWLmDVrFunp6ZSVlXHffffx0UcfYTQaeeihh1i2bBmHDh3irrvuoqCggI0bN9LU
      1MSePXsYPbpzFcauBSFGb7RqFbmldUxM7X1F4ktLS1m5ciVOpxO73c4f/vAHJEnik08+oaam
      hpCQEObMmcNrr72Gy+XiscceIzQ0lF27drFnzx6ee+45oLWS0euvv44oijzxxBPs3LmTqqoq
      Tp8+zUsvvYSfnx+PP/44f/3rX88rRtId7DtZzFtfHcDoq+P/3TeG8EDfbr/m9Y4gQHmNmeyi
      Kgy+MQxIDKfO3IxarUSn+WE5bPbY/njpNHjrNKzalcHkoX0I0Huzbs9JbhvVj5IqEwdOFRCg
      9yIiSE9UiAG7w8XXO45d5OoyHeEURbaeKsTuEkkKNjA2OYKCmgYcLhchvl6YWmwU1jYwLjkC
      tVLB6mO53BIZhFatIruy7to4AB8fHx599NF2z02YMAGAkpISHn74YTw9Penbt6/79ZEjR7Y7
      /vbbb3c/zs3NZfDgwSiVSp566in384888ki7cx577LEuu4fuQKlUEBuqJ7/c1Cs3gsPDw/nN
      b37D1q1b3WveDocDk8nE7373O9544w127NjBjBkziIqKYvXq1cyfP5/Dhw+3W8/etWsXd9xx
      B4GBgWzYsIEFCxbgcDh49dVXCQgI4JNPPqFPnz7dnuDkjvHflEFypD9/unf0DZFVfq0I0HsT
      E2bE4XCi9VCjVilRq1TtKvD5eGr5z8Z07rl1MKIo4XC40GnUBPv7UF7TwMqdGUSFGNB6qHG6
      RFpsDhIi5DDoK0WrVjFncBJ1TS2UmZrIqzKxPbOYUYlhWOwO4gL9qDA3s/1MMXani3C9N1q1
      khXpWYxPjuz5JaCIiIgOCxd3RHx8fLdXJrtWxIYaKKgwXdbaaU/gcrnYt2+fewalVqtRqVS8
      8847HD9+nIqKCoKCgvD29sZms/HRRx9x7733uisjAZjNZgICAvDz86OlpQVozZSdMmUKZ8+e
      RRRFoqKiOqxf2hU4XSIfrjnCvzccY9RNkbx4g0iKXEvqGizkFFUTZPTBJYpEBhtIiQlud4yv
      l5bRA+IJD/Rj1IA4TuWXU99gAQTKatovdQ7pG8XhzGK5LsZVYHU4+eZQNptPFQJQZm5GAPqH
      B3KipOYcu9L6v1OU8NNpCNN74XC5ro88gBuZ2DA9675zUFXfO4vE79u3j+HDh6NQKGhpaUGt
      VvOrX/0KURSpr6/npptu4sSJE8TFxaHX63G5XKxdu5b09HTy8/MJCgpyb/qHhIQQFBSE0+nk
      yJEjPPfcc2RkZOByudi5cyeNjY089NBDXX4PLTYHb3yxn/TMMuaMTeEXUzuO8Ze5MM0tds4U
      VGDw9eSjNftpbrEz5pZ4cktqKCivo6TKhN3h4pudGXhpPahvbGHzgUxG9I9l19GzVNY1tNkg
      quoaaWiyUl5rJirYwFfb5eWfK2V3dikOV6sDLahpQJJa3+btZ4oI8NGx5lgejVYbLlFClCTq
      LVayK+roHxHI8ZJq2QH0NHGhrdE/eWX1vdIBOBwOJk2aBLRmvD7yyCPs2bOH3Nxc5s2bR1JS
      EsuWLSMvL4+HH34YrbZ1VJ2cnIxCoeDTTz/lkUceYenSpWRnZ/Pwww9TV1fHrFmzUCgUDBw4
      kIEDB3Ly5EkiIiK6tO/Vpma+2H6KzKIaymubeGz2YKYNvXiMv8yFcbpEDn4/ymxjx+Ec9+NG
      ixWA6BADkcFG1u89RYvNwfZD2ee1ZbU7sdqdmJpayCut7d6O3+BUNljcj8+NAsquvLDSsNXR
      Osvek1MK0PuKwv/UsDmc3Ps/3/CzMX16dZF4SZLIzc0lISHhss8pLi4mMDDQ7RS6C6dLpMZs
      obKuibKaRsrrmiivaSSv3ESNufUH8vhlJHjJ/EBZtZlbn3ynp7shcw7BRh/G3zqE1V0o0SHP
      AHoYjVpFRJAveb28NoAgCJ0y/gCRkZFddv0LGvnaRspqmqgyNeNwutzVurQeKoINXoQYvalv
      bMHgo2NUf1nHX0bmx8gOoBcQE6In42wFoiihUPx0jdS6/TkczCxlzM1ROJwuKmqbKKttpLym
      icoOjHx4oA+D+4QRavQmPMCHEH9vDD46lN+/j/WNVry0ajQXEHWTkfmpI/8qegHx4UZ2HC2g
      wWL7yUSmNLXYKa4yU1BhprDCREGFiaziWkRR4lhOBQA6jYpggzcRQb4MSQkn1N+bEKM3oecY
      +UuN6o2+N0b9CBmZ7kB2AL2A2FA90LoRnJrU/YlQ1xKXKFJZ10xhpZmC8noKKkwUVJipMjW7
      q6H5eHoQFeRHfFhrlbR541KYOjQePy/tZRn5S1FZWcmWLVsYNGiQW8TNbrezefNmXC4XI0eO
      xOVysX//fmbOnInL5WLTpk1otVqmTJnS7vr79++nf//+CILAypUrSU1NJSUlhR07dlBWVsZt
      t93mlniWkentyA6gFxAd/ENtgOvJAdgcTlQKBUpla0hlU4udokpzq5Evbx3VF1WZsdqdSFKr
      BkyYvw8J4UYmD44lOlhPbKgeo68OhSAgAS1WB55adZeu17/33nv85je/YdGiRfz5z39Gq9WS
      m5uLyWRi7Nix+Pj48PLLLzN79myWLl1KQkICiYmJpKenc+zYMQYOHAjA2bNnWbhwIX/7299Y
      vXo199xzD0uWLOHJJ5/E09OTKVOm8Pbbb/PCCy90Wd9lZLoT2QH0Anw8NQQZvMgt690bweeS
      VVzDX5emofVQER2sp6jKTI3J4k488fPSEBXsx6TUWGJC9MSGGogI8sVDreywvoMAeOk8Lvja
      1RAZGcnbb78N4M5orq6uJjs7G5vNxj333ENAQACDBw8mLS2NcePGUVdXx+nTp5k1axbwg6T5
      PffcA7TOIJxOJzExMeTktIZDvvXWW0ycOLHL+y8j013IDqCXEBdmoKCXSkL8mBabgy+2naLR
      YqfRYkejVpIc6c+tQ+KJDdUTE6JH76NF0UuULsvLy/nTn/7EO++8Q3NzMz4+PowZM4ZRo0aR
      kZHBmjVrcDgcSJKEy+WiuLiYt99+m+eeew5f31adoE2bNtHY2MjWrVspKSnh8ccfZ/369RQU
      FDBixAhiY2Px8fFh9erVTJ48uYfvWEbm8pAdQC8hLlTP/lPFWO1OdBp1T3enQ84UVrPoqwNU
      1DXTLyaQ8EAfHrptINpe3GdBEFixYgUVFRW0tLSwd+9efH19OXbsGJWVlcybN4/CwkL+8Y9/
      MHz4cD788ENCQkL47LPPmDFjBvv27WP+/PlMnTqVdevW0adPH7Kysty5MX5+frz77rsYDIZu
      z3mQkelK5ESwXsKhzDL++kkarzw6kX4xVybt2p3YnS4+33aSVbszCdR78ds5Q+kX2yri1RtG
      +RdDFEVMJhO+vr7s3LmTpKQkIiMjaW5uRqlUotVqkSQJi8WCl5dXOx2j0tJSzp496x7Vi6KI
      IAiIokhNTY27wpfNZsNisWAwGHr9+3E5yIlgvQ85EewGJjnKH0GA7OK6XuUARFFiy6E8Vu0+
      Q4PFzqMzBzHm5ij3Wr3ZbMbhcCAIAnq93j1AEEWRlpYWvLy8gNY1c5vNho+PDyaTCafTiZeX
      Fzpda5imJEmUlpbi6emJ0WikpaWFmpoatzxEeXk5vr6+eHt7d/oeFAqFOzKnTdZCEIR2bZ37
      t1KpdN9HdHQ00dHR7dpqOyY4+AchNK1WK4/+Za47ZAfQS/Dx1BBs8CK7uPdoo9SYLby36hCH
      ssoYmBjC/zw0hEC9V7tj0tPTqa6uZv369bz++usEBwdTV1fnfvzkk08iSRILFy5EqVTyX//1
      X7z44osMHz6cAQMGuCXAly9fjiRJ6PV6Bg0axCeffEJQUBCSJKFWt0YFHT16lJdeesntVK6E
      K6nYJSNzoyI7gF5EXJiRwoqe3wiWJIk9x4tYsvowDpfIr2YNYtrQhAtmKU+ePJmmpiaKi4vd
      9Zr1ej3PPvssn3/+OdAaO9+nTx9KS0upq6tDpVIRHR1NcnKyu52MjAwGDRpEbGwswcHBPPPM
      M+zbt4+CggLuuecerFYrmZmZskGWkelCZE3cXkRsqJ6ymkZa7M4e60NDs403V+zn9S/2Exbg
      w5u/mcptwxMvKlHx9ddfM2fOHLdxVigU7qWSlpYW/u///g+1Wk1mZiYeHh789re/xWKxsGTJ
      EgB39M2YMWNYsWIFTU1NfPTRRxQUFHD33XdTWlrKX/7yFx577LFO146QkZHpGNkB9CLiQg1I
      QEH5ta8RLEkSh7LKeHLRRvadLOG+qTfzyqOTCA+4eLnElpYWSktLiY+Px+VycezYMZqbm8nN
      zaWqqoq6ujqeffZZIiMjMRqNVFdXk5eXh7e3N4IgkJmZicViISAggPr6elQqFbm5uRQUFHDL
      LbdQUVHBokWLmDdvnnvvQEZGpmuQHUAvIi7MgCBwzZVBW2wO3v/2EH9bmoaPpwev/XoKc8el
      oFJe+uvhdDp5+OGHEQSB48ePU1RUhNVqpaamhhEjRtDY2EhiYiJ9+/bloYceIiEhAS8vLxob
      G3n44YdZuXIlarWap556itzcXO655x6io6OZMGEClZWVNDQ0cOedd9LY2EhlZWW3Vg2Tkfmp
      IYeB9iIkSWLBK6sY0iec384dek2uebqgmre+OkCVqZmfjU7m7kn98VBf2WdstVrRaDSXvU4v
      SRJWq9UdCSTTe5DDQHsfchjoDY4gCMSFGcgrr+/2jWC7ozWuf+XuTIIMnrz88ERSogOu6pqd
      DYMUBEE2/jIyPYjsAHoZsaEGVu/NwukSUau6Z7aVV1bPwi+/o6jSzK1D43lg+i29OvtYRkam
      e5AdQC8jIdyA0yVSUt1A7Pf1grsCm8NJTnEdmUU1LN92El9PD55fMJbUpFA5tFJG5ieK7AB6
      GdEhP9QG6CoHYLU7efGjnWQW1QAw5uYoHp01CF9PTZe0LyMjc30iO4BeRliADzoPFXll9Uwa
      dOXtWKwODmaWsvdEMcdzK7DaW6Nn4sIM/PedI+RRv4yMjOwAehsKQSA2VE9uWec3ghstNg6c
      LmXfyWKO51XicIoE+OmYNCiOPlEB5JXVM35gjGz8ZWRkANkB9EpiwwzsOFpwyeMkScLcbGP/
      qWL2nyrhZF4VLlEi2OjFjOGJjOgXSVKUv7sAy9gB0ZdoUUZG5qeE7AB6IbGhetbtd1Be20RY
      gE+71yRJorahhX0nizlwupTTBdWIkkREoC8/G9OHkTdFki5ysWgAACAASURBVBB+8Zq0ZrMZ
      nU7nro4lSRLFxcUYjUa8vb2x2WwUFBQQHx+PUqmksLCQgIAAt1qm1WqlsbERAE9PTzw9PSkq
      KiI4OBitVovD4SAvL4/Y2Fj3NWRkZHofsgPohcR9v/mbX15PWIAPkiRRVd/M3hPFfHemhOyi
      WiRaHcX8CX0ZdVOke/P4UjQ3N/PQQw/xpz/9icGDBwOwdOlSdDodBw4c4IUXXuC1115j1KhR
      SJLEli1bCAsL4+DBgzz77LPo9XrKy8s5cOAApaWl6HQ6DAYDDoeDM2fO8OKLL/L3v/+dYcOG
      YbVaGTBgQHe9TTIyMleJ7AB6IaH+PgjArmOFlNY0cuB0KWdL6wBIjDBy75T+jOwfeUmdnh8j
      SRL/+te/+MUvftHu+QceeIDm5mYyMjI4dOgQQUFBmM1mIiMj0ev1SJKEt7c3KlXr1yU2NpaY
      mBjefPNN7r33Xj788EN+//vf89VXX7Fjxw7UajX19fWMGDGiS94PGRmZ7kF2AL2Q9MxSJODA
      mVIOZpaSHOnPA9NvYdRNkQQZrlwL/9ixYxQWFuJ0OqmurnbPAPLz83n//ff5/e9/z+HDh4mN
      jaVfv34sWbIET09PoqOjKSgowGKxuJeBKisr0el0+Pn5uZU/VSoVTU1NhIWFMW7cON59912e
      e+65q34/ZGRkugdZDK4XEhHki1IhoFQI/P3RSbz62BTuGNPnqow/QEJCAk888QQRERGEhYVx
      9uxZ6urqWLRoEfPnz6eiooL+/fuTkZFBU1MTnp6eVFZWEhgYiCiKNDY2cvjwYQA+//xz7rzz
      TgD38tGhQ4f4/+3dd3wc9Z34/9fMdvXerV4sWVaXuzFgm04COBiOJMAdcF84Eu7yveTK9y7f
      y+8u980lIeTguIBDfPSEJMSmGFOMwXKTqyRbzeqyem+72r47vz8UbSxwkbVrW7Y+z8fDDyQx
      85nPzOx+3jOfesMNN9DW1obRaBTTPAjCPCcmg5unRiYsKCiEB/l+/vvx8XFkWebFF1/k29/+
      NvX19RiNRiRJYtmyZXR3d3Pq1Ck2btyIw+GgrKyMtLQ0bDYbLS0t3HXXXbS3t5OcnAxMzQi6
      e/ducnNziY+Pp6uri6qqKtavXy+CwFVKTAY3/1yKyeBEAFigFEXBZrNd1ARuNpsNrVYrxhEs
      ACIAzD+XIgCIKqBZUhSFgYEB+vr6ODNmjoyM0NHRgaIoKIpCa2srZrMZAJfLRUNDAyaTybO9
      zWajv7+fgYEBTzoTExNYrVbcbjfNzc2Mjo4yy7g8Z5IkXfTsnRcz1bMgCPOfaASepb1799LS
      0kJPTw9f+cpXyMvLo6uri1deeYWoqCgSExOZmJjAZrNRW1vLv/3bv/HMM8+wdOlShoeHWbVq
      FTC1+LlKpcJgMHDPPffgcDj41re+xYMPPoharWZiYoLy8nK+9a1vER8ff4XPWhCEa5l4A5il
      devW8fDDDxMQEOCp125ra2Pt2rU8+uijnDhxgo6ODr7xjW9QWlpKfX09AwMDDA8Ps2jRIk86
      vb29+Pv7U1paiiRJvPzyy3z9618HYO3atcTExKDVaj29bQRBEKZJ0tR0Mb76J94AZslsNvPD
      H/6QzZs3k5GRAcDKlSvZunUrNTU1jI+PExERAYBGo2FycpLQ0FBuueUWnn32Wf71X/8VWZb5
      q7/6K0ZGRnjhhRfYtGkTJ0+eRFEUjEYj119/PcPDw6hUKiYnJwkODr6SpywIwjxz94osli9J
      8Fl6IgDM0quvvkppaenU/Dvj4zQ0NJCfn8+qVatoamoiJSWF7u5uDh48yOHDh/n+97/Pe++9
      x+joKDqdju7ublQqFRUVFaSkpKBSqVi0aBHf/e53aWhoYGRkhL1795KamkpnZye9vb3ExcVd
      6dMWBGEeaRge5XjfkM/SE72AZqmtrY3u7m4AIiIi2LNnD4899hh79uwhKCiIkpIS3G43n332
      GdnZ2SQkJDA6OsqBAwdYvXo1r7/+Og899BCKonD48GEWL15MUtLU5GyTk5M4HA5cLheHDx8m
      ISGBpUuXigZX4YoRvYDmn+iwQJ789u0iAFxpDocDWZYv6lpYrdaL7nUjCFeKCADzz6UIAKIK
      aA40motfP1cU/oIgzDciAAiCIFylFEWB6UocSbroamMRAARBEK5SJ3a+j9NmRVaryd14K9o/
      dlF3u5z01NeRkJsH4BlY+sUAcVEBwOl04na7fZFvQRDmAbVaLTobXMWcDjv5t92JSqPFajJy
      bPvvMQQGEp6YTOWOd7CaTMQvyaVqx7tIkkTRVzdx8qMduF0udP7+FxcAVCqVZ054n2Te6fRp
      epeiodrtdnumO/YFp9OJSqXy2ZdOURRcLteCuy++zqPb7UZRFJ/l8Wq5L77Oo3B5OW1Wqnbu
      QKPXEZuVjdNuJ7GgmODoaIY62klfsYrqTz5k6c23YbeYaTt2GMXtZtnX7ufoH357cQHA1/PT
      XIr0roY8+tp8z6O4LwsjPeHyU+v05N18OyqNBqfdTund93Js++8p+so9OO123G43aq0Oq9GI
      3WxGo9cjSX98oJXki5sKYjZPR0ajcdbVRLNJz+l0YjKZZvVhlSRpVmlOP/m4XK4LpuvLp3+Y
      3TlPDzab7Rd0tmlarVbPeANv07sU98VisczIq7d5nJycvGA602RZvuC9drlcjI6Ozio9mF0e
      h4eHfZqe3W73rNd8IbO9L8L8FZ2aTvUnOznx4ftYxkepL9tNaHwChpAQgiIiaT1STsaqNXTV
      nGTodBvJhSXEL8kFIGHJ0tm/AUizbGG2Wq3U1tYiyzJpaWmEhYWdc7/ZFq7Nzc1YrVZCQ0NJ
      T08/54d2ttUq5eXlnq6cSUlJREVFnXPbC6VZVVU1o5CJjIwkLS3tnNvP9pw7OjowmUwEBQWR
      mZl5zq6ns70vtbW1jIyMkJSUxPDwMEVFRV7lUZIkn94Xt9tNTU0NRUVFuN1uqqurKS0t9SqP
      LpeLuro6z8pn58vLbPIoyzInTpzguuuu82x/vvRmk2Zvby9Op9PzGTzfPrM5Z0VROHnypGfy
      wQvlUbi6LcorYFFegef3oq/c4/l58bobPT8X3P4Vz8+xWdl//O9i3/cCCg8PZ2Jigp6eHpqa
      mtBoNBQXF885PZVKRWpqKnV1dQwMDNDf309hYSGBgYEXndb006pWq/UUgN5+CXJzc5Fl2fPW
      46svVVpaGrW1tQwPD3PkyBEyMzOJjIycc3qTk5NkZWVhNpux2Wxe5286wNfW1np9XwC6u7tp
      a2vz/J6dne11HlUqFSaTicOHD2MwGMjLy/M6TbVazcGDB9FqtRQWFs5pTMiZgoODqampITAw
      kNjY2BkTB86FLMs4nU7Ky8vR6XQUFBSIp3zhnHweAFpbW9Hr9axZswZJkhgbG/MqPZvNRlNT
      E0VFRWi1Wmw225x7IjkcDqqrq7FYLBw7dgxJkkhMTCQ6OnrO+evp6UGr1dLV1QVMTRMxvVKW
      N2pqasjLy0Ov1+NyuZicnPQqvaVLl3Ly5EncbjcFBQUX3uEC7HY7jY2NPrkvAIsWLcJgMBAS
      EkJVVZVP6qf9/PyIiIhAr9f7bGWy2NhYjEYjkZGRPmk8DQsLw8/Pj7S0NBwOh9fpqdVqoqOj
      cblcM9ZrFoSz8fmnY3BwkIiICM+TcEhIiFfp2e124E+jb3U63Zy/zFqtluLiYmJjYyktLaWg
      oGDWdcTnkpiYyNDQEHl5eZSUlPik8Iept5V9+/bxySefoCgKQUFBXqXX29uLJEmo1eqLqnc+
      m66uLiorK3E4HFRUVHDs2DHUarXXhWx7ezvt7e0kJibS2NjoVVoALS0tREdHYzabGRwcvGDb
      x4WYzWZMJhOSJGGxWC6qPeBcampqyMjIwGw209nZ6XV6g4ODqNVqnE4n4+PjnsWJBOFsfP4G
      EB0dzc6dOz0LjyckeDd1qV6vp6OjA6vVisFgID8/3+tX2qGhIVJTU3G5XAwNDXkmZZur0NBQ
      du7cSVZWFsHBwV7P4mm32/Hz80Ov1+Pv7++TqaFHRkZYtmyZT6qoEhISiI+Pn/GU7ot09Xo9
      fX19xMbGeh3wYKo6sq6ujrGxMfz9/b3+3Oj1ekZHRzGbzajVaq8/NwCBgYGcOnUKs9nsk9lf
      p9MzGo3odDoWL17sdZrCtWvWk8HNltvtZnJyErfbjU6n83oOnOm1a202G7IsExAQ4HVhMzIy
      Qn19PSqVylOF4Q273e550vLmDWXa9NKSFouF/v5+Vq9e7fV1PHbsGA6HA5VK5ZO6ZrvdTlVV
      FQD9/f3cdtttXhewAwMDnp5FERERPlkPwWg00tfXR2pqqk/qwm02G+3t7SQlJflkfidFUejp
      6UGWZWJiYnwSSM1mM11dXaSkpMy5jUJMBjf/XBWTwVVVVdHT00NCQgJOp3NGD4y5MJlMHD9+
      HLPZjCRJ3HTTTV5/kZuamli5cqXP6ke7urro6+tDlmXCw8M9C8bMhdPpZHR0lKCgIIKCgoiO
      jvY6QAEUFhZ6qkB8URBqtVqWLVsGQF1dHRaLxetVzHQ6HTDVHbSjo4OlS5d6ld7AwACNjY3E
      xMRw8OBBT7vUXDmdTsrKykhPT+fAgQOsW7fO63aAyspK9Ho9DoeDsbExrxu/TSYTR44cISkp
      if3797Nu3TrRDiCck88DgMvlIicnh+DgYFpavF+93mazkZiYyNjYGBqNxicFjUaj4b333iMu
      Lo6kpCSvGoEBRkdHWbFiBbIsc/ToUa/SGh8fZ+fOnaSmphIdHY0sy4SFhXmVJky1AfT39+Ny
      uXA6nTO6Cc6F3W6nsrLS87ufn5+3WQSm3iDVarXXdddutxuTyURGRgbh4eEYjUavRr263W7s
      djvR0dEkJibicrkwGo2EhobOKb0zx6JkZmYCeN6o5srtdmOxWEhMTCQpKQmr1YrFYsHf39+r
      dIVrl88DQHZ2NgaDgerq6vP2h5+tsLAwDAYDer3eU5frrcLCQk+XQF88HYWEhHDo0CHPou41
      NTUsWbJkTk+b4eHhPPjgg3R2djI4OIjb7SYlJcXrPMbGxhITE4OiKBw/ftyrtEwmEx0dHQQG
      BiLLMnFxcT65jna7HavVOjVnyXnGKcxGZ2cno6OjDA4O0tXVhUaj8erNZ3h4mI6ODpxOJydO
      nMDlcpGamupVHmtra3G73VRVVSFJktcPIn19fZ5xBePj4wA+6/0kXJt8HgCGhobo6+vD5XIx
      MDBAeHi4V+k5nU6qq6uBP/Vl97YKo7Kyks7OTkJCQoiOjva6oSwtLY3k5GR6enoIDQ31qgoI
      ps7ZYrHgcrl8to7A9BuAoiheB2adTudpsHS73VRUVLBixQqv89rZ2YnD4fAEmLS0tDk3jE4P
      8Dtx4oRP5tCJjIwkIiKC2tpaJiYmMBgMXgU9SZLIz8+ns7OTnp4er/I2LS4ujsjISCoqKjxz
      TonpHoTz8XkASE5OJjk5GbfbPaOKYK60Wi0rVqwAprrM2e12r59q3G43GRkZpKamUlNT41Va
      vb29tLe3oygKZrOZG2+88cI7ncfQ0BDvvPMOmZmZBAcH+2Qenbq6Os8ToUqlmvNgrWkajWZG
      997pKhFvuVwuli1bxsTEBP39/fT09HjVM6azs5PFixd73RV5mtls9lSfNTU1MTg4eN5R5LPR
      29vL8uXLfZI/mOrgEB0d7bPuyMK1zecB4PTp0/T19aEoitd19TCzrtlisZCVleV1mikpKRgM
      BiorK0lPT/cqre7ubmRZZtGiRZ6fvREWFsYDDzww42/evvHk5OR4frZarVRUVHjdBnAmb6tC
      poWFhXHgwAGcTicFBQVeTz0eGRnJ3r17iYqKQq/Xk5+f71UjsF6vZ3h4mFOnTtHd3c2aNWu8
      yh9MPYwcPHjQU5WWmJjoVXrBwcGUl5fT19eHWq2msLBQjAQWzsnnASAuLs7TIOiLhkGHw0FK
      SorXT1rTprtDTvP2yXV6MfjTp09jtVppbm72KqjIsuyzBtWz0el0Xtc1XyoRERGehwatVut1
      1dzw8DBr166dc0PtF8myTElJCU6nk/j4eJ8UrCqViuXLl/tsChGj0UhBQYF4AxBmxecB4PDh
      w57XdpVK5XWjrVar5dixYwQEBKBWq9FoNF59WdRqNS6Xi+joaBYtWuSTL7Esy6SkpPiksfZS
      kyTJJ43zl4LNZmNyctIz/sHbuXuio6M5dOgQwcHB6HQ68vLyvPrs2O12GhoaKCgooLGxkbi4
      OK97aOn1eg4fPowsyz4ZnxEcHExFRQUDAwOoVCoxF5BwXj4PAAaDgaioKJ8tHjM9DUJDQwNq
      tZqcnByvPtAFBQUoisLAwAC7d+8mLS1t3haIC01wcDD+/v64XC7q6+u9Ti8gIMDTxdIXb1WN
      jY309PSgVqsJDAz0yZvF4sWLOXXqlM/aUTQaDUuXLsVsNou5gIQL8nkAiI2NpbW1FYCoqChi
      YmK8Sk+lUmG323G5XISEhHj9gR4ZGaG1tRVFUcjKyvL6iUvwnYGBAcbHx5EkyetBYDDVCOxy
      uZiYmGB4eJjQ0FCvHkqWLFnimbjt9OnTOBwOrwfpVVZWEhsby/j4OAMDA16/UYyOjjI0NITb
      7cZqtRIQECC6ggrndEkeDwYGBjAajbNemOJ8+vv7iYmJYdWqVdjtdq+nMt67dy82mw2Xy0Vv
      by8DAwNe51HwnqIoREVFIUkSQ0NDnl5L3pgeOzL9z9uHB6fTycjICIqiMDEx4VnAxhsajYaR
      kRG6u7t90g6g0WgwmUyMj4/T398vlnsUzsvnn47prntpaWnU1dV5lVZXVxenT59mbGyM/v5+
      RkZGWLJkiVdp3nXXXV7tL1waZWVl+Pv74+/vT0pKCrGxsV6nGRYWhkajYWxsjMjISK8LWK1W
      S1hYGAcPHiQsLMwnE9ZlZWUxMjJCZGSkT845ICCArKwsJiYmCA4OnnMAkCTw03m31oHgW4ZL
      cD98HgCCg4OJiori0KFDXteRJiQkkJCQgNlsxmKxkJub6/UCHML8lJiY6Bm1Gx8fj9vt9uqJ
      XVEUurq60Ov1JCYmUllZSX5+/pw/P4qi0NLSQm9vL4qi+KynlslkoqenB5VKRUBAgNdBZXR0
      lLGxMdLS0qipqUGv188pr/4BBr7+yK1e5UXwrUDtPA8A4+PjhISEYLfbKSoq8sk4gPHxcerq
      6pBlGZ1OR05Ojk8mRxPml9TUVFJTU3E6nbS1tTEwMOBV+5HD4aCxsdHTYBsSEuJVdUh/fz8W
      i8XT9//w4cOEhYV5PaguIiICt9tNW1sbp0+f9rrtIyAggBMnTmC32xkaGprz5HKTdie/qfR+
      Li/Bd6IC9Dy8yrtZBr7IpwHAaDR66kUnJyeRZdnrrnwOh4OgoCCsViuTk5NiaPs1Tq1Wez2V
      BkxV16xfv56WlhbGx8eJjo72qgrIYrF43mglSSIoKMizWJE3phuqly9f7pMeO1qtltLSUvr6
      +igpKRFdQIXz8mkAOHPxF19MOqYoCuHh4VgsFiYnJ0lPT/dMGSwIF9LZ2YksyxQWFnqmg55r
      IZucnMyRI0c86xb7+/v7ZJZWtVpNV1cXvb29JCcnEx8f71V6RqOR6upqJElicnKSxYsXi++M
      cE6XrIuAJElerwXQ2tpKZGQk/v7+xMXFzdsRrML8pNPpGBsbY2BgAJfL5emgMJcgIEmST+fs
      mdbR0cHq1atRFIVDhw55HQCm35inB9WJN2bhfOZ1HzGn04ndbsfhcGA2m3E4HKjVap8Nmxeu
      beHh4TgcDhwOB2lpaT6ZWM/XYmJi2L9/P4DXhT9MLU9qMpno6+sjJSXFZ7PJAkjAua6eLEmo
      ZQm7y7v5m4TzU8syOpXveu/P6wAQERFBc3MzMFUdNDk5SV5enqjXFGbF4XDQ2dmJVqtFp9Ox
      dOnSefXwYLVaiYyMJDIyEsDrzg2KonDy5EnPsppOp9MX2fS4LTuRPS09JAT70zA4c5xGVICe
      9Igg9rf1+/SYwkz+spYwle/mCpvXASA8PNzr9QSEhaurq4vc3Fza29s9g//m08Co3t5ejEYj
      iqLQ2NhIUlKSZ5nNuRgYGPDMeqooCuXl5cTHx/tsOogArZqShEhWJEXx0alONCqZpNBARi02
      6vpHkSWJjZnx7Grs5oa0WPa09J7zjUGYm2PdQ+xs6PJZemKiEOGalZaWRkNDA729vfj5+c27
      N8fk5GSCg4MxmUysW7fOq8IfprpM+/n5YTKZmJycRKVSzZj51hdq+kY40jHIid4RBkxWLA4n
      hfFTD2luRSFEryPSX0+Ev14U/lcBEQCEa5LRaMRsNlNUVERYWBh+fn7zqvoHYNeuXZw6dYqw
      sDCGh4e9npYkNjaW0dFRWltbaW1t9cyg60suRcFPq0YlTz3t72npZdT8p+6wZa29PLk6h6Od
      gz49rnBpzJ/3YUHwoaamJnJycqiuriY9PZ2WlhYSExPn1VvA6tWrZzyhe9tdMzAw0OtxN+dT
      2TPMmMWOzekiJyqEiu4hbkiPo7pvhAmrg9ZhIwMmCwMmK6dHTZcsH4LviAAgXJMCAwNpb29n
      dHSUgoICHA7HvHsD8HatjMut8Y8Nv582dXv+Vtk97PnZ7HCyKima3U3dovrnMlFJEnqNCrdb
      weI8/3TiGlnG8YVV9kQAEK5J6enpDAwMkJqaiiRJ5OTkiLnxL4ODp0UvoMvp7iVJtI+aCDFo
      +by1FxkJlSxhdbqQJdCpVFidLtQqmYQgf9pHjahkCY0sY3G6RAAQrk2SJM0YOOirheEFYT5x
      uRX8tWr2tfcRotdyf14qAyYLraNGXG6F6AADwXot79V3kBoWiEGjYvmiqW7HUwFDEARBuCpt
      rztN94SZPy/KxKBRU9U7wts17SSFBKBXq1DJElEBeiRAq5JRyxJlbX181tJLqEEnAoAgCMLV
      am1yNFqV7KnyiQ/y47qUGHomzGRHhdA28qdFuc7WLiOqgARBEK5SlT3DJIYE8E7daTR/nCKi
      fdTE6TETTcMTRPrrebOqBavTxYH2fhxuN25FQQH6TRYRAARBEK5WJruTuoExAPRqFXtaexmY
      tAIwbLYxbP7TErpG+8xBgQ7EG4AgCMI1wep0Yb1AV9AvEm0AgiAIC5QIAIIgCAuUCACCIAgL
      lAgAgiAIC5QIAIIgCAuUCACCIAgLlAgAgiAIC5QIAIIgCAuUCACCIAgL1BULAC7XxY1YEwRB
      EHzrnAGgt7eXn/70pzidTgAUReHNN9/k0KFDF0xUURS6u7vPu82vfvUrAHbu3InRaMRqtTI0
      NHTBtLdv385zzz3Hiy++SG1t7Tm36+7uRlEu37pERqORX/ziF/z4xz9m7969s96vp6fHk8+W
      lhaOHz8+5zwoikJPT8+c9xcEYWE5ZwAYGxujvb2dqqoqAEwmExUVFTQ3NwNgt9vp7u7GZrN5
      fne73RiNRiYmJnj99deZmJjA4XDgcrkYHh5mbGzMU9hNTEwAsGzZMgwGA62trezcuZOJiQls
      NptnrVS3243VavXkq6mpiUcffZT77ruP3/72t5hMJtxuNyMjI4yOjqIoCjabjVdeecUTWKbP
      p7+/33P8yclJBgcHPQEOwOFwYLFY6OnpwW7/00LXo6OjDAwMoCgKbrcbu92OzWbDYrEAUwXv
      s88+y4YNG/jud79LZmYmAGazme7ubs+5WK1WrFYrPT09OBwObDYbr776KuPj41itVuLi4sjM
      zERRFKxWK2NjYwwODnrybDKZ6Onpwe12e7YxGo2e8zIajbz22mtMTEzMOC9BEISzOe9kcGvX
      ruXAgQOUlJRw4MAB1q1bx8TEBBaLhR/96EdkZ2dTV1fH9773PT788EOMRiMDAwPk5ubS3NzM
      9u3bue6662hpaaGzs5ORkREKCwu58cYbPcfYvn07mzdvZt++fTQ2NiLLMkuXLqWiooI///M/
      p7Kykr6+Pm6//XZgaqUnjUaDwWAgJCQEh8PBwYMHaWhowGQykZaWRmJiIi0tLWzbto38/Hxc
      Lhd79+4lKCiI8PBwli9fzpYtW0hLSyMsLIw77rgDgAMHDrBr1y4WL15MU1MT//zP/8yxY8c4
      evQoer2e+Ph4SkpKeOONNxgfH+erX/0qJSUljI+PExAQ4Cn4Y2Ji6OnpYcuWLWRmZtLe3s7f
      //3f89xzz6HRaAgKCsJqtbJu3TrPdVq6dCl6vZ7e3l6uu+46nnjiCVavXk1bWxsPP/wwGo2G
      N998k+TkZMxmM4888gh//dd/TWFhIcPDw2zYsIHh4WFPerfccsuMFbEEQRC+6LwBwM/PD5fL
      hc1mo6amhnvvvZd9+/Zx7Ngx1q9fz7p166isrGTfvn04HA4CAwN55JFHcLlcNDc389BDDwEQ
      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
      qsJkMnl+b25upre3d1b7ut1uz8p4Y2NjVFdXz/j/5eXlX1qE6UzV1dUcOnSI5ubmGSvsnU99
      fT2AZznV6Tw7HI5Z7Q/Q1dXFoUOHOHHiBFar9azbnHlu56IoClVVVXz44YczriFATU2NZ8Gq
      4eFhJicvfq6lkydPcujQIc+/6fTOx+VynfP/XVQAUBRl1jdFEISr09atW/nkk0+AqTW7t2zZ
      wp49e4CpMuCLBcqZ5UJFRYWn0DeZTJ6CfLpgrq6uPm8A2LZtG2q1muPHj/PWW2+d95jTbDYb
      AK+99prnb+cqxOHsBfmHH36IzWZjeHiYn/zkJzOWtJ12/PjxGd2jz5av06dPs3fvXhISEnj1
      1Vdn/L+tW7eyfft2T1qnT58+ZzrnIssy4+PjlJWVoVKpPEvpnuv6KIoy47p88ZwuutVO1BgJ
      wrUtNTWVjo4OFEWhubmZrKwsYGqVv1/+8pdoNBpSUlK44447ePrppzEYDAwMDPDoo4+yc+dO
      3G43ra2tlJaWsm/fPrq6ujCbzXz3u98FpsqQX/7ylzz66KNYLBZ27NjBfffdB0BgYCAlJSUU
      Fxfzs5/9jJGREbZu3YpGoyE3N5d169bx3HPPodPpyMrKYuPGjTQ0NCBJEvv378fhcLB+/Xrq
      6+vJzs7m5Zdf5uGHH8bhcLBt2zZKSkp4//33cbvdbN68mUWLFgFTS7EWFBQQFBREVVUVDoeD
      Dz/8kO7ubiYnJ3n88cd5//33kWWZlpYWbr31VrZs2eK5Frfccosn/w6HAz8/vy+tGpiUlMTQ
      0BAjIyOevw0NDfH666+jUqlYs2YN/f39FBUVYbPZePPNN/mHf/gH3nnnHTZu3EhAQAC5ublE
      REQwMjJCaWkpdrudF154AVmWiY+P57bbbuOFF15AURSSk5MJDAz0XJe7777bE1Sn75/otiEI
      wgySJBEfH093dzeHDx9m9erVVFVVsXv3bm6//XaysrJ4/vnnMZvNqNVqnnzySQ4fPkxPTw8b
      NmxAq9VSUlJCV1cXK1asYPPmzbz00kuep3JJkvD396e5uZnTp0+TlpbmOfbg4CBvv/02vb29
      FBQU8MEHH/DAAw8QFxfHM888Q2FhIRaLha9//etEREQA0N/fz3333UdBQQGPPfYYkiTx0Ucf
      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
    </thumbnail>
    <thumbnail height='384' name='Cardiovascular Complications' width='384'>
      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
      Tp1SnE6nMjw8rFy+fFmprKxUvF6vMjQ0pFy9ejWsGLdv377rs4ODg0pra6v674aGBmVkZERx
      OBzK6dOn73scMQQUZaFQiPj4eDQaDampqTidzkU5rkajoaqqijNnzuD1ejGbzQBYLBY8nkfb
      gnLt2rWYTCZg7pn5uLg4NBoNGRkZTE1NYTKZ0Gg0pKenMzMzE/b5l5aWqr+4A4EAXq+XEydO
      0NjYiM1mY/XquVXUMTEx99yU52GYzWbGx8e5dOkSZWVl6vGysrKYnp5Gp9Oh1+vJzMzEZrOF
      FcNisWC32zl27Bi7du1Cr9fT0tLCsWPHsFqtyLKM0WgkLS3tkerf4/Hw2WefMTg4SFpaWsTq
      pb+/n8OHD5OdnR2RelEUhbq6Op5//nk0Gg3BYFD9jqSkpDA+Pk5KSgoajYaEhAQCgUBYZfF6
      vfT396s9TL/fj9Vq5dixY9y4cUPt0ej1erRabdjXmE6no6WlhfLycqxWK4FAgFWrVpGamorL
      5UJRFOLi4khLS8PhcIQVIxQKMTIyovZgFEVhYGCA8vJyRkZGcDqdpKamsmrVqgdufiUWgkWZ
      TqdTK8Ttdj9w+8iF+OEPfwhAXV0dbreb2dlZAHw+36IuPpn/ggK4XC7S09MJBoMoiqJ2oxdD
      bGwsr7/+OgDHjx9ny5YtTE9PA3OLncIdAvB4PPT09PDqq6+i0+mQZRlZlnG5XMTHx2O1WlEU
      5ZHqZmpqitraWg4ePEhcXBwWi4VNmzZht9tpampSy/CodWM2m3n99de5du0at27dili9rF27
      lry8PI4fP86OHTvuqpfNmzdjtVrVMoVTL9PT09hsNi5evEhvby+bNm1Sb/IejweLxcKtW7eA
      P6TtCEd7ezvBYJDLly8zOztLSUkJf/zHf4wsy5SXl1NYWKhuCDW/OjwcpaWlbNq0CZ/Px7lz
      59TvzHx9z87OIsvyI9V/VlYWr776qjpEd/DgQfLz8wmFQlRUVGCxWPD5fGg0mgcOY4oGIMrm
      VzaePXsWr9er/rJ+FIqicPz4cfXX7e7du1EUhXPnzjEzM6P2BsLV2NhIZ2cnQ0ND7Nixg6Sk
      JM6cOYPdbueJJ56gt7eXs2fPYrPZ2LFjR1gxAoEAFy9eZGBggNraWjZs2MCVK1dISEhAq9WS
      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
      hBXq/wOAfuzcfccHNAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Death Rate' width='384'>
      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
      AAAYRQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAA
      gFEEAACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAY
      RQAAwCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEE
      AACMIgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAA
      wCgCAABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACM
      IgAAYBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgC
      AABGEQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAA
      YBQBAACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABG
      EQAAMIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYBQB
      AACjCAAAGEUAAMAoAgAARhEAADCKAACAUQQAAIwiAABgFAEAAKMIAAAYRQAAwCgCAABGEQAA
      MIoAAIBRBAAAjCIAAGAUAQAAowgAABhFAADAKAIAAEYRAAAwigAAgFEEAACMIgAAYFToUq/o
      eZ5837/o98LZId2xtGbShppONbNLNTY2dtm3XzCrUKX52ZM40fSoLItMaN0zC7MVci6+PVzp
      XNeV713ebcNBaVbBJT9trii5QV32Y+77V++6IyFnYtt6QUhj3tW3rednBz913Y7/cXv1D0km
      kwoGg5My2NXEdV3WbYjv+/J9X4GAvYNjq4+51XV7nnfpRwCSTN5JVjcO13UVCATkOE6mR5lW
      nufJ8zyzjznrtsP3/Ut/D8DajmAc67bH6tpZty2O41z6KSAAwLVlSk90+r6v+vp67dmzR52d
      nZd8u7q6Oo2OjkqSEomEDh48+LFvQEtSLBbT2bNnJzzvVHv//fe1b98+1dfXy3Xdj3z/0KFD
      F71dS0vLRa9/NTlx4oQ6Ojo+8TpjY2Oqr6+fpok+uzNnzsjzzr97fPr06Y9sk77vq6mpSZKU
      SqU+8Wd5nqcjR46kb9fe3i7f93X27FmNjIyoqanpE7f5D/+9hw8f/qzLmVatra3avXu3mpub
      P3VdV8vz+VIlEgl1dXXJ9/2P3S7a29vV29s7zZNNcQBOnjypc+fO6dZbb9XIyIh839fg4KD6
      +vrk+76SyaTi8bi6urrSTyxJOnDgQHpHcOzYMR04cECe52l0dFTd3d1KpVLyPE+JRELRaFSO
      4ygcDn/k543/ff39/Zf8ZJpKx48f1+LFi+V5nt5++21JUn9/vwYHByWd38FI53cOvb29Ghoa
      kud5ikQichwnHcXR0VG5rquRkRF1dXUpmUyqq6vrU3c6meJ5no4dO6Z3331X0vmd4/jjNP5b
      CsPDw+rp6VFHR4d839fAwIDOnTsn3/eVSCTkuq6i0ahGR0eVSqUUi8WUTCbV3d2tRCIxLes4
      evRoOsTjO9zR0VH19fUpGo1KkvLz8xWPx/XKK6+k54/FYurp6Ulvg+NfjwdxfAcei8W0b98+
      5ebmKj8/P/3ze3t7FYvF0vddd3e3RkZGJJ3fufT09KitrU2SNDIyou7ubnmep7GxMcVisQu2
      kYn8NszlGh0d1bvvvquVK1ee/w0s379g25X+/+PveZ5CoZByc3Plum56O7lSt+1LMR70WCym
      bdu2aXBwML2N9/f3S5IGBgYUi8XSj6vruun7ZioFt2zZsmWqfvjY2Jjq6upUXl6uqqoqjY6O
      6vDhw+ro6FBPT486OztVX1+fviNmzZolSero6FAsFtOCBQt08OBBFRUVad68eTp06JCi0aje
      eecdzZ07V1u3blVvb69KSkrU3t6uvr4+vffee+lXEK7r6uDBg+rt7dXw8LBmzJgxVUu9JPX1
      9crPz1dra6uqqqrU3d2tpqYmNTc3q7CwUB0dHZo/f75effVVxeNxHThwQDfeeKMOHjyoqqoq
      /fOf/1RNTY12796t3Nxc7dy5U4lEQm+88YZCoZCOHz+umpor79dx+/r6FI/HlUwmVVlZqVOn
      Tulf//qXUqmUWltbFQgE9PbbbyuVSimZTMrzPB09elSdnZ1KJBJqaWnRgQMHFAgEdPDgQTU0
      NKi4uFinT5/W4OCg9u7dq5tuumnKz+U2NzerurpawWBQJ06cUE1NjZ577jkFAgHt379fS5Ys
      0d69e1VYWKhDhw4pJydH4XBYe/bsUTweV29vr8bGxrR37165rqvR0VHV1NTI930dOHBAzc3N
      Wr9+vXJycvTWW2+psrJSzz33nEKhkPbv36/58+fr5ZdfTn9dXV2tV155RcFgUD09PZozZ45e
      f/11jY2NqampSVlZWdq1a5dGRka0d+9eSedflFVXV0/p/XQxdXV1ysvL07x58+S6rp5//nnl
      5uZq37596ef5wMCAjh8/rrKyMjU1NSkYDGrbtm1yHEeNjY1X5LZ9KUZHR9XT06NQKKSjR48q
      Ly9PkUhE9fX1amtr0/DwsBzHST/uNTU1OnLkiDzPU1FR0ZTONqVHAOXl5brnnnvU3t6u1157
      TY7jKB6Py/M8dXZ2yvM8rVmzRrfffruGhobSt3McR/n5+ers7FR+fr4cx5Hv+/I8T0NDQxoY
      GJAklZWV6e6771YoFEr/9saqVav0hS98QdFoVI2NjVq3bp2+9KUvpV9dZ9L4GiKRiGKxmI4f
      P65AIKCcnBydPHkyfR3f97V69WrNnDlTktKvOj/4p+/7WrJkiVatWqWqqiqtWLHigqOoK8mh
      Q4d07tw59ff3q7m5WZ7nafny5VqzZo3i8biOHTum9evXa9myZZLO72jXrl2rO++8U21tbRob
      G9Ptt9+uW265Ra7rav369aqqqkq/ihoeHp62V4jjr+LH/5w9e7ZWr16t0tJSSecfm1mzZmn2
      7Nlavny5Tp06ld5+T58+rffff19f+cpX0msd57ruBaf5xv+7qqpKq1atUlFRkTo7O7Vo0SIt
      W7ZMkUhELS0tWrlypZYtW6b8/Hy1tLRo1apVWr16dfqIu7a2VitXrkxvI5k4lRgKhXTfffcp
      lUrpb3/7m1zX1dy5c7V8+XKVl5enXxzE4/H0UdP4Efwtt9yi1atXX7Hb9mdRWVmpOXPmaOnS
      pQoEAorFYgoEAhec7lq4cKEaGhrU3t6u2bNnT/lMUxqAnp4exWIx3XzzzYrH42pqalJFRYVu
      uummT/0969raWv31r3/V4sWLJSl9+mfFihUKh8OSpJKSkk981VdSUqK2tjb19PQoJydn8hZ2
      mbKzszV79mxVVlaqq6tLRUVFqqys1LJlyzR//vz09WKxmNrb2z9yHjSRSGhkZCQdwKuB7/uK
      RqP68pe/rA0bNqilpeUj1wmHw+rs7EwfDhcWFurMmTPq7OxUXl6eAoGACgsLJUm5ubkKh8Py
      PE/Nzc1atWqVCgoKpmUtkUhE7e3tikajn3p4nkwmNTIyopKSEpWUlKi2tja97XZ1dencuXMX
      XL+srExf+9rXtH379o89TVNcXKympqb0kU9+fr7Onj2r4eFhJRIJXXfddWpra1M0Gs3IqZ6P
      MzIyorNnz2revHnKysqS53np03h9fX3q7+9XTk6Obrnllmv+1zFHR0cVj8d19OhR1dTUaNGi
      RRd8f/78+ekzBdNxX0zpKSDp/GmPs2fPasWKFaqoqFBjY6OSyaTmzp2rsrIyFRQUKBQKKTs7
      O324k5WVpYqKCuXk5OiGG25QVlaWysvLNTw8rPb2dlVWVmrGjBnKzs5WYWGhHMdRbm6uCgsL
      lZ+fr+zsbIVCIS1atEjHjx9XT0+PVq9erVAos/+SMZFIqLW1VYlEQitWrFBlZaVOnDihrq4u
      zZkzR5FIRCUlJZo7d67OnDmjWCymefPmKRwOq7i4WL7vq6GhQRUVFZozZ47C4bAikUj6fsjO
      zlZxcXFG1/hhY2Njys/PV3l5uXJzcxUIBFRWVqZIJKLc3FxlZWVp8eLFOnz4sKLRqKqrq7Vw
      4UK9//77GhgY0MqVK5WTk6PCwkIFg0FlZWWpuLhYjnP+X3eePHlSs2fPVkVFxZT/462ZM2eq
      oaFBra2tWrNmTXr+4uLiC/4sKSlRMBhUQ0ODamtrNTQ0pFOnTqmkpEQLFizQ0aNHNTg4qOrq
      6vTjlZWVpRkzZqi4uFie56mgoEAlJSXKyspSUVFR+jlRXFysc+fOaWhoSKtXr1ZXV5dOnz6t
      qqoq1dTUqK+vL30kkJeXd9FtZKpPK3yY4zhqampSa2urFi9erKKiIu3fv18jIyNatmyZZsyY
      odbWVkWjUVVVVamsrCz9mIfDYeXl5aXv36vR+P6poKBAruuqtbVVtbW1Onr0qHzf15w5c1Ra
      WqpIJKJwOKzm5mbdfvvtys3NnfLZ/h8V3Xq1w1Xr5wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='208' name='Global Numbers' width='384'>
      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
      b7qAtmzZQlJSEgMGDHghAkB+fj6LFy/myJEjGttNTEzIzs6moKCAvLw8rScBQahuWVlZhIaG
      0rNnT+bMmaPRSrW1taVHjx707t2bKVOmcOjQIY0AsGLFCvbt2wdAjx49mDRpElOnTq2UfLVv
      356333671Mc/fPiwXOnUduzYQWRkJCNGjGD69OlSV4+RkRFt2rShTZs2ZTrfwYMHSUpKwt3d
      nW+//VbaPmDAAOrVq8fnn3/Otm3bGDJkCAYGBtL+itzTKg8AQ4cO1Xoi2Ldvn9RUWbBgAc2a
      NdPYb2trW2X5qyq//fabVPnL5XI+++wz+vfvj729PdnZ2dy5c4ft27dTo4bexGjhJVGzZk2+
      //573N3diz3m9ddfx8rKivv372tsT0xMpFOnTnz++ee0bt26UvPl6OhYpuPVAaCs6QCSk5M5
      ePAgtra2GpV/eeXn53P48GGMjIx0Vt7t27enX79+HD9+nAsXLtCnTx9pX0XuaZXXLmZmZpiZ
      mWlss7GxkX5u2LAhTk5OpTpXbGws0dHRNGrUCGtr60rNJxT2cyYlJaFSqbC2tq7wh6yWnp7O
      1q1bgcKnhVWrVtG1a1dpv7GxMZ07d6Zz584a/YmVkT+VSkVycjKmpqaYmpqWKl3lZ6AAACAA
      SURBVL+ZmZkEBQVhZWWFo6NjqZqYWVlZZGdnY2lpWWn3TXgx1K5du8TKHyAvL4+cnBysrKw0
      tk+fPp1XXnnlueSrcePGZTo+IiKiXOmg8Gk9JyeHUaNGVcrft7+/P0lJSfTt25fatWvrPOat
      t97i+PHjnDp1SiMAVOSevnSPlyqViu3bt7Nnzx5SU1Ol7XXr1uWTTz5hxIgR0jZ1Hx0UjqwD
      nDlzRuupZOfOnVJQ8vf358SJE1y6dInExESpAjY1NaVDhw5MmzYNBweHCpVhz549PHnyBAB3
      d3eNyv9pT/9xlTd/x48fZ9euXYSHh5OXlyel6dixI25ubgwcOFArTUBAAAsXLiQkJAT1XAEz
      MzPc3d2ZMmWKVt7i4uLYunUr58+flz4buVyOnZ0dffv2ZciQIf/K1pyg7X//+x9ZWVm0a9dO
      Y/vzqvyhalsA6oksb731VpnT6qLu6n399deLPaZz584YGhpqdQtX5J6+VAFAqVQydepULl++
      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
    </thumbnail>
    <thumbnail height='384' name='Hospitalized and ICU Patients' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Infection Rate' width='384'>
      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
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Monthly Pos Rate and New Tests' width='384'>
      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
      pCgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='New Cases' width='384'>
      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
      1KlTPPbYY5tW550kk0nW1tbw+/1YrVbtcNvS0pL2nPXpYLFYtOWprq5us0r+U+uHadfnoTv1
      otfrKSsr44cffqC6unoTq72lt7eX+vp6qqur0ev1KIrC2toa4XCYaDSKw+HA5/MxNTXF6uoq
      er2elZWV1B0C6urqYmxsjLq6OvLz8+nq6gKgtLQUp9OJw+HAYDBgtVqx2Wx0dHTgcDjwer2E
      QiEmJycpKyujsLAQs9msrazm5+fxer04nc5UlK0xGAw4nU50Oh0mkwlVVfH5fNhsNvLy8ujr
      60On01FbW4vBYMDhcKDX64nH4/T29lJYWEh5eTnBYJCpqSkqKiooKCjAbDZjsVjQ6XQEAgGq
      qqq08NgIWVlZWqBt3boVi8WCzWbDarXS09NDXl4epaWlmEwmcnNzsVqtrK6u0t/fT0FBAVar
      FYfDQVZWVsqnwd0sLy+zfft27HY7+fn5xGIxenp6CIVC7Ny5E6fTidFoJCcnB7gVtA6HA5PJ
      hN1u39Taf0+v12Oz2XA4HJSUlGCz2cjOziYvL4+uri4cDgelpaW4XC6GhobYv39/WgVbJBLh
      ypUrFBcXU1ZWhtFopLOzE6fTedv8lJWVhdvtRq/XMzQ0hNVqxeVybXb5t1lZWeHKlSt4PB5K
      SkrIysqiq6sLl8tFaWkpW7Zswel0YrfbmZ2dpbq6etOnRTQapbKyEovFgt1ux2QysbS0pK1H
      y8vLyc7OZn5+nnA4zN69e+nu7uZ/AFGgplQ5SJyXAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='Per Continent' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAMfklEQVR4nO3dX6iV9Z7H8e/ae/tvu0fdZmZTmn8a/2RFpunUgRkLurCLmIEm6Y9SV4FE
      oZFphGhSQQVeRBGJ00gUZAeOEMzATOWFEeYUlmjOOM4cM0eLTqWl2+1W9547OY2ew7HUdezz
      el0+a+3n910Pi/Xe61mL9TT6+vr6CoAojUaj0dLsIQBoDgEACCUAAKEEACCUAACEEgCAUAIA
      EEoAAEIJAEAoAQAIJQAAoQQAIJQA8IvQ29tbX331Ve3YsaO++eabs77/L774orZt21bHjx8/
      6/uGZhEALnjffvttrVixoubNm1cLFiyoefPm1bZt237y/j799NNavXp1HTt27OS2t99+u557
      7rnq6uo6GyOf4s0336wNGzack33DHyIAXNCOHz9eL7zwQm3ZsqUef/zxeuONN2rhwoU1ZMiQ
      k/fp7u6uQ4cO1el++byvr6+OHDnyo//s9+zZU+++++6Pts2fP79WrVpVHR0dP/r7Y8eO1ZEj
      R07Zb09PT33//fenXbO3t7cOHz78o9s2bdpUW7duPbMHDz9Tw/UAuJDt3bu37rrrrlq6dGnN
      mTOnGo3GyRfWo0eP1quvvlrr16+vY8eO1fTp0+uxxx6rESNG1GuvvVabN2+uAQMG1JYtW2rI
      kCG1YsWK2r17d7344ot18ODBGjVqVI0cObJWrlxZmzdvrg8//LCeeOKJ2rVrVz399NN13XXX
      1YYNG6qnp6fuv//+uvfee+v48eP161//utauXVs9PT01Y8aMWrJkSbW3t9eSJUtq6NChtWvX
      rtq3b19NmTKlnn322Xrqqadq48aN1draWsOHD6+ZM2fWkiVLmnxk+aVzPQAueLt3767+/fvX
      9OnTq9FoVFVVo9GoRqNR7733Xq1fv74WLVpUq1atqr1799Yrr7xSJ06cqAMHDtTOnTtrxowZ
      9eSTT1ZLS0u98847NXPmzJozZ06NHDmyHn300XrwwQdr2LBhdfDgwfryyy+rr6+vuru76/PP
      P6+2trZavnx5zZo1q9atW1dVVdu3b6/Vq1fXI488UmvWrKk9e/bUunXrqq+vr/bv31/79u2r
      +fPn14IFC+qTTz6pnTt31rx582r8+PF144031tKlS+uOO+5o5iElSFuzB4Cfo6urq1paWmrg
      wIGn3PbBBx/UTTfdVLfeemu1tLTUPffcU2vWrKmjR49WVdWkSZNq7ty51dvbW5MnT67u7u4a
      NWpUTZgwoTZt2lTXX399DRo06LTrtrW11QMPPFCDBw+u7777rj766KOqqtq8eXMNGzaspkyZ
      Uq2trTVt2rT6+OOPa968eVVVddttt9Wtt95ahw4dqpdffrmOHj1a06ZNq+HDh9eoUaPqhhtu
      OEdHCk4lAFzQRo8eXd3d3bVnz5665pprfnTbgQMHauLEiSffGQwbNqy6urqqt7f35H1+/13D
      2fD999/X/v376+GHHz65bfz48dXT03PKmtBsAsAF7YorrqjRo0fX2rVra9myZdXe3l5Hjhyp
      1tbWGjduXH322WfV1dVVgwYNqq1bt9Yll1xSbW1//Gnfr1+/Onz4cB04cKAGDBhwRi/YY8aM
      qc7OznrppZfq4osvrhMnTtQPP/xw2nco/3/N/fv314kTJ6rRaFRLi7OznHueZVzQ2tvba+HC
      hbVjx4667777atGiRXX33XfX1q1b6/bbb6+9e/fW4sWLa9myZfXWW2/V3Llza8CAAX90n+PH
      j6+urq5aunRpPf/88/Xdd9+dcp8/FIWbb765Bg8eXA899FA988wztWjRolq5cuVpvw30+669
      9tp6//33a/HixfX666//6QcAfobW5cuXL2/2EPBzXHbZZTV79uy66KKLatCgQXXLLbfUDTfc
      UJdeemnNmjWrDh06VP369av77ruvZs+eXS0tLTV48OCaMGFCjRkzphqNRnV0dNSkSZPq0ksv
      rc7Ozpo6dWo1Go0aOXJkTZ06tYYMGVJjx46tcePG1YABA+ryyy+vyZMnV2tra/Xv37/Gjh1b
      EydOrPb29rr55ptPfnYwderUuvPOO2vo0KHV2dlZV111VXV2dlZLS0tddNFFdfXVV1dHR0dN
      njy5RowYUS0tLXXllVfWuHHjmnxU+aVbsWLFCl8DBQjka6AAwQQAIJQAAIQ6qwHwS4kAF46z
      GgCfJwNcOJwCAgglAAChBAAglAAAhBIAgFACABBKAABCCQBAKAEACCUAAKEEACCUAACEEgCA
      UAIAEEoAAEIJAEAoAQAIJQAAoQQAIJQAAIQSAIBQAgAQSgAAQgkAQCgBAAglAAChBAAglAAA
      hGo7n4v967//d/3uYNf5XPJnG9S/rf7+b6Y0ewyAs+68BuDfPvqf2vnFN+dzyZ9tWMdAAQB+
      kZwCAgglAAChBAAglAAAhBIAgFACABBKAABCCQBAKAEACCUAAKEEACCUAACEEgCAUAIAEEoA
      AEIJAEAoAQAIJQAAoQQAIJQAAIQ6rxeFT3Tk6LHq7jnR7DHOSP+2lho8qH+zxwDOMQE4x958
      b3v9ZuN/NHuMM/Kra0bX4rt+1ewxgHPMKSCAUAIAEEoAAEIJAEAoAQAIJQAAoQQAIJQAAIQS
      AIBQAgAQSgAAQgkAQCgBAAglAAChBAAglAAAhBIAgFACABBKAABCCQBAKAEACCUAAKHamj0A
      vzz/+M9b6n+//qHZY5yRjvb+tfAf/rrZY8B5JQCcdTt2f107937b7DHOSGfHwGaPAOedAMBZ
      8C8f/ldt3Lqn2WOcsUV33lgjhrY3ewyaRADgLPjy28O1/bdfN3uMM9Zz7ESzR6CJfAgMEEoA
      AEIJAEAoAQAIJQAAoQQAIJQAAIQSAIBQAgAQSgAAQgkAQCgBAAglAAChBAAglAAAhHI9AOAn
      OXSkp/b97sK69Gdba0uN/8vOZo/xZ0MAgJ/ks91f11OvbWz2GGek8y8G1j8t/btmj/Fnwykg
      gFACABBKAABCCQBAKAEACCUAAKEEACCUAACEEgCAUAIAEEoAAEIJAEAoAQAIJQAAoQQAIJQA
      AIQSAIBQAgAQSgAAQgkAQCgBAAglAAChBAAglAAAhBIAgFACABBKAABCCQBAKAEACCUAAKEE
      ACCUAACEEgCAUAIAEEoAAEIJAEAoAQAIJQAAoQQAIJQAAIQSAIBQAgAQSgAAQgkAQCgBAAgl
      AAChBAAglAAAhBIAgFACABBKAABCCQBAKAEACCUAAKEEACCUAACEEgCAUAIAEEoAAEIJAEAo
      AQAIJQAAoQQAIJQAAIQSAIBQAgAQSgAAQgkAQCgBAAglAAChBAAglAAAhBIAgFACABBKAABC
      CQBAKAEACCUAAKEEACCUAACEEgCAUAIAEEoAAEIJAEAoAQAIJQAAoQQAIJQAAIQSAIBQAgAQ
      SgAAQgkAQCgBAAglAAChBAAglAAAhBIAgFACABBKAABCCQBAKAEACCUAAKEEACCUAACEEgCA
      UAIAEEoAAEIJAEAoAQAIJQAAoQQAIJQAAIQSAIBQAgAQSgAAQgkAQCgBAAglAAChBAAglAAA
      hBIAgFACABBKAABCCQBAKAEACCUAAKEEACCUAACEEgCAUAIAEEoAAEIJAEAoAQAIJQAAoQQA
      IJQAAIQSAIBQAgAQSgAAQgkAQCgBAAglAAChBAAglAAAhBIAgFACABBKAABCCQBAKAEACCUA
      AKEEACCUAACEEgCAUAIAEEoAAEIJAEAoAQAIJQAAoQQAIJQAAIQSAIBQAgAQSgAAQgkAQCgB
      AAglAAChBAAglAAAhBIAgFACABBKAABCCQBAKAEACCUAAKEEACCUAACEEgCAUAIAEKqt2QMA
      XCh2fP51/Xb/gWaPccb+9roravDA/qdsFwCAP9Gm7Xtr/fv/2ewxzti0vxp12gA4BQQQSgAA
      QgkAQCgBAAglAAChBAAglAAAhBIAgFACABBKAABCCQBAKAEACCUAAKEEACCUAACEEgCAUAIA
      EEoAAEIJAEAoAQAIJQAAoQQAIJQAAIQSAIBQAgAQSgAAQgkAQCgBAAglAAChBAAglAAAhBIA
      gFACABBKAABCCQBAKAEACCUAAKEEACCUAACEEgCAUAIAEEoAAEIJAEAoAQAIJQAAoQQAIJQA
      AIQSAIBQAgAQSgAAQgkAQCgBAAglAAChBAAglAAAhBIAgFACABBKAABCCQBAKAEACCUAAKEE
      ACCUAACEEgCAUAIAEEoAAEIJAEAoAQAIJQAAoQQAIJQAAIQSAIBQAgAQSgAAQgkAQCgBAAgl
      AAChBAAglAAAhBIAgFD/BwCLLO5YPIvmAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
